{"version":3,"file":"static/js/274.b4fd4cb1.chunk.js","mappings":"6JACe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXAD,GAAM,OAAcA,MACTD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAENF,CACT,C,mECbA,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GACvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GAC3CC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GACpD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,UACtD,KAAKM,EAAKM,KAAKC,MAAMP,EAAME,EAC7B,CACA,OAAOF,CACT,CACe,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAS,MAAQF,UAAUD,GAAKC,UAAUD,GAAK,CAAC,EACpDA,EAAI,EAAIb,EAAQL,OAAOqB,IAAS,GAAIC,SAAQ,SAAUxB,IACpD,OAAemB,EAAQnB,EAAKuB,EAAOvB,GACrC,IAAKE,OAAOuB,0BAA4BvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAAWhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GAC5JE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,GAC7E,GACF,CACA,OAAOmB,CACT,C,iECnBe,SAASQ,EAAeC,GACrC,IAAI5B,ECFS,SAAsB6B,EAAOC,GAC1C,GAAuB,YAAnB,OAAQD,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAIE,EAAOF,EAAMG,OAAOC,aACxB,QAAaC,IAATH,EAAoB,CACtB,IAAII,EAAMJ,EAAKK,KAAKP,EAAOC,GAAQ,WACnC,GAAqB,YAAjB,OAAQK,GAAmB,OAAOA,EACtC,MAAM,IAAIE,UAAU,+CACtB,CACA,OAAiB,WAATP,EAAoBQ,OAASC,QAAQV,EAC/C,CDPY,CAAYD,EAAK,UAC3B,MAAwB,YAAjB,OAAQ5B,GAAoBA,EAAMsC,OAAOtC,EAClD,C,oBELe,SAASwC,EAAQzC,GAG9B,OAAOyC,EAAU,mBAAqBR,QAAU,iBAAmBA,OAAOS,SAAW,SAAU1C,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqBiC,QAAUjC,EAAI2C,cAAgBV,QAAUjC,IAAQiC,OAAOW,UAAY,gBAAkB5C,CAC1H,EAAGyC,EAAQzC,EACb,C,4GCHM6C,GAAsBC,EAAAA,EAAAA,eAAc,CACtCC,mBAAoB,SAACC,GAAC,OAAKA,CAAC,EAC5BC,UAAU,EACVC,cAAe,UCNbC,GAAgBL,EAAAA,EAAAA,eAAc,CAAC,GCG/BM,GAAkBN,EAAAA,EAAAA,eAAc,MCLhCO,EAAgC,qBAAbC,SCGnBC,EAA4BF,EAAYG,EAAAA,gBAAkBC,EAAAA,UCD1DC,GAAcZ,EAAAA,EAAAA,eAAc,CAAEa,QAAQ,ICF5C,SAASC,EAAYC,GACjB,MAAuB,kBAARA,GACX1D,OAAOyC,UAAUkB,eAAezB,KAAKwB,EAAK,UAClD,CCAA,SAASE,EAAeC,GACpB,MAAoB,kBAANA,GAAkBC,MAAMC,QAAQF,EAClD,CCLA,SAASG,EAAoBH,GACzB,MAAoB,kBAANA,GAAqC,oBAAZA,EAAEI,KAC7C,CCFA,IAAMC,EAAuB,CACzB,UACA,cACA,aACA,aACA,WACA,YACA,QAEEC,EAAe,CAAC,WAASC,OAAKF,GCLpC,SAASG,EAAsBC,GAC3B,OAAQN,EAAoBM,EAAMC,UAC9BJ,EAAaK,MAAK,SAACC,GAAI,OAAKb,EAAeU,EAAMG,GAAM,GAC/D,CACA,SAASC,EAAcJ,GACnB,OAAOK,QAAQN,EAAsBC,IAAUA,EAAMM,SACzD,CCNA,SAASC,EAAuBP,GAC5B,IAAAQ,ECFJ,SAAgCR,EAAOS,GACnC,GAAIV,EAAsBC,GAAQ,CAC9B,IAAQU,EAAqBV,EAArBU,QAAST,EAAYD,EAAZC,QACjB,MAAO,CACHS,SAAqB,IAAZA,GAAqBpB,EAAeoB,GACvCA,OACAhD,EACNuC,QAASX,EAAeW,GAAWA,OAAUvC,EAErD,CACA,OAAyB,IAAlBsC,EAAMW,QAAoBF,EAAU,CAAC,CAChD,CDTiCG,CAAuBZ,GAAOa,EAAAA,EAAAA,YAAWnC,IAA9DgC,EAAOF,EAAPE,QAAST,EAAOO,EAAPP,QACjB,OAAOa,EAAAA,EAAAA,UAAQ,iBAAO,CAAEJ,QAAAA,EAAST,QAAAA,EAAS,GAAG,CAACc,EAA0BL,GAAUK,EAA0Bd,IAChH,CACA,SAASc,EAA0BC,GAC/B,OAAOxB,MAAMC,QAAQuB,GAAQA,EAAKC,KAAK,KAAOD,CAClD,CEVA,IAAME,EAAe,CACjBC,UAAW,CACP,UACA,WACA,aACA,WACA,OACA,cACA,aACA,aAEJC,KAAM,CAAC,QACPC,KAAM,CAAC,OAAQ,gBACfC,MAAO,CAAC,cACRC,MAAO,CAAC,aAAc,eAAgB,cACtCC,IAAK,CAAC,WAAY,QAAS,aAAc,eACzCC,IAAK,CAAC,QAAS,aAAc,oBAAqB,YAClDC,OAAQ,CAAC,cAAe,kBAAmB,mBAC3CC,OAAQ,CAAC,SAAU,aAEjBC,EAAqB,CAAC,EAAEC,EAAA,SAAArG,GAE1BoG,EAAmBpG,GAAO,CACtBsG,UAAW,SAAC9B,GAAK,OAAKkB,EAAa1F,GAAK0E,MAAK,SAACC,GAAI,QAAOH,EAAMG,EAAK,GAAC,EAE7E,EAJA,IAAK,IAAM3E,KAAO0F,EAAYW,EAAArG,GCZ9B,SAASuG,EAAYC,GACjB,IAAM5C,GAAM6C,EAAAA,EAAAA,QAAO,MAInB,OAHoB,OAAhB7C,EAAI8C,UACJ9C,EAAI8C,QAAUF,KAEX5C,EAAI8C,OACf,CCVA,IAAMC,EAAwB,CAK1BC,wBAAwB,EAKxBC,gBAAgB,GCZhBC,EAAK,ECDT,IAAMC,GAAqBlE,EAAAA,EAAAA,eAAc,CAAC,GCGpCmE,GAA2BnE,EAAAA,EAAAA,eAAc,CAAC,GCL1CoE,EAAwBjF,OAAOkF,IAAI,yBCwBzC,SAASC,EAAqBC,GAAoF,IAAjFC,EAAiBD,EAAjBC,kBAAmBC,EAAmBF,EAAnBE,oBAAqBC,EAASH,EAATG,UAAWC,EAAcJ,EAAdI,eAAgBC,EAASL,EAATK,UAChGJ,GCvBJ,SAAsBK,GAClB,IAAK,IAAM1H,KAAO0H,EACdtB,EAAmBpG,IAAI2H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBvB,EAAmBpG,IACnB0H,EAAS1H,GAGxB,CDgByB4H,CAAaP,GAuDlC,IAAMQ,GAAsBC,EAAAA,EAAAA,aAtD5B,SAAyBtD,EAAOuD,GAK5B,IAAIC,EACEC,GAAcN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,IACbtC,EAAAA,EAAAA,YAAWzC,IACX4B,GAAK,IACR0D,SAAUC,EAAY3D,KAElBxB,EAAaiF,EAAbjF,SACFiC,EAAUF,EAAuBP,GAYjC4D,EAAepF,OAAWd,EJ7C7BqE,GAAY,WACf,GAAII,EAAsBE,eACtB,OAAOC,GAEf,II0CUuB,EAAcb,EAAehD,EAAOxB,GAC1C,IAAKA,GAAYI,EAAW,CAOxB6B,EAAQqD,cEpDpB,SAA0Bb,EAAWY,EAAa7D,EAAO8C,GACrD,IAAuBiB,GAAWlD,EAAAA,EAAAA,YAAWnC,GAArCoF,cACFE,GAAcnD,EAAAA,EAAAA,YAAW5B,GACzBgF,GAAkBpD,EAAAA,EAAAA,YAAWlC,GAC7BuF,GAAsBrD,EAAAA,EAAAA,YAAWzC,GAAqBK,cACtD0F,GAAmBlC,EAAAA,EAAAA,UAIzBa,EAAsBA,GAAuBkB,EAAYI,UACpDD,EAAiBjC,SAAWY,IAC7BqB,EAAiBjC,QAAUY,EAAoBG,EAAW,CACtDY,YAAAA,EACAE,OAAAA,EACA/D,MAAAA,EACAiE,gBAAAA,EACAI,wBAAuBJ,IACW,IAA5BA,EAAgBvD,QAEtBwD,oBAAAA,KAGR,IAAMJ,EAAgBK,EAAiBjC,QA4BvC,OA3BAoC,EAAAA,EAAAA,qBAAmB,WACfR,GAAiBA,EAAcS,OAAOvE,EAAOiE,EACjD,IACAnF,GAA0B,WACtBgF,GAAiBA,EAAcU,QACnC,KACAxF,EAAAA,EAAAA,YAAU,WACN8E,GAAiBA,EAAcW,gBACnC,KAWgCC,OAAOC,wBACjC7F,EACAE,EAAAA,YACkB,WAChB8E,GAAiBA,EAAcc,gBAC/Bd,EAAcc,eAAeC,gBAErC,IACOf,CACX,CFCoCgB,CAAiB7B,EAAWY,EAAaJ,EAAgBX,GAKjF,IAAMiC,GAA2BlE,EAAAA,EAAAA,YAAW2B,GACtCwC,GAAWnE,EAAAA,EAAAA,YAAW5B,GAAaC,OACrCuB,EAAQqD,gBACRN,EAAgB/C,EAAQqD,cAAcV,aAEtCK,EAAgBuB,EAAUnC,EAAmBe,EAAcmB,GAEnE,CAKA,OAAQE,EAAAA,cAAoBvG,EAAcwG,SAAU,CAAEzJ,MAAOgF,GACzD+C,GAAiB/C,EAAQqD,cAAiBmB,EAAAA,cAAoBzB,GAAaL,EAAAA,EAAAA,GAAA,CAAIW,cAAerD,EAAQqD,eAAkBL,IAAqB,KAC7IV,EAAUE,EAAWjD,EAAO4D,EGvExC,SAAsBC,EAAaC,EAAeP,GAC9C,OAAO4B,EAAAA,EAAAA,cAAY,SAACC,GAChBA,GAAYvB,EAAYwB,OAASxB,EAAYwB,MAAMD,GAC/CtB,IACAsB,EACMtB,EAAcuB,MAAMD,GACpBtB,EAAcwB,WAEpB/B,IAC2B,oBAAhBA,EACPA,EAAY6B,GAEPjG,EAAYoE,KACjBA,EAAYrB,QAAUkD,GAGlC,GAMA,CAACtB,GACL,CHgDsDyB,CAAa1B,EAAapD,EAAQqD,cAAeP,GAAcM,EAAarF,EAAUiC,EAAQqD,eAChJ,IAGA,OADAT,EAAoBZ,GAAyBQ,EACtCI,CACX,CACA,SAASM,EAAW6B,GAAe,IAAZ9B,EAAQ8B,EAAR9B,SACb+B,GAAgB5E,EAAAA,EAAAA,YAAW0B,GAAoBD,GACrD,OAAOmD,QAA8B/H,IAAbgG,EAClB+B,EAAgB,IAAM/B,EACtBA,CACV,CIzEA,SAASgC,EAAkBC,GACvB,SAASC,EAAO3C,GACZ,OAAON,EAAsBgD,EAAa1C,EADQpG,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,GAE1D,CACA,GAAqB,qBAAVgJ,MACP,OAAOD,EAMX,IAAME,EAAiB,IAAIC,IAC3B,OAAO,IAAIF,MAAMD,EAAQ,CAMrBI,IAAK,SAACC,EAASzK,GAOX,OAHKsK,EAAeI,IAAI1K,IACpBsK,EAAeK,IAAI3K,EAAKoK,EAAOpK,IAE5BsK,EAAeE,IAAIxK,EAC9B,GAER,CCxCA,IAAM4K,EAAuB,CACzB,UACA,SACA,OACA,OACA,UACA,IACA,QACA,OACA,SACA,SACA,OACA,WACA,OACA,UACA,UACA,WACA,OACA,OACA,SACA,SACA,MACA,OACA,QACA,MACA,QC3BJ,SAASC,EAAepD,GACpB,MAKqB,kBAAdA,IAIHA,EAAUqD,SAAS,SAOvBF,EAAqBG,QAAQtD,IAAc,GAIvC,QAAQuD,KAAKvD,GAIrB,CC3BA,IAAMwD,EAAkB,CAAC,ECGzB,IAAMC,EAAqB,CACvB,uBACA,IACA,IACA,IACA,aACA,aACA,aACA,QACA,SACA,SACA,SACA,UACA,UACA,UACA,OACA,QACA,SAKEC,EAAiB,IAAIC,IAAIF,GCtB/B,SAASG,EAAoBrL,EAAGoH,GAAwB,IAApBjB,EAAMiB,EAANjB,OAAQ+B,EAAQd,EAARc,SACxC,OAAQiD,EAAeT,IAAI1K,IACvBA,EAAIsL,WAAW,YACbnF,QAAuBjE,IAAbgG,OACL+C,EAAgBjL,IAAgB,YAARA,EACvC,CCRA,IAAMuL,EAAgB,SAACtL,GAAK,OAAK4E,QAAQ5E,GAASA,EAAMuL,YAAY,ECE9DC,EAAiB,CACnBC,EAAG,aACHC,EAAG,aACHC,EAAG,aACHC,qBAAsB,eAEpBC,EAAgBZ,EAAmB5J,OCRzC,IAAMyK,EAAwB,SAACC,GAAK,OAAK,SAAChM,GAAG,MAAoB,kBAARA,GAAoBA,EAAIsL,WAAWU,EAAM,GAC5FC,EAAoBF,EAAsB,MAC1CG,EAAqBH,EAAsB,UCC3CI,EAAiB,SAAClM,EAAOmM,GAC3B,OAAOA,GAAyB,kBAAVnM,EAChBmM,EAAKC,UAAUpM,GACfA,CACV,ECPMqM,EAAQ,SAACC,EAAKC,EAAKzI,GAAC,OAAK0I,KAAKF,IAAIE,KAAKD,IAAIzI,EAAGwI,GAAMC,EAAI,ECExDE,EAAS,CACX1B,KAAM,SAACjH,GAAC,MAAkB,kBAANA,CAAc,EAClC4I,MAAOC,WACPP,UAAW,SAACtI,GAAC,OAAKA,CAAC,GAEjB8I,GAAKlF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ+E,GAAM,IACTL,UAAW,SAACtI,GAAC,OAAKuI,EAAM,EAAG,EAAGvI,EAAE,IAE9B+I,GAAKnF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACJ+E,GAAM,IACTK,QAAS,ICPPC,EAAW,SAACjJ,GAAC,OAAK0I,KAAKQ,MAAU,IAAJlJ,GAAc,GAAM,EACjDmJ,EAAa,uBACbC,EAAa,8FACbC,EAAmB,+FACzB,SAASC,GAAStJ,GACd,MAAoB,kBAANA,CAClB,CCVA,IAAMuJ,GAAiB,SAACC,GAAI,MAAM,CAC9BvC,KAAM,SAACjH,GAAC,OAAKsJ,GAAStJ,IAAMA,EAAEyJ,SAASD,IAAiC,IAAxBxJ,EAAE0J,MAAM,KAAKnM,MAAY,EACzEqL,MAAOC,WACPP,UAAW,SAACtI,GAAC,SAAAO,OAAQP,GAACO,OAAGiJ,EAAI,EAChC,EACKG,GAAUJ,GAAe,OACzBK,GAAUL,GAAe,KACzBM,GAAKN,GAAe,MACpBO,GAAKP,GAAe,MACpBQ,GAAKR,GAAe,MACpBS,IAAkBpG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjBgG,IAAO,IACVhB,MAAO,SAAC5I,GAAC,OAAK4J,GAAQhB,MAAM5I,GAAK,GAAG,EACpCsI,UAAW,SAACtI,GAAC,OAAK4J,GAAQtB,UAAc,IAAJtI,EAAQ,ICb1CiK,IAAGrG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF+E,GAAM,IACTL,UAAWI,KAAKQ,QCAdgB,GAAmB,CAErBC,YAAaN,GACbO,eAAgBP,GAChBQ,iBAAkBR,GAClBS,kBAAmBT,GACnBU,gBAAiBV,GACjBW,aAAcX,GACdY,OAAQZ,GACRa,oBAAqBb,GACrBc,qBAAsBd,GACtBe,wBAAyBf,GACzBgB,uBAAwBhB,GAExBiB,MAAOjB,GACPkB,SAAUlB,GACVmB,OAAQnB,GACRoB,UAAWpB,GACXqB,KAAMrB,GACNsB,IAAKtB,GACLuB,MAAOvB,GACPwB,OAAQxB,GACRyB,KAAMzB,GAEN0B,QAAS1B,GACT2B,WAAY3B,GACZ4B,aAAc5B,GACd6B,cAAe7B,GACf8B,YAAa9B,GACb+B,OAAQ/B,GACRgC,UAAWhC,GACXiC,YAAajC,GACbkC,aAAclC,GACdmC,WAAYnC,GAEZoC,OAAQtC,GACRuC,QAASvC,GACTwC,QAASxC,GACTyC,QAASzC,GACTZ,MAAAA,EACAsD,OAAQtD,EACRuD,OAAQvD,EACRwD,OAAQxD,EACRyD,KAAM7C,GACN8C,MAAO9C,GACP+C,MAAO/C,GACPgD,SAAU9C,GACV+C,WAAY/C,GACZgD,WAAYhD,GACZiD,WAAYjD,GACZlC,EAAGkC,GACHjC,EAAGiC,GACHhC,EAAGgC,GACHkD,YAAalD,GACb/B,qBAAsB+B,GACtBmD,QAASlE,EACTmE,QAASjD,GACTkD,QAASlD,GACTmD,QAAStD,GAETuD,OAAQnD,GAERoD,YAAavE,EACbwE,cAAexE,EACfyE,WAAYtD,IC9DhB,SAASuD,GAAgBC,EAAOC,EAAcC,EAASC,GACnD,IAAQC,EAA4CJ,EAA5CI,MAAOC,EAAqCL,EAArCK,KAAMxF,EAA+BmF,EAA/BnF,UAAWyF,EAAoBN,EAApBM,gBAE5BC,GAAe,EACfC,GAAqB,EAErBC,GAAkB,EAOtB,IAAK,IAAMjS,KAAOyR,EAAc,CAC5B,IAAMxR,EAAQwR,EAAazR,GAI3B,GAAIiM,EAAkBjM,GAClB6R,EAAK7R,GAAOC,MADhB,CAKA,IAAMiS,EAAYjE,GAAiBjO,GAC7BmS,EAAchG,EAAelM,EAAOiS,GAC1C,GAAI/G,EAAeT,IAAI1K,GAAM,CAKzB,GAHA+R,GAAe,EACf1F,EAAUrM,GAAOmS,GAEZF,EACD,SAEAhS,KAAWiS,EAAUnF,SAAW,KAChCkF,GAAkB,EAC1B,MACSjS,EAAIsL,WAAW,WAEpB0G,GAAqB,EACrBF,EAAgB9R,GAAOmS,GAGvBP,EAAM5R,GAAOmS,CArBjB,CAuBJ,CAiBA,GAhBKV,EAAapF,YACV0F,GAAgBJ,EAChBC,EAAMvF,UTtClB,SAAwBA,EAASjF,EAAqEgL,EAAoBT,GAOtH,IAPyI,IAAAU,EAAAjL,EAAxGkL,2BAAAA,OAA0B,IAAAD,GAAOA,EAAAE,EAAAnL,EAAEoL,mBAAAA,OAAkB,IAAAD,GAAOA,EAEzFE,EAAkB,GAKbrR,EAAI,EAAGA,EAAI0K,EAAe1K,IAAK,CACpC,IAAMpB,EAAMkL,EAAmB9J,GAC/B,QAAuBc,IAAnBmK,EAAUrM,GAAoB,CAC9B,IAAM0S,EAAgBjH,EAAezL,IAAQA,EAC7CyS,GAAmB,GAAJnO,OAAOoO,EAAa,KAAApO,OAAI+H,EAAUrM,GAAI,KACzD,CACJ,CAaA,OAZIsS,IAA+BjG,EAAUT,IACzC6G,GAAmB,iBAEvBA,EAAkBA,EAAgBE,OAG9BhB,EACAc,EAAkBd,EAAkBtF,EAAW+F,EAAqB,GAAKK,GAEpED,GAAsBJ,IAC3BK,EAAkB,QAEfA,CACX,CSW8BG,CAAepB,EAAMnF,UAAWqF,EAASO,EAAiBN,GAEvEC,EAAMvF,YAKXuF,EAAMvF,UAAY,SAOtB2F,EAAoB,CACpB,IAAAa,EAA2Df,EAAnDd,QAAAA,OAAO,IAAA6B,EAAG,MAAKA,EAAAC,EAAoChB,EAAlCb,QAAAA,OAAO,IAAA6B,EAAG,MAAKA,EAAAC,EAAmBjB,EAAjBZ,QAAAA,OAAO,IAAA6B,EAAG,EAACA,EACrDnB,EAAME,gBAAkB,GAAHxN,OAAM0M,EAAO,KAAA1M,OAAI2M,EAAO,KAAA3M,OAAI4M,EACrD,CACJ,CCvEA,IAAM8B,GAAwB,WAAH,MAAU,CACjCpB,MAAO,CAAC,EACRvF,UAAW,CAAC,EACZyF,gBAAiB,CAAC,EAClBD,KAAM,CAAC,EACV,ECCD,SAASoB,GAAkB9R,EAAQI,EAAQiD,GACvC,IAAK,IAAMxE,KAAOuB,EACTgK,EAAchK,EAAOvB,KAAUqL,EAAoBrL,EAAKwE,KACzDrD,EAAOnB,GAAOuB,EAAOvB,GAGjC,CAQA,SAASkT,GAAS1O,EAAO6D,EAAarF,GAClC,IACM4O,EAAQ,CAAC,EAMf,OAFAqB,GAAkBrB,EALApN,EAAMoN,OAAS,CAAC,EAKEpN,GACpCtE,OAAOiT,OAAOvB,EAdlB,SAA+BxK,EAAwBiB,EAAarF,GAAU,IAA5C2O,EAAiBvK,EAAjBuK,kBAC9B,OAAOrM,EAAAA,EAAAA,UAAQ,WACX,IAAMkM,EAAQwB,KAEd,OADAzB,GAAgBC,EAAOnJ,EAAa,CAAEiK,4BAA6BtP,GAAY2O,GACxEzR,OAAOiT,OAAO,CAAC,EAAG3B,EAAMK,KAAML,EAAMI,MAC/C,GAAG,CAACvJ,GACR,CAQyB+K,CAAuB5O,EAAO6D,EAAarF,IACzDwB,EAAM6O,gBAAkB7O,EAAM6O,gBAAgBzB,GAASA,CAClE,CACA,SAAS0B,GAAa9O,EAAO6D,EAAarF,GAEtC,IAAMuQ,EAAY,CAAC,EACb3B,EAAQsB,GAAS1O,EAAO6D,EAAarF,GAoB3C,OAnBIwB,EAAMqB,OAA+B,IAAvBrB,EAAMgP,eAEpBD,EAAUE,WAAY,EAEtB7B,EAAM8B,WACF9B,EAAM+B,iBACF/B,EAAMgC,mBACF,OAEZhC,EAAMiC,aACa,IAAfrP,EAAMqB,KACA,OAAM,OAAAvB,OACgB,MAAfE,EAAMqB,KAAe,IAAM,WAEzB3D,IAAnBsC,EAAMsP,WACLtP,EAAMuP,OAASvP,EAAMwP,YAAcxP,EAAMyP,YAC1CV,EAAUO,SAAW,GAEzBP,EAAU3B,MAAQA,EACX2B,CACX,CChDA,IAAMW,GAAmB,IAAI9I,IAAI,CAC7B,UACA,OACA,WACA,UACA,QACA,SACA,WACA,aACA,oBACA,kBACA,SACA,UACA,yBACA,4BACA,kBACA,wBACA,mBACA,sBACA,WACA,cACA,SACA,YACA,2BACA,kBACA,sBACA,SACA,SACA,eACA,aACA,kBACA,kBACA,eACA,aAUJ,SAAS+I,GAAkBnU,GACvB,OAAQA,EAAIsL,WAAW,UAClBtL,EAAIsL,WAAW,SAAmB,cAARtL,GAC3BA,EAAIsL,WAAW,WACftL,EAAIsL,WAAW,UACftL,EAAIsL,WAAW,UACf4I,GAAiBxJ,IAAI1K,EAC7B,CCtDA,IACiCoU,GAD7BC,GAAgB,SAACrU,GAAG,OAAMmU,GAAkBnU,EAAI,EAoBpD,KAnBiCoU,GAyBLE,QAAQ,0BAA0BvH,WArB1DsH,GAAgB,SAACrU,GAAG,OAAKA,EAAIsL,WAAW,OAAS6I,GAAkBnU,GAAOoU,GAAYpU,EAAI,EAsB9F,CACA,MAAOuU,IACH,CC9BW,SAASC,GAAyBjT,EAAQkT,GACvD,GAAc,MAAVlT,EAAgB,MAAO,CAAC,EAC5B,IACIvB,EAAKoB,EADLD,ECHS,SAAuCI,EAAQkT,GAC5D,GAAc,MAAVlT,EAAgB,MAAO,CAAC,EAC5B,IAEIvB,EAAKoB,EAFLD,EAAS,CAAC,EACVuT,EAAaxU,OAAOQ,KAAKa,GAE7B,IAAKH,EAAI,EAAGA,EAAIsT,EAAWpT,OAAQF,IACjCpB,EAAM0U,EAAWtT,GACbqT,EAAS1J,QAAQ/K,IAAQ,IAC7BmB,EAAOnB,GAAOuB,EAAOvB,IAEvB,OAAOmB,CACT,CDRe,CAA6BI,EAAQkT,GAElD,GAAIvU,OAAOS,sBAAuB,CAChC,IAAIgU,EAAmBzU,OAAOS,sBAAsBY,GACpD,IAAKH,EAAI,EAAGA,EAAIuT,EAAiBrT,OAAQF,IACvCpB,EAAM2U,EAAiBvT,GACnBqT,EAAS1J,QAAQ/K,IAAQ,GACxBE,OAAOyC,UAAUiS,qBAAqBxS,KAAKb,EAAQvB,KACxDmB,EAAOnB,GAAOuB,EAAOvB,GAEzB,CACA,OAAOmB,CACT,CEbA,SAAS0T,GAAWC,EAAQC,EAAQ9F,GAChC,MAAyB,kBAAX6F,EACRA,EACAlH,GAAGvB,UAAU0I,EAAS9F,EAAO6F,EACvC,CCJA,IAAME,GAAW,CACbD,OAAQ,oBACRE,MAAO,oBAELC,GAAY,CACdH,OAAQ,mBACRE,MAAO,mB,qFCDX,SAASE,GAAc3D,EAAKpK,EAEfsK,EAAS0D,EAAUzD,GAAmB,IAFnB0D,EAAKjO,EAALiO,MAAOC,EAAKlO,EAALkO,MAAOtE,EAAO5J,EAAP4J,QAASC,EAAO7J,EAAP6J,QAASsE,EAAUnO,EAAVmO,WAAUC,EAAApO,EAAEqO,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAAtO,EAAEuO,WAAAA,OAAU,IAAAD,EAAG,EAACA,EAQvG,GALAnE,GAAgBC,EADXgD,GAAApN,EAAAwO,IAC0BlE,EAASC,GAKpCyD,EACI5D,EAAMI,MAAMiE,UACZrE,EAAMsE,MAAMD,QAAUrE,EAAMI,MAAMiE,aAF1C,CAMArE,EAAMsE,MAAQtE,EAAMI,MACpBJ,EAAMI,MAAQ,CAAC,EACf,IAAQkE,EAA6BtE,EAA7BsE,MAAOlE,EAAsBJ,EAAtBI,MAAOmE,EAAevE,EAAfuE,WAKlBD,EAAMzJ,YACF0J,IACAnE,EAAMvF,UAAYyJ,EAAMzJ,kBACrByJ,EAAMzJ,WAGb0J,SACa7T,IAAZ8O,QAAqC9O,IAAZ+O,GAAyBW,EAAMvF,aACzDuF,EAAME,gBFzBd,SAAgCiE,EAAY/E,EAASC,GACjD,IAAM+E,EAAYnB,GAAW7D,EAAS+E,EAAWrK,EAAGqK,EAAWlH,OACzDoH,EAAYpB,GAAW5D,EAAS8E,EAAWpK,EAAGoK,EAAWhH,QAC/D,MAAO,GAAPzK,OAAU0R,EAAS,KAAA1R,OAAI2R,EAC3B,CEqBgCC,CAAuBH,OAAwB7T,IAAZ8O,EAAwBA,EAAU,QAAiB9O,IAAZ+O,EAAwBA,EAAU,UAG1H/O,IAAVmT,IACAS,EAAMpK,EAAI2J,QACAnT,IAAVoT,IACAQ,EAAMnK,EAAI2J,QAEKpT,IAAfqT,GD3BR,SAAsBO,EAAOxU,GAAqD,IAA7C6U,EAAO9U,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAG0T,EAAM1T,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAG+U,IAAW/U,UAAAC,OAAA,QAAAY,IAAAb,UAAA,KAAAA,UAAA,GAErEyU,EAAMP,WAAa,EAGnB,IAAM7U,EAAO0V,EAAcpB,GAAWE,GAEtCY,EAAMpV,EAAKqU,QAAUnH,GAAGvB,WAAW0I,GAEnC,IAAMQ,EAAa3H,GAAGvB,UAAU/K,GAC1BmU,EAAc7H,GAAGvB,UAAU8J,GACjCL,EAAMpV,EAAKuU,OAAS,GAAH3Q,OAAMiR,EAAU,KAAAjR,OAAImR,EACzC,CCgBQY,CAAaP,EAAOP,EAAYE,EAAaE,GAAY,EAzB7D,CA2BJ,CC7CA,IAAMW,GAAuB,WAAH,OAAA3O,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACnBqL,MAAuB,IAC1B8C,MAAO,CAAC,GAAC,ECJPV,GAAW,SAACmB,GAAG,MAAoB,kBAARA,GAA0C,QAAtBA,EAAIC,aAAuB,ECMhF,SAASC,GAAYjS,EAAO6D,EAAaqO,EAAWjP,GAChD,IAAMkP,GAAcrR,EAAAA,EAAAA,UAAQ,WACxB,IAAMkM,EAAQ8E,KAEd,OADAnB,GAAc3D,EAAOnJ,EAAa,CAAEiK,4BAA4B,GAAS8C,GAAS3N,GAAYjD,EAAMmN,oBACpGhK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO6J,EAAMsE,OAAK,IACdlE,OAAKjK,EAAAA,EAAAA,GAAA,GAAO6J,EAAMI,QAE1B,GAAG,CAACvJ,IACJ,GAAI7D,EAAMoN,MAAO,CACb,IAAMgF,EAAY,CAAC,EACnB3D,GAAkB2D,EAAWpS,EAAMoN,MAAOpN,GAC1CmS,EAAY/E,OAAKjK,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQiP,GAAcD,EAAY/E,MACvD,CACA,OAAO+E,CACX,CCdA,SAASE,KAA4C,IAA5BC,EAAkBzV,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GA2BvC,OA1BkB,SAACoG,EAAWjD,EAAO4D,EAAcxE,EAAGwD,EAAoBpE,GAAa,IAA7ByO,EAAYrK,EAAZqK,aAIhDkF,GAHiB9L,EAAepD,GAChCgP,GACAnD,IAC6B9O,EAAOiN,EAAczO,EAAUyE,GAC5DsP,EToBd,SAAqBvS,EAAOwS,EAAOF,GAC/B,IAAMC,EAAgB,CAAC,EACvB,IAAK,IAAM/W,KAAOwE,EAQF,WAARxE,GAA4C,kBAAjBwE,EAAMyS,SAEjC5C,GAAcrU,KACU,IAAvB8W,GAA+B3C,GAAkBnU,KAChDgX,IAAU7C,GAAkBnU,IAE7BwE,EAAiB,WAAKxE,EAAIsL,WAAW,aACtCyL,EAAc/W,GAAOwE,EAAMxE,IAGnC,OAAO+W,CACX,CSzC8BG,CAAY1S,EAA4B,kBAAdiD,EAAwBqP,GAClEK,GAAYxP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACXoP,GACAJ,GAAW,IACd/S,IAAAA,IAOIwT,EAAa5S,EAAb4S,SACFC,GAAmB/R,EAAAA,EAAAA,UAAQ,kBAAOiG,EAAc6L,GAAYA,EAAS5M,MAAQ4M,CAAQ,GAAG,CAACA,IAI/F,OAHIhP,IACA+O,EAAa,sBAAwB/O,IAElCkP,EAAAA,EAAAA,eAAc7P,GAASE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACvBwP,GAAY,IACfC,SAAUC,IAElB,CAEJ,CChCA,IAAME,GAAc,SAACC,GAAG,OAAKA,EAAIC,QAAQ,kBAAmB,SAASjB,aAAa,ECHlF,SAASkB,GAAWC,EAAOvQ,EAAmBwQ,EAAWC,GAAY,IAAtCjG,EAAKxK,EAALwK,MAAOC,EAAIzK,EAAJyK,KAGlC,IAAK,IAAM7R,KAFXE,OAAOiT,OAAOwE,EAAQ/F,MAAOA,EAAOiG,GAAcA,EAAWC,oBAAoBF,IAE/D/F,EACd8F,EAAQ/F,MAAMmG,YAAY/X,EAAK6R,EAAK7R,GAE5C,CCHA,IAAMgY,GAAsB,IAAI5M,IAAI,CAChC,gBACA,kBACA,eACA,mBACA,aACA,WACA,oBACA,eACA,cACA,aACA,UACA,UACA,eACA,mBACA,mBACA,eACA,cACA,UACA,oBACA,aACA,cACA,aACA,iBCtBJ,SAAS6M,GAAUN,EAASO,EAAaC,EAAYN,GAEjD,IAAK,IAAM7X,KADX0X,GAAWC,EAASO,OAAahW,EAAW2V,GAC1BK,EAAYpC,MAC1B6B,EAAQS,aAAcJ,GAAoBtN,IAAI1K,GAA0BA,EAAnBuX,GAAYvX,GAAYkY,EAAYpC,MAAM9V,GAEvG,CCNA,SAASqY,GAA4B7T,EAAO8T,GACxC,IAAQ1G,EAAUpN,EAAVoN,MACF2G,EAAY,CAAC,EACnB,IAAK,IAAMvY,KAAO4R,GACVrG,EAAcqG,EAAM5R,KACnBsY,EAAU1G,OAASrG,EAAc+M,EAAU1G,MAAM5R,KAClDqL,EAAoBrL,EAAKwE,MACzB+T,EAAUvY,GAAO4R,EAAM5R,IAG/B,OAAOuY,CACX,CCXA,SAASF,GAA4B7T,EAAO8T,GACxC,IAAMC,EAAYC,GAA8BhU,EAAO8T,GACvD,IAAK,IAAMtY,KAAOwE,EAAO,CACrB,GAAI+G,EAAc/G,EAAMxE,KAASuL,EAAc+M,EAAUtY,IAErDuY,EAD0B,MAARvY,GAAuB,MAARA,EAAc,OAASA,EAAIyY,cAAgBzY,GACrDwE,EAAMxE,EAErC,CACA,OAAOuY,CACX,CCZA,SAASG,GAAwBlU,EAAOmU,EAAYvO,GAAkD,IAA1CwO,EAAavX,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwX,EAAexX,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAsB/F,MAlB0B,oBAAfsX,IACPA,EAAaA,OAAsBzW,IAAXkI,EAAuBA,EAAS5F,EAAM4F,OAAQwO,EAAeC,IAM/D,kBAAfF,IACPA,EAAanU,EAAMM,UAAYN,EAAMM,SAAS6T,IAOxB,oBAAfA,IACPA,EAAaA,OAAsBzW,IAAXkI,EAAuBA,EAAS5F,EAAM4F,OAAQwO,EAAeC,IAElFF,CACX,CCvBA,IAAMG,GAAoB,SAAC/U,GACvB,OAAOC,MAAMC,QAAQF,EACzB,ECAMgV,GAAgB,SAAChV,GACnB,OAAOc,QAAQd,GAAkB,kBAANA,GAAkBA,EAAEiV,KAAOjV,EAAEkV,QAC5D,EACMC,GAA+B,SAACnV,GAElC,OAAO+U,GAAkB/U,GAAKA,EAAEA,EAAEzC,OAAS,IAAM,EAAIyC,CACzD,ECAA,SAASoV,GAAmBlZ,GACxB,IAAMmZ,EAAiB7N,EAActL,GAASA,EAAMuK,MAAQvK,EAC5D,OAAO8Y,GAAcK,GACfA,EAAeH,UACfG,CACV,C,sCCMA,IAAMC,GAAqB,SAACC,GAAM,OAAK,SAAC9U,EAAOxB,GAC3C,IAAMiC,GAAUI,EAAAA,EAAAA,YAAWnC,GACrBuF,GAAkBpD,EAAAA,EAAAA,YAAWlC,GAC7BoW,EAAO,WAAH,OAbd,SAAkBnS,EAA+D5C,EAAOS,EAASwD,GAAiB,IAA7F4P,EAA2BjR,EAA3BiR,4BAA6BmB,EAAiBpS,EAAjBoS,kBAAmBC,EAAOrS,EAAPqS,QAC3DjI,EAAQ,CACVC,aAAciI,GAAiBlV,EAAOS,EAASwD,EAAiB4P,GAChEH,YAAasB,KAKjB,OAHIC,IACAjI,EAAM3H,MAAQ,SAACD,GAAQ,OAAK6P,EAAQjV,EAAOoF,EAAU4H,EAAM,GAExDA,CACX,CAIuBmI,CAAUL,EAAQ9U,EAAOS,EAASwD,EAAgB,EACrE,OAAOzF,EAAWuW,IAAShT,EAAYgT,EAC3C,CAAC,EACD,SAASG,GAAiBlV,EAAOS,EAASwD,EAAiBmR,GACvD,IAAM3C,EAAS,CAAC,EACV4C,EAAeD,EAAmBpV,EAAO,CAAC,GAChD,IAAK,IAAMxE,KAAO6Z,EACd5C,EAAOjX,GAAOmZ,GAAmBU,EAAa7Z,IAElD,IAAMkF,EAAqBV,EAArBU,QAAST,EAAYD,EAAZC,QACTqV,EAA0BvV,EAAsBC,GAChDuV,EAAkBnV,EAAcJ,GAClCS,GACA8U,IACCD,IACiB,IAAlBtV,EAAMW,eACUjD,IAAZgD,IACAA,EAAUD,EAAQC,cACNhD,IAAZuC,IACAA,EAAUQ,EAAQR,UAE1B,IAAIuV,IAA4BvR,IACE,IAA5BA,EAAgBvD,QAGhB+U,GADND,EAA4BA,IAAyC,IAAZ9U,GACRT,EAAUS,EACvD+U,GACwB,mBAAjBA,IACN/V,EAAoB+V,KACRjW,MAAMC,QAAQgW,GAAgBA,EAAe,CAACA,IACtDzY,SAAQ,SAACmX,GACV,IAAMuB,EAAWxB,GAAwBlU,EAAOmU,GAChD,GAAKuB,EAAL,CAEA,IAAQC,EAAyCD,EAAzCC,cAA8BhZ,GAAW+Y,EAA1BE,WAAqB5F,GAAK0F,EAAQtE,KACzD,IAAK,IAAM5V,KAAOmB,EAAQ,CACtB,IAAIkZ,EAAclZ,EAAOnB,GACzB,GAAIgE,MAAMC,QAAQoW,GAQdA,EAAcA,EAHAL,EACRK,EAAY/Y,OAAS,EACrB,GAGU,OAAhB+Y,IACApD,EAAOjX,GAAOqa,EAEtB,CACA,IAAK,IAAMra,KAAOma,EACdlD,EAAOjX,GAAOma,EAAcna,EAnBtB,CAoBd,IAEJ,OAAOiX,CACX,CCvEA,IAAMqD,GAAkB,CACpB9S,eAAgB6R,GAAmB,CAC/BhB,4BAA6BA,GAC7BmB,kBAAmBlD,GACnBmD,QAAS,SAACjV,EAAOoF,EAAQxC,GAAoC,IAAhC8Q,EAAW9Q,EAAX8Q,YAAazG,EAAYrK,EAAZqK,aACtC,IACIyG,EAAYnC,WAEJ,oBADGnM,EAAS2Q,QAEV3Q,EAAS2Q,UACT3Q,EAAS4Q,uBACvB,CACA,MAAOC,GAEHvC,EAAYnC,WAAa,CACrBrK,EAAG,EACHC,EAAG,EACHkD,MAAO,EACPE,OAAQ,EAEhB,CACAoG,GAAc+C,EAAazG,EAAc,CAAEa,4BAA4B,GAAS8C,GAASxL,EAAS8Q,SAAUlW,EAAMmN,mBAClHsG,GAAUrO,EAAUsO,EACxB,KC1BFyC,GAAmB,CACrBnT,eAAgB6R,GAAmB,CAC/BhB,4BAAAA,GACAmB,kBAAmBxG,MCPZ,SAAS4H,GAAgBhR,EAAUiR,GAChD,KAAMjR,aAAoBiR,GACxB,MAAM,IAAIxY,UAAU,oCAExB,C,cCHA,SAASyY,GAAkB3Z,EAAQqD,GACjC,IAAK,IAAIpD,EAAI,EAAGA,EAAIoD,EAAMlD,OAAQF,IAAK,CACrC,IAAI2Z,EAAavW,EAAMpD,GACvB2Z,EAAW3a,WAAa2a,EAAW3a,aAAc,EACjD2a,EAAW1a,cAAe,EACtB,UAAW0a,IAAYA,EAAWza,UAAW,GACjDJ,OAAOC,eAAegB,GAAQ,EAAA6Z,GAAA,GAAcD,EAAW/a,KAAM+a,EAC/D,CACF,CACe,SAASE,GAAaJ,EAAaK,EAAYC,GAM5D,OALID,GAAYJ,GAAkBD,EAAYlY,UAAWuY,GACrDC,GAAaL,GAAkBD,EAAaM,GAChDjb,OAAOC,eAAe0a,EAAa,YAAa,CAC9Cva,UAAU,IAELua,CACT,CCjBe,SAASO,GAAgBC,EAAGtY,GAKzC,OAJAqY,GAAkBlb,OAAOob,eAAiBpb,OAAOob,eAAeC,OAAS,SAAyBF,EAAGtY,GAEnG,OADAsY,EAAEG,UAAYzY,EACPsY,CACT,EACOD,GAAgBC,EAAGtY,EAC5B,CCLe,SAAS0Y,GAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAItZ,UAAU,sDAEtBqZ,EAAS/Y,UAAYzC,OAAO0b,OAAOD,GAAcA,EAAWhZ,UAAW,CACrED,YAAa,CACXzC,MAAOyb,EACPpb,UAAU,EACVD,cAAc,KAGlBH,OAAOC,eAAeub,EAAU,YAAa,CAC3Cpb,UAAU,IAERqb,GAAY,GAAeD,EAAUC,EAC3C,CChBe,SAASE,GAAgBR,GAItC,OAHAQ,GAAkB3b,OAAOob,eAAiBpb,OAAO4b,eAAeP,OAAS,SAAyBF,GAChG,OAAOA,EAAEG,WAAatb,OAAO4b,eAAeT,EAC9C,EACOQ,GAAgBR,EACzB,C,YCHe,SAASU,GAA2BC,EAAM5Z,GACvD,GAAIA,IAA2B,YAAlB,QAAQA,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIC,UAAU,4DAEtB,OCRa,SAAgC2Z,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIC,eAAe,6DAE3B,OAAOD,CACT,CDGS,CAAsBA,EAC/B,CENe,SAASE,GAAaC,GACnC,IAAIC,ECJS,WACb,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,oBAAVlS,MAAsB,OAAO,EACxC,IAEE,OADAxF,QAAQlC,UAAU6Z,QAAQpa,KAAKia,QAAQC,UAAUzX,QAAS,IAAI,WAAa,MACpE,CACT,CAAE,MAAO4V,GACP,OAAO,CACT,CACF,CDNkC,GAChC,OAAO,WACL,IACEgC,EADEC,EAAQ,GAAeP,GAE3B,GAAIC,EAA2B,CAC7B,IAAIO,EAAY,GAAeC,MAAMla,YACrC+Z,EAASJ,QAAQC,UAAUI,EAAOrb,UAAWsb,EAC/C,MACEF,EAASC,EAAMzb,MAAM2b,KAAMvb,WAE7B,OAAO,GAA0Bub,KAAMH,EACzC,CACF,CEhBA,SAASI,GAAY1b,EAAQ2b,EAAWC,GAAsC,IAA7BrL,EAAOrQ,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAE2b,SAAS,GAElE,OADA7b,EAAO8b,iBAAiBH,EAAWC,EAASrL,GACrC,kBAAMvQ,EAAO+b,oBAAoBJ,EAAWC,EAAQ,CAC/D,CCHA,IAAMI,GAAmB,SAACC,GACtB,MAA0B,UAAtBA,EAAMC,YACyB,kBAAjBD,EAAME,QAAuBF,EAAME,QAAU,GAWhC,IAApBF,EAAMG,SAErB,ECbA,SAASC,GAAiBJ,GAA2B,IAApBK,EAASpc,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,OACzC,MAAO,CACHqc,MAAO,CACHhS,EAAG0R,EAAMK,EAAY,KACrB9R,EAAGyR,EAAMK,EAAY,MAGjC,CACA,IAAME,GAAiB,SAACZ,GACpB,OAAO,SAACK,GAAK,OAAKD,GAAiBC,IAAUL,EAAQK,EAAOI,GAAiBJ,GAAO,CACxF,ECTA,SAASQ,GAAgBzc,EAAQ2b,EAAWC,EAASrL,GACjD,OAAOmL,GAAY1b,EAAQ2b,EAAWa,GAAeZ,GAAUrL,EACnE,CCEA,IAAMmM,GAAmB,SAACC,EAAGC,GAAC,OAAK,SAACha,GAAC,OAAKga,EAAED,EAAE/Z,GAAG,GAC3Cia,GAAO,WAAH,QAAAC,EAAA5c,UAAAC,OAAO4c,EAAY,IAAAla,MAAAia,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAZD,EAAYC,GAAA9c,UAAA8c,GAAA,OAAKD,EAAaE,OAAOP,GAAiB,ECRvE,SAASQ,GAAW1Z,GAChB,IAAI2Z,EAAO,KACX,OAAO,WAIH,OAAa,OAATA,IACAA,EAAO3Z,EAJM,WACb2Z,EAAO,IACX,EAMJ,CACJ,CACA,IAAMC,GAAuBF,GAAW,kBAClCG,GAAqBH,GAAW,gBACtC,SAASI,GAAc5Y,GACnB,IAAIyY,GAAO,EACX,GAAa,MAATzY,EACAyY,EAAOE,UAEN,GAAa,MAAT3Y,EACLyY,EAAOC,SAEN,CACD,IAAMG,EAAiBH,KACjBI,EAAeH,KACjBE,GAAkBC,EAClBL,EAAO,WACHI,IACAC,GACJ,GAIID,GACAA,IACAC,GACAA,IAEZ,CACA,OAAOL,CACX,CACA,SAASM,KAGL,IAAMC,EAAkBJ,IAAc,GACtC,OAAKI,IAELA,KACO,EACX,C,IClDMC,GAAO,WACT,SAAAA,EAAYC,GAAMnE,GAAA,KAAAkE,GACdlC,KAAKoC,WAAY,EACjBpC,KAAKmC,KAAOA,CAChB,CACY,OADX9D,GAAA6D,EAAA,EAAA9e,IAAA,SAAAC,MACD,WAAW,KAAC6e,CAAA,CALH,GCAb,IAAMG,GAAY,CACdC,MAAO,EACPC,UAAW,EACXC,cAAc,GCCdC,IAAoB,EACpBC,IAAe,EACbC,GAAa,CACf,OACA,SACA,YACA,SACA,cAEEC,GAAQD,GAAWnB,QAAO,SAACqB,EAAKzf,GAElC,OADAyf,EAAIzf,GCdR,SAA0Bsf,GAKtB,IAAII,EAAQ,GACRC,EAAiB,GAIjBC,EAAW,EAKXR,GAAe,EACfS,GAAiB,EAIfC,EAAc,IAAIC,QAClBC,EAAO,CAITC,SAAU,SAACC,GAAmD,IACpDC,EADuC9e,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,IACN+d,EACjCgB,EAASD,EAAoBT,EAAQC,EAU3C,OAZ0Bte,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,IAItBye,EAAYO,IAAIH,IAEc,IAA9BE,EAAOrV,QAAQmV,KACfE,EAAOpf,KAAKkf,GAERC,GAAqBf,IACrBQ,EAAWF,EAAMpe,SAElB4e,CACX,EAIAI,OAAQ,SAACJ,GACL,IAAMK,EAAQZ,EAAe5U,QAAQmV,IACtB,IAAXK,GACAZ,EAAea,OAAOD,EAAO,GACjCT,EAAYW,OAAOP,EACvB,EAIAQ,QAAS,SAACzB,GAMN,GAAIG,EACAS,GAAiB,MADrB,CAIAT,GAAe,EAAK,IAAAhY,EACM,CAACuY,EAAgBD,GAK3C,GALCA,EAAKtY,EAAA,IAAEuY,EAAcvY,EAAA,IAEP9F,OAAS,EAExBse,EAAWF,EAAMpe,OAEb,IAAK,IAAIF,EAAI,EAAGA,EAAIwe,EAAUxe,IAAK,CAC/B,IAAM8e,EAAWR,EAAMte,GACvB8e,EAASjB,GACLa,EAAYpV,IAAIwV,KAChBF,EAAKC,SAASC,GACdZ,IAER,CAEJF,GAAe,EACXS,IACAA,GAAiB,EACjBG,EAAKU,QAAQzB,GApBjB,CAsBJ,GAEJ,OAAOe,CACX,CDvEeW,EAAiB,kBAAOrB,IAAe,CAAI,IAC/CG,CACX,GAAG,CAAC,GACEmB,GAAOrB,GAAWnB,QAAO,SAACqB,EAAKzf,GACjC,IAAMggB,EAAOR,GAAMxf,GAMnB,OALAyf,EAAIzf,GAAO,SAAC0gB,GAAkD,IAAzCG,EAASxf,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GAAUyf,EAASzf,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GAG7C,OAFKie,IACDyB,KACGf,EAAKC,SAASS,EAASG,EAAWC,EAC7C,EACOrB,CACX,GAAG,CAAC,GACEuB,GAAazB,GAAWnB,QAAO,SAACqB,EAAKzf,GAEvC,OADAyf,EAAIzf,GAAOwf,GAAMxf,GAAKsgB,OACfb,CACX,GAAG,CAAC,GACEwB,GAAY1B,GAAWnB,QAAO,SAACqB,EAAKzf,GAEtC,OADAyf,EAAIzf,GAAO,kBAAMwf,GAAMxf,GAAK0gB,QAAQzB,GAAU,EACvCQ,CACX,GAAG,CAAC,GACEyB,GAAc,SAACC,GAAM,OAAK3B,GAAM2B,GAAQT,QAAQzB,GAAU,EAC1DmC,GAAe,SAAfA,EAAgBjC,GAClBG,IAAe,EACfL,GAAUC,MAAQG,GACZ,IAAO,GACP5S,KAAKD,IAAIC,KAAKF,IAAI4S,EAAYF,GAAUE,UApC/B,IAoCuD,GACtEF,GAAUE,UAAYA,EACtBF,GAAUG,cAAe,EACzBG,GAAW/d,QAAQ0f,IACnBjC,GAAUG,cAAe,EACrBE,KACAD,IAAoB,EACpBgC,sBAAsBD,GAE9B,EACML,GAAY,WACdzB,IAAe,EACfD,IAAoB,EACfJ,GAAUG,cACXiC,sBAAsBD,GAC9B,EEhDA,SAASE,GAAcvC,EAAMwC,GACzB,IAAMzE,EAAY,WAAayE,EAAW,QAAU,SAC9CC,EAAe,WAAaD,EAAW,QAAU,OAYvD,OAAO3D,GAAgBmB,EAAKrY,QAASoW,GAXjB,SAACM,EAAOqE,GACxB,GAAmB,UAAfrE,EAAMhR,OAAoBwS,KAA9B,CAEA,IAAMpa,EAAQua,EAAK2C,WACf3C,EAAK3V,gBAAkB5E,EAAMmd,YAC7B5C,EAAK3V,eAAewY,UAAU,aAAcL,GAE5C/c,EAAMgd,IACNZ,GAAK7X,QAAO,kBAAMvE,EAAMgd,GAAcpE,EAAOqE,EAAK,GAN5C,CAQd,GAC6D,CACzDzE,SAAU+B,EAAK2C,WAAWF,IAElC,CAAC,IACKK,GAAY,SAAAC,GAAArG,GAAAoG,EAAAC,GAAA,IAAAC,EAAA7F,GAAA2F,GAAA,SAAAA,IAAA,OAAAjH,GAAA,KAAAiH,GAAAE,EAAA9gB,MAAA,KAAAI,UAAA,CAID,OAJC4Z,GAAA4G,EAAA,EAAA7hB,IAAA,QAAAC,MACd,WACI2c,KAAK9S,QAAUkU,GAAKsD,GAAc1E,KAAKmC,MAAM,GAAOuC,GAAc1E,KAAKmC,MAAM,GACjF,GAAC,CAAA/e,IAAA,UAAAC,MACD,WAAY,KAAC4hB,CAAA,CAJC,CAAS/C,ICpBrBkD,GAAY,SAAAF,GAAArG,GAAAuG,EAAAF,GAAA,IAAAC,EAAA7F,GAAA8F,GACd,SAAAA,IAAc,IAAAC,EAEY,OAFZrH,GAAA,KAAAoH,IACVC,EAAAF,EAAA9gB,MAAA,KAASI,YACJkgB,UAAW,EAAMU,CAC1B,CA6Ba,OA7BZhH,GAAA+G,EAAA,EAAAhiB,IAAA,UAAAC,MACD,WACI,IAAIiiB,GAAiB,EAOrB,IACIA,EAAiBtF,KAAKmC,KAAKrY,QAAQyb,QAAQ,iBAC/C,CACA,MAAO1H,GACHyH,GAAiB,CACrB,CACKA,GAAmBtF,KAAKmC,KAAK3V,iBAElCwT,KAAKmC,KAAK3V,eAAewY,UAAU,cAAc,GACjDhF,KAAK2E,UAAW,EACpB,GAAC,CAAAvhB,IAAA,SAAAC,MACD,WACS2c,KAAK2E,UAAa3E,KAAKmC,KAAK3V,iBAEjCwT,KAAKmC,KAAK3V,eAAewY,UAAU,cAAc,GACjDhF,KAAK2E,UAAW,EACpB,GAAC,CAAAvhB,IAAA,QAAAC,MACD,WAAQ,IAAAmiB,EAAA,KACJxF,KAAK9S,QAAUkU,GAAKnB,GAAYD,KAAKmC,KAAKrY,QAAS,SAAS,kBAAM0b,EAAKC,SAAS,IAAGxF,GAAYD,KAAKmC,KAAKrY,QAAS,QAAQ,kBAAM0b,EAAKE,QAAQ,IACjJ,GAAC,CAAAtiB,IAAA,UAAAC,MACD,WAAY,KAAC+hB,CAAA,CAjCC,CAASlD,ICGrByD,GAAgB,SAAhBA,EAAiBha,EAAQia,GAC3B,QAAKA,IAGIja,IAAWia,GAITD,EAAcha,EAAQia,EAAMC,eAE3C,ECjBMC,GAAO,SAACC,GAAG,OAAKA,CAAG,ECUzB,SAASC,GAA0Bje,EAAMoY,GACrC,GAAKA,EAAL,CAEA,IAAM8F,EAAwB,IAAIC,aAAa,UAAYne,GAC3DoY,EAAQ8F,EAAuBrF,GAAiBqF,GAFtC,CAGd,CAAC,IACKE,GAAY,SAAAjB,GAAArG,GAAAsH,EAAAjB,GAAA,IAAAC,EAAA7F,GAAA6G,GACd,SAAAA,IAAc,IAAAd,EAyDR,OAzDQrH,GAAA,KAAAmI,IACVd,EAAAF,EAAA9gB,MAAA,KAASI,YACJ2hB,qBAAuBN,GAC5BT,EAAKgB,mBAAqBP,GAC1BT,EAAKiB,0BAA4BR,GACjCT,EAAKkB,kBAAoB,SAACC,EAAYC,GAElC,GADApB,EAAKgB,sBACDhB,EAAKqB,WAAT,CAEA,IAAM9e,EAAQyd,EAAKlD,KAAK2C,WAelB6B,EAA0B3F,GAAgB1U,OAAQ,aAdhC,SAACsa,EAAUC,GAC/B,GAAKxB,EAAKyB,gBAAV,CAEA,IAAAC,EAA+B1B,EAAKlD,KAAK2C,WAAjC3N,EAAK4P,EAAL5P,MAAO6P,EAAWD,EAAXC,YACfhD,GAAK7X,QAAO,WAKPwZ,GAAcN,EAAKlD,KAAKrY,QAAS8c,EAASriB,QAErC4S,GAASA,EAAMyP,EAAUC,GADzBG,GAAeA,EAAYJ,EAAUC,EAE/C,GAVU,CAWd,GACsF,CAAEzG,UAAWxY,EAAMuP,OAASvP,EAAmB,eAC/Hqf,EAA8BjG,GAAgB1U,OAAQ,iBAAiB,SAAC4a,EAAaC,GAAU,OAAK9B,EAAK+B,YAAYF,EAAaC,EAAW,GAAE,CAAE/G,UAAWxY,EAAMof,aAAepf,EAAuB,mBAC9Myd,EAAKgB,mBAAqBjF,GAAKuF,EAAyBM,GACxD5B,EAAKgC,WAAWb,EAAYC,EAnBlB,CAoBd,EACApB,EAAKiC,qBAAuB,WACxB,IAmBMC,EAAwBtH,GAAYoF,EAAKlD,KAAKrY,QAAS,WAnBvC,SAAC0d,GACnB,GAAyB,UAArBA,EAAapkB,MAAmBiiB,EAAKqB,WAAzC,CAYArB,EAAKgB,qBACLhB,EAAKgB,mBAAqBpG,GAAYoF,EAAKlD,KAAKrY,QAAS,SAXrC,SAAC2d,GACM,UAAnBA,EAAWrkB,KAAoBiiB,EAAKyB,iBAExCd,GAA0B,MAAM,SAACxF,EAAOqE,GACpC,IAAQ1N,EAAUkO,EAAKlD,KAAK2C,WAApB3N,MACJA,GACA6M,GAAK7X,QAAO,kBAAMgL,EAAMqJ,EAAOqE,EAAK,GAE5C,GACJ,IAGAmB,GAA0B,QAAQ,SAACxF,EAAOqE,GACtCQ,EAAKgC,WAAW7G,EAAOqE,EAC3B,GAfU,CAgBd,IAOM6C,EAAqBzH,GAAYoF,EAAKlD,KAAKrY,QAAS,QALvC,WACVub,EAAKqB,YAEVV,GAA0B,UAAU,SAACkB,EAAaC,GAAU,OAAK9B,EAAK+B,YAAYF,EAAaC,EAAW,GAC9G,IAEA9B,EAAKiB,0BAA4BlF,GAAKmG,EAAuBG,EACjE,EAAErC,CACN,CAyCC,OAzCAhH,GAAA8H,EAAA,EAAA/iB,IAAA,aAAAC,MACD,SAAWmd,EAAOqE,GACd7E,KAAK0G,YAAa,EAClB,IAAAiB,EAAiC3H,KAAKmC,KAAK2C,WAAnC1N,EAAUuQ,EAAVvQ,WAAoBuQ,EAARtQ,UAIJ2I,KAAKmC,KAAK3V,gBACtBwT,KAAKmC,KAAK3V,eAAewY,UAAU,YAAY,GAE/C5N,GACA4M,GAAK7X,QAAO,kBAAMiL,EAAWoJ,EAAOqE,EAAK,GAEjD,GAAC,CAAAzhB,IAAA,gBAAAC,MACD,WAOI,OANA2c,KAAKqG,qBACLrG,KAAK0G,YAAa,EACJ1G,KAAKmC,KAAK2C,WACdzN,UAAY2I,KAAKmC,KAAK3V,gBAC5BwT,KAAKmC,KAAK3V,eAAewY,UAAU,YAAY,IAE3ChD,IACZ,GAAC,CAAA5e,IAAA,cAAAC,MACD,SAAYmd,EAAOqE,GACf,GAAK7E,KAAK8G,gBAAV,CAEA,IAAQE,EAAgBhH,KAAKmC,KAAK2C,WAA1BkC,YACJA,GACAhD,GAAK7X,QAAO,kBAAM6a,EAAYxG,EAAOqE,EAAK,GAHpC,CAKd,GAAC,CAAAzhB,IAAA,QAAAC,MACD,WACI,IAAMuE,EAAQoY,KAAKmC,KAAK2C,WAClB8C,EAAwB5G,GAAgBhB,KAAKmC,KAAKrY,QAAS,cAAekW,KAAKuG,kBAAmB,CAAEnG,UAAWxY,EAAMwP,YAAcxP,EAAsB,kBACzJigB,EAAsB5H,GAAYD,KAAKmC,KAAKrY,QAAS,QAASkW,KAAKsH,sBACzEtH,KAAKoG,qBAAuBhF,GAAKwG,EAAuBC,EAC5D,GAAC,CAAAzkB,IAAA,UAAAC,MACD,WACI2c,KAAKoG,uBACLpG,KAAKqG,qBACLrG,KAAKsG,2BACT,KAACH,CAAA,CApGa,CAASjE,I,YCXrB4F,GAAoB,IAAIC,QAMxBC,GAAY,IAAID,QAChBE,GAAuB,SAACC,GAC1B,IAAM5E,EAAWwE,GAAkBla,IAAIsa,EAAM3jB,QAC7C+e,GAAYA,EAAS4E,EACzB,EACMC,GAA2B,SAACC,GAC9BA,EAAQxjB,QAAQqjB,GACpB,EAoBA,SAASI,GAAoBtN,EAASjG,EAASwO,GAC3C,IAAMgF,EApBV,SAAiC9d,GAAuB,IAApB+d,EAAI/d,EAAJ+d,KAASzT,EAAO8C,GAAApN,EAAAwO,IAC1CwP,EAAaD,GAAQ9hB,SAItBuhB,GAAUla,IAAI0a,IACfR,GAAUja,IAAIya,EAAY,CAAC,GAE/B,IAAMC,EAAgBT,GAAUpa,IAAI4a,GAC9BplB,EAAMslB,KAAKC,UAAU7T,GAQ3B,OAHK2T,EAAcrlB,KACfqlB,EAAcrlB,GAAO,IAAIwlB,qBAAqBT,IAAwBpd,EAAAA,EAAAA,GAAA,CAAIwd,KAAAA,GAASzT,KAEhF2T,EAAcrlB,EACzB,CAEsCylB,CAAyB/T,GAG3D,OAFAgT,GAAkB/Z,IAAIgN,EAASuI,GAC/BgF,EAA0BQ,QAAQ/N,GAC3B,WACH+M,GAAkBjE,OAAO9I,GACzBuN,EAA0BS,UAAUhO,EACxC,CACJ,CC3CA,IAAMiO,GAAiB,CACnBlhB,KAAM,EACNmhB,IAAK,GAEHC,GAAa,SAAAhE,GAAArG,GAAAqK,EAAAhE,GAAA,IAAAC,EAAA7F,GAAA4J,GACf,SAAAA,IAAc,IAAA7D,EAGY,OAHZrH,GAAA,KAAAkL,IACV7D,EAAAF,EAAA9gB,MAAA,KAASI,YACJ0kB,gBAAiB,EACtB9D,EAAK+D,UAAW,EAAM/D,CAC1B,CAqDa,OArDZhH,GAAA6K,EAAA,EAAA9lB,IAAA,gBAAAC,MACD,WAAgB,IAAAmiB,EAAA,KACZxF,KAAK9S,UACL,IAA8Cmc,EAApBrJ,KAAKmC,KAAK2C,WAA5BwE,SAAAA,OAAQ,IAAAD,EAAG,CAAC,EAACA,EACbd,EAAoDe,EAApDf,KAAcgB,EAAsCD,EAA9CvW,OAAMyW,EAAwCF,EAA1BG,OAAAA,OAAM,IAAAD,EAAG,OAAMA,EAAEE,EAASJ,EAATI,KAC7C5U,EAAU,CACZyT,KAAMA,EAAOA,EAAKze,aAAUxE,EAC5BikB,WAAAA,EACAI,UAA6B,kBAAXF,EAAsBA,EAAST,GAAeS,IA+BpE,OAAOpB,GAAoBrI,KAAKmC,KAAKrY,QAASgL,GA7BjB,SAACoT,GAC1B,IAAQ0B,EAAmB1B,EAAnB0B,eAIR,GAAIpE,EAAK4D,WAAaQ,IAEtBpE,EAAK4D,SAAWQ,GAKZF,GAASE,IAAkBpE,EAAK2D,gBAApC,CAGSS,IACLpE,EAAK2D,gBAAiB,GAEtB3D,EAAKrD,KAAK3V,gBACVgZ,EAAKrD,KAAK3V,eAAewY,UAAU,cAAe4E,GAMtD,IAAAC,EAA6CrE,EAAKrD,KAAK2C,WAA/CgF,EAAeD,EAAfC,gBAAiBC,EAAeF,EAAfE,gBACnBzG,EAAWsG,EAAiBE,EAAkBC,EACpDzG,GAAYA,EAAS4E,EAVrB,CAWJ,GAEJ,GAAC,CAAA9kB,IAAA,QAAAC,MACD,WACI2c,KAAKgK,eACT,GAAC,CAAA5mB,IAAA,SAAAC,MACD,WACI,GAAoC,qBAAzBulB,qBAAX,CAEA,IAAAqB,EAA6BjK,KAAKmC,KAA1Bva,EAAKqiB,EAALriB,MAAO8T,EAASuO,EAATvO,UACTwO,EAAoB,CAAC,SAAU,SAAU,QAAQpiB,KAO/D,SAAiC0C,GAA0D,IAAA2f,EAAA3f,EAAvD8e,SAAAA,OAAQ,IAAAa,EAAG,CAAC,EAACA,EAAA/c,EAAA3I,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAsC,CAAC,EAAC2lB,EAAAhd,EAAlCkc,SAAUe,OAAY,IAAAD,EAAG,CAAC,EAACA,EAC9E,OAAO,SAACriB,GAAI,OAAKuhB,EAASvhB,KAAUsiB,EAAatiB,EAAK,CAC1D,CAToEuiB,CAAyB1iB,EAAO8T,IACxFwO,GACAlK,KAAKgK,eAJC,CAMd,GAAC,CAAA5mB,IAAA,UAAAC,MACD,WAAY,KAAC6lB,CAAA,CA1DE,CAAShH,ICF5B,IAAMqI,GAAoB,CACtBjhB,OAAQ,CACJ4Y,QAASgH,IAEb9f,IAAK,CACD8Y,QAASiE,IAEbjd,MAAO,CACHgZ,QAASkD,IAEbjc,MAAO,CACH+Y,QAAS+C,K,wBCZF,SAAS,GAAmBuF,GACzC,OCJa,SAA4BA,GACzC,GAAIpjB,MAAMC,QAAQmjB,GAAM,OAAO,EAAAC,GAAA,GAAiBD,EAClD,CDES,CAAkBA,IELZ,SAA0BE,GACvC,GAAsB,qBAAXtlB,QAAmD,MAAzBslB,EAAKtlB,OAAOS,WAA2C,MAAtB6kB,EAAK,cAAuB,OAAOtjB,MAAMujB,KAAKD,EACtH,CFGmC,CAAgBF,KAAQ,EAAAI,GAAA,GAA2BJ,IGLvE,WACb,MAAM,IAAI/kB,UAAU,uIACtB,CHG8F,EAC9F,CINA,SAASolB,GAAeC,EAAMC,GAC1B,IAAK3jB,MAAMC,QAAQ0jB,GACf,OAAO,EACX,IAAMC,EAAaD,EAAKrmB,OACxB,GAAIsmB,IAAeF,EAAKpmB,OACpB,OAAO,EACX,IAAK,IAAIF,EAAI,EAAGA,EAAIwmB,EAAYxmB,IAC5B,GAAIumB,EAAKvmB,KAAOsmB,EAAKtmB,GACjB,OAAO,EAEf,OAAO,CACX,CCOA,SAASymB,GAAevf,EAAeqQ,EAAYvO,GAC/C,IAAM5F,EAAQ8D,EAAcoZ,WAC5B,OAAOhJ,GAAwBlU,EAAOmU,OAAuBzW,IAAXkI,EAAuBA,EAAS5F,EAAM4F,OAf5F,SAAoB9B,GAChB,IAAM5B,EAAU,CAAC,EAEjB,OADA4B,EAAc2O,OAAOzV,SAAQ,SAACvB,EAAOD,GAAG,OAAM0G,EAAQ1G,GAAOC,EAAMuK,KAAK,IACjE9D,CACX,CAWoGohB,CAAWxf,GAP/G,SAAqBA,GACjB,IAAMyf,EAAW,CAAC,EAElB,OADAzf,EAAc2O,OAAOzV,SAAQ,SAACvB,EAAOD,GAAG,OAAM+nB,EAAS/nB,GAAOC,EAAMuL,aAAa,IAC1Euc,CACX,CAG+Hvc,CAAYlD,GAC3I,CCnBA,IACM0f,GAA+B,QAAUzQ,GADjB,kBCA1B0Q,GAAUvF,GACVwF,GAAYxF,GCGhB,IAAMyF,GAAwB,SAACC,GAAO,OAAe,IAAVA,CAAc,EACnDC,GAAwB,SAACC,GAAY,OAAKA,EAAe,GAAI,ECP7DC,IACO,E,oBCIb,IAAMC,GAAsB,SAAHphB,GAAA,IAAA4C,GAAAye,EAAAA,GAAAA,GAAArhB,EAAA,GAAK0W,EAAC9T,EAAA,GAAE+T,EAAC/T,EAAA,GAAE0e,EAAC1e,EAAA,GAAE2e,EAAC3e,EAAA,yBAAA1F,OAAsBwZ,EAAC,MAAAxZ,OAAKyZ,EAAC,MAAAzZ,OAAKokB,EAAC,MAAApkB,OAAKqkB,EAAC,MAC3EC,GAAuB,CACzBC,OAAQ,SACRC,KAAM,OACNC,OAAQ,UACRC,QAAS,WACTC,UAAW,cACXC,OAAQV,GAAoB,CAAC,EAAG,IAAM,IAAM,IAC5CW,QAASX,GAAoB,CAAC,IAAM,EAAG,EAAG,MAC1CY,OAAQZ,GAAoB,CAAC,IAAM,IAAM,KAAO,MAChDa,QAASb,GAAoB,CAAC,IAAM,KAAM,IAAM,OAEpD,SAASc,GAAwBC,GAC7B,GAAKA,EAEL,OAAOvlB,MAAMC,QAAQslB,GACff,GAAoBe,GACpBX,GAAqBW,EAC/B,CCvBA,IAAMC,GAAe,CACjBC,MAAO,kBAAMvpB,OAAO2D,eAAezB,KAAKsnB,QAAQ/mB,UAAW,UAAU,GAEnEgnB,GAAU,CAAC,EACXC,GAAW,CAAC,EAClBvjB,GAAA,SAAArG,GAII4pB,GAAS5pB,GAAO,WAGZ,YAFqBkC,IAAjBynB,GAAQ3pB,KACR2pB,GAAQ3pB,GAAOwpB,GAAaxpB,MACzB2pB,GAAQ3pB,EACnB,CACJ,EANA,IAAK,IAAMA,MAAOwpB,GAAYnjB,GAAArG,ICN9B,IAAM6pB,GAAe,SAACN,GAAM,OAAK,SAACxmB,GAAC,OAAKA,GAAK,GAAMwmB,EAAO,EAAIxmB,GAAK,GAAK,EAAIwmB,EAAO,GAAK,EAAIxmB,KAAO,CAAC,GCA9F+mB,GAAgB,SAACP,GAAM,OAAK,SAACxmB,GAAC,OAAK,EAAIwmB,EAAO,EAAIxmB,EAAE,GCCpDgmB,GAAS,SAAChmB,GAAC,OAAKA,EAAIA,CAAC,EACrBimB,GAAUc,GAAcf,IACxBE,GAAYY,GAAad,ICCzBgB,GAAgB,SAAC3d,EAAM4d,GAAQ,OAAK,SAACjmB,GACvC,OAAOc,QAASwI,GAAStJ,IAAMqJ,EAAiBpC,KAAKjH,IAAMA,EAAEuH,WAAWc,IACnE4d,GAAY9pB,OAAOyC,UAAUkB,eAAezB,KAAK2B,EAAGimB,GAC7D,CAAC,EACKC,GAAa,SAACC,EAAOC,EAAOC,GAAK,OAAK,SAACrmB,GAAM,IAAAqD,EAC/C,IAAKiG,GAAStJ,GACV,OAAOA,EACX,IAAAsmB,EAAyBtmB,EAAEumB,MAAMpd,GAAWqd,GAAA9B,EAAAA,GAAAA,GAAA4B,EAAA,GAArCvM,EAACyM,EAAA,GAAExM,EAACwM,EAAA,GAAE7B,EAAC6B,EAAA,GAAE1d,EAAK0d,EAAA,GACrB,OAAAnjB,EAAA,IAAAtH,EAAAA,GAAAA,GAAAsH,EACK8iB,EAAQtd,WAAWkR,KAAEhe,EAAAA,GAAAA,GAAAsH,EACrB+iB,EAAQvd,WAAWmR,KAAEje,EAAAA,GAAAA,GAAAsH,EACrBgjB,EAAQxd,WAAW8b,KAAE5oB,EAAAA,GAAAA,GAAAsH,EAAA,aACLlF,IAAV2K,EAAsBD,WAAWC,GAAS,GAACzF,CAE1D,CAAC,ECdKojB,IAAO7iB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACN+E,GAAM,IACTL,UAAW,SAACtI,GAAC,OAAK0I,KAAKQ,MAHN,SAAClJ,GAAC,OAAKuI,EAAM,EAAG,IAAKvI,EAAE,CAGX0mB,CAAa1mB,GAAG,IAE3C2mB,GAAO,CACT1f,KAAM+e,GAAc,MAAO,OAC3Bpd,MAAOsd,GAAW,MAAO,QAAS,QAClC5d,UAAW,SAAAjF,GAAA,IAAGujB,EAAGvjB,EAAHujB,IAAKC,EAAKxjB,EAALwjB,MAAOC,EAAIzjB,EAAJyjB,KAAIC,EAAA1jB,EAAEyF,MAAOke,OAAO,IAAAD,EAAG,EAACA,EAAA,MAAO,QACrDN,GAAQne,UAAUse,GAClB,KACAH,GAAQne,UAAUue,GAClB,KACAJ,GAAQne,UAAUwe,GAClB,KACA7d,EAASH,EAAMR,UAAU0e,IACzB,GAAG,GCYX,IAAMC,GAAM,CACRhgB,KAAM+e,GAAc,KACpBpd,MAhCJ,SAAkB5I,GACd,IAAIknB,EAAI,GACJC,EAAI,GACJnN,EAAI,GACJD,EAAI,GAmBR,OAjBI/Z,EAAEzC,OAAS,GACX2pB,EAAIlnB,EAAEonB,UAAU,EAAG,GACnBD,EAAInnB,EAAEonB,UAAU,EAAG,GACnBpN,EAAIha,EAAEonB,UAAU,EAAG,GACnBrN,EAAI/Z,EAAEonB,UAAU,EAAG,KAInBF,EAAIlnB,EAAEonB,UAAU,EAAG,GACnBD,EAAInnB,EAAEonB,UAAU,EAAG,GACnBpN,EAAIha,EAAEonB,UAAU,EAAG,GACnBrN,EAAI/Z,EAAEonB,UAAU,EAAG,GACnBF,GAAKA,EACLC,GAAKA,EACLnN,GAAKA,EACLD,GAAKA,GAEF,CACH6M,IAAKS,SAASH,EAAG,IACjBL,MAAOQ,SAASF,EAAG,IACnBL,KAAMO,SAASrN,EAAG,IAClBlR,MAAOiR,EAAIsN,SAAStN,EAAG,IAAM,IAAM,EAE3C,EAIIzR,UAAWqe,GAAKre,WC/Bdgf,GAAO,CACTrgB,KAAM+e,GAAc,MAAO,OAC3Bpd,MAAOsd,GAAW,MAAO,aAAc,aACvC5d,UAAW,SAAAjF,GAAwD,IAArDkkB,EAAGlkB,EAAHkkB,IAAKC,EAAUnkB,EAAVmkB,WAAYC,EAASpkB,EAATokB,UAASV,EAAA1jB,EAAEyF,MAAOke,OAAO,IAAAD,EAAG,EAACA,EACxD,MAAQ,QACJre,KAAKQ,MAAMqe,GACX,KACA3d,GAAQtB,UAAUW,EAASue,IAC3B,KACA5d,GAAQtB,UAAUW,EAASwe,IAC3B,KACAxe,EAASH,EAAMR,UAAU0e,IACzB,GACR,GCbEU,GAAQ,CACVzgB,KAAM,SAACjH,GAAC,OAAK2mB,GAAK1f,KAAKjH,IAAMinB,GAAIhgB,KAAKjH,IAAMsnB,GAAKrgB,KAAKjH,EAAE,EACxD4I,MAAO,SAAC5I,GACJ,OAAI2mB,GAAK1f,KAAKjH,GACH2mB,GAAK/d,MAAM5I,GAEbsnB,GAAKrgB,KAAKjH,GACRsnB,GAAK1e,MAAM5I,GAGXinB,GAAIre,MAAM5I,EAEzB,EACAsI,UAAW,SAACtI,GACR,OAAOsJ,GAAStJ,GACVA,EACAA,EAAEF,eAAe,OACb6mB,GAAKre,UAAUtI,GACfsnB,GAAKhf,UAAUtI,EAC7B,GCHEiV,GAAM,SAACuO,EAAMmE,EAAIC,GAAQ,OAAMA,EAAWpE,EAAOoE,EAAWD,EAAKnE,CAAI,ECpB3E,SAASqE,GAAS7oB,EAAG8oB,EAAGC,GAKpB,OAJIA,EAAI,IACJA,GAAK,GACLA,EAAI,IACJA,GAAK,GACLA,EAAI,EAAI,EACD/oB,EAAc,GAAT8oB,EAAI9oB,GAAS+oB,EACzBA,EAAI,GACGD,EACPC,EAAI,EAAI,EACD/oB,GAAK8oB,EAAI9oB,IAAM,EAAI,EAAI+oB,GAAK,EAChC/oB,CACX,CCHA,IAAMgpB,GAAiB,SAACxE,EAAMmE,EAAI3nB,GAC9B,IAAMioB,EAAWzE,EAAOA,EACxB,OAAO9a,KAAKwf,KAAKxf,KAAKD,IAAI,EAAGzI,GAAK2nB,EAAKA,EAAKM,GAAYA,GAC5D,EACME,GAAa,CAAClB,GAAKN,GAAMW,IACzBc,GAAe,SAACpoB,GAAC,OAAKmoB,GAAWE,MAAK,SAAChgB,GAAI,OAAKA,EAAKpB,KAAKjH,EAAE,GAAC,EACnE,SAASsoB,GAAOZ,GACZ,IAAMrf,EAAO+f,GAAaV,GAC1BvD,GAAUrjB,QAAQuH,GAAO,IAAF9H,OAAMmnB,EAAK,yEAClC,IAAIa,EAAQlgB,EAAKO,MAAM8e,GAKvB,OAJIrf,IAASif,KAETiB,EDRR,SAAmBllB,GAAwC,IAArCkkB,EAAGlkB,EAAHkkB,IAAKC,EAAUnkB,EAAVmkB,WAAYC,EAASpkB,EAATokB,UAAW3e,EAAKzF,EAALyF,MAC9Cye,GAAO,IAEPE,GAAa,IACb,IAAIb,EAAM,EACNC,EAAQ,EACRC,EAAO,EACX,GALAU,GAAc,IAQT,CACD,IAAMM,EAAIL,EAAY,GAChBA,GAAa,EAAID,GACjBC,EAAYD,EAAaC,EAAYD,EACrCxoB,EAAI,EAAIyoB,EAAYK,EAC1BlB,EAAMiB,GAAS7oB,EAAG8oB,EAAGP,EAAM,EAAI,GAC/BV,EAAQgB,GAAS7oB,EAAG8oB,EAAGP,GACvBT,EAAOe,GAAS7oB,EAAG8oB,EAAGP,EAAM,EAAI,EACpC,MAVIX,EAAMC,EAAQC,EAAOW,EAWzB,MAAO,CACHb,IAAKle,KAAKQ,MAAY,IAAN0d,GAChBC,MAAOne,KAAKQ,MAAc,IAAR2d,GAClBC,KAAMpe,KAAKQ,MAAa,IAAP4d,GACjBhe,MAAAA,EAER,CCjBgB0f,CAAWD,IAEhBA,CACX,CACA,IAAME,GAAW,SAACjF,EAAMmE,GACpB,IAAMe,EAAWJ,GAAO9E,GAClBmF,EAASL,GAAOX,GAChBiB,GAAOhlB,EAAAA,EAAAA,GAAA,GAAQ8kB,GACrB,OAAO,SAAC1oB,GAKJ,OAJA4oB,EAAQhC,IAAMoB,GAAeU,EAAS9B,IAAK+B,EAAO/B,IAAK5mB,GACvD4oB,EAAQ/B,MAAQmB,GAAeU,EAAS7B,MAAO8B,EAAO9B,MAAO7mB,GAC7D4oB,EAAQ9B,KAAOkB,GAAeU,EAAS5B,KAAM6B,EAAO7B,KAAM9mB,GAC1D4oB,EAAQ9f,MAAQmM,GAAIyT,EAAS5f,MAAO6f,EAAO7f,MAAO9I,GAC3C2mB,GAAKre,UAAUsgB,EAC1B,CACJ,ECjCMC,GAAa,OACbC,GAAc,OASpB,SAASC,GAAoB/oB,GACR,kBAANA,IACPA,EAAI,GAAHO,OAAMP,IACX,IAAMkT,EAAS,GACX8V,EAAY,EACZC,EAAa,EACXC,EAASlpB,EAAEumB,MAAMnd,GACnB8f,IACAF,EAAYE,EAAO3rB,OAGnByC,EAAIA,EAAE0T,QAAQtK,EAAYyf,IAC1B3V,EAAOjW,KAAIC,MAAXgW,EAAMiW,GAASD,EAAOE,IAAI1B,GAAM9e,UAEpC,IAAMygB,EAAUrpB,EAAEumB,MAAMpd,GAMxB,OALIkgB,IACAJ,EAAaI,EAAQ9rB,OACrByC,EAAIA,EAAE0T,QAAQvK,EAAY2f,IAC1B5V,EAAOjW,KAAIC,MAAXgW,EAAMiW,GAASE,EAAQD,IAAIzgB,EAAOC,UAE/B,CAAEsK,OAAAA,EAAQ8V,UAAAA,EAAWC,WAAAA,EAAYK,UAAWtpB,EACvD,CACA,SAAS4I,GAAM5I,GACX,OAAO+oB,GAAoB/oB,GAAGkT,MAClC,CACA,SAASqW,GAAkB/rB,GACvB,IAAAgsB,EAAyCT,GAAoBvrB,GAArD0V,EAAMsW,EAANtW,OAAQ8V,EAASQ,EAATR,UAAWM,EAASE,EAATF,UACrBG,EAAYvW,EAAO3V,OACzB,OAAO,SAACyC,GAEJ,IADA,IAAI0pB,EAASJ,EACJjsB,EAAI,EAAGA,EAAIosB,EAAWpsB,IAC3BqsB,EAASA,EAAOhW,QAAQrW,EAAI2rB,EAAYH,GAAaC,GAAazrB,EAAI2rB,EAChEtB,GAAMpf,UAAUtI,EAAE3C,IAClB4L,EAASjJ,EAAE3C,KAErB,OAAOqsB,CACX,CACJ,CACA,IAAMC,GAAuB,SAAC3pB,GAAC,MAAkB,kBAANA,EAAiB,EAAIA,CAAC,EAMjE,IAAM4pB,GAAU,CAAE3iB,KApDlB,SAAcjH,GACV,IAAIwQ,EAAIqZ,EACR,OAAQC,MAAM9pB,IACVsJ,GAAStJ,MACwB,QAA9BwQ,EAAKxQ,EAAEumB,MAAMpd,UAAgC,IAAPqH,OAAgB,EAASA,EAAGjT,SAAW,KAC3C,QAA9BssB,EAAK7pB,EAAEumB,MAAMnd,UAAgC,IAAPygB,OAAgB,EAASA,EAAGtsB,SAAW,GAChF,CACZ,EA6CwBqL,MAAAA,GAAO2gB,kBAAAA,GAAmBQ,kBALlD,SAA2B/pB,GACvB,IAAMgqB,EAASphB,GAAM5I,GAErB,OADoBupB,GAAkBvpB,EAC/BiqB,CAAYD,EAAOZ,IAAIO,IAClC,GClDA,SAASO,GAASnZ,EAAQ3T,GACtB,MAAsB,kBAAX2T,EACA,SAAC/Q,GAAC,OAAKiV,GAAIlE,EAAQ3T,EAAQ4C,EAAE,EAE/B0nB,GAAMzgB,KAAK8J,GACT0X,GAAS1X,EAAQ3T,GAGjB+sB,GAAWpZ,EAAQ3T,EAElC,CACA,IAAMgtB,GAAW,SAAC5G,EAAMmE,GACpB,IAAM+B,EAAMP,GAAO3F,GACbiG,EAAYC,EAAOnsB,OACnB8sB,EAAa7G,EAAK4F,KAAI,SAACkB,EAAUjtB,GAAC,OAAK6sB,GAASI,EAAU3C,EAAGtqB,GAAG,IACtE,OAAO,SAAC2C,GACJ,IAAK,IAAI3C,EAAI,EAAGA,EAAIosB,EAAWpsB,IAC3BqsB,EAAOrsB,GAAKgtB,EAAWhtB,GAAG2C,GAE9B,OAAO0pB,CACX,CACJ,EACMa,GAAY,SAACxZ,EAAQ3T,GACvB,IAAMssB,GAAM9lB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQmN,GAAW3T,GACzBitB,EAAa,CAAC,EACpB,IAAK,IAAMpuB,KAAOytB,OACMvrB,IAAhB4S,EAAO9U,SAAsCkC,IAAhBf,EAAOnB,KACpCouB,EAAWpuB,GAAOiuB,GAASnZ,EAAO9U,GAAMmB,EAAOnB,KAGvD,OAAO,SAAC+D,GACJ,IAAK,IAAM/D,KAAOouB,EACdX,EAAOztB,GAAOouB,EAAWpuB,GAAK+D,GAElC,OAAO0pB,CACX,CACJ,EACMS,GAAa,SAACpZ,EAAQ3T,GACxB,IAAMotB,EAAWZ,GAAQL,kBAAkBnsB,GACrCqtB,EAAc1B,GAAoBhY,GAClC2Z,EAAc3B,GAAoB3rB,GAGxC,OAFuBqtB,EAAYzB,YAAc0B,EAAY1B,WACzDyB,EAAYxB,YAAcyB,EAAYzB,WAE/BhP,GAAKmQ,GAASK,EAAYvX,OAAQwX,EAAYxX,QAASsX,IAG9DtG,IAAQ,EAAM,mBAAF3jB,OAAqBwQ,EAAM,WAAAxQ,OAAUnD,EAAM,6KAChD,SAAC4B,GAAC,SAAAuB,OAAQvB,EAAI,EAAI5B,EAAS2T,EAAM,EAEhD,EC7CM6W,GAAW,SAACpE,EAAMmE,EAAIzrB,GACxB,IAAMyuB,EAAmBhD,EAAKnE,EAC9B,OAA4B,IAArBmH,EAAyB,GAAKzuB,EAAQsnB,GAAQmH,CACzD,ECNMC,GAAY,SAACpH,EAAMmE,GAAE,OAAK,SAAC3oB,GAAC,OAAKiW,GAAIuO,EAAMmE,EAAI3oB,EAAE,GAqBvD,SAAS6rB,GAAanB,EAAQ3E,EAAM+F,GAIhC,IAHA,IArBwB9qB,EAqBlB+qB,EAAS,GACTC,EAAeF,IArBJ,kBADO9qB,EAsB+B0pB,EAAO,IApBnDkB,GAEW,kBAAN5qB,EACR0nB,GAAMzgB,KAAKjH,GACJyoB,GAGA0B,GAGNlqB,MAAMC,QAAQF,GACZoqB,GAEW,kBAANpqB,EACLuqB,GAEJK,IAKDK,EAAYvB,EAAOnsB,OAAS,EACzBF,EAAI,EAAGA,EAAI4tB,EAAW5tB,IAAK,CAChC,IAAI6tB,EAAQF,EAAatB,EAAOrsB,GAAIqsB,EAAOrsB,EAAI,IAC/C,GAAI0nB,EAAM,CACN,IAAMoG,EAAiBlrB,MAAMC,QAAQ6kB,GAAQA,EAAK1nB,GAAK0nB,EACvDmG,EAAQjR,GAAKkR,EAAgBD,EACjC,CACAH,EAAO9tB,KAAKiuB,EAChB,CACA,OAAOH,CACX,CAoBA,SAASK,GAAYttB,EAAO4rB,GAAqD,IAAArmB,EAAA/F,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC+tB,EAAAhoB,EAAzCkF,MAAO+iB,OAAO,IAAAD,GAAOA,EAAEtG,EAAI1hB,EAAJ0hB,KAAMmG,EAAK7nB,EAAL6nB,MACzDK,EAAcztB,EAAMP,OAO1B,GANA4mB,GAAUoH,IAAgB7B,EAAOnsB,OAAQ,wDACzC4mB,IAAWY,IAAS9kB,MAAMC,QAAQ6kB,IAASA,EAAKxnB,SAAWguB,EAAc,EAAG,oIAKxD,IAAhBA,EACA,OAAO,kBAAM7B,EAAO,EAAE,EAEtB5rB,EAAM,GAAKA,EAAMytB,EAAc,KAC/BztB,EAAQqrB,GAAIrrB,GAAO0tB,UACnB9B,EAASP,GAAIO,GAAQ8B,WAEzB,IAAMT,EAASF,GAAanB,EAAQ3E,EAAMmG,GACpCD,EAAYF,EAAOxtB,OACnBkuB,EAAe,SAACzrB,GAClB,IAAI3C,EAAI,EACR,GAAI4tB,EAAY,EACZ,KAAO5tB,EAAIS,EAAMP,OAAS,KAClByC,EAAIlC,EAAMT,EAAI,IADOA,KAKjC,IAAMquB,EAAkB9D,GAAS9pB,EAAMT,GAAIS,EAAMT,EAAI,GAAI2C,GACzD,OAAO+qB,EAAO1tB,GAAGquB,EACrB,EACA,OAAOJ,EACD,SAACtrB,GAAC,OAAKyrB,EAAaljB,EAAMzK,EAAM,GAAIA,EAAMytB,EAAc,GAAIvrB,GAAG,EAC/DyrB,CACV,CC5FA,SAASE,GAActI,GACnB,IAAMrS,EAAS,CAAC,GAEhB,OCFJ,SAAoBA,EAAQ4a,GAExB,IADA,IAAMpjB,EAAMwI,EAAOA,EAAOzT,OAAS,GAC1BF,EAAI,EAAGA,GAAKuuB,EAAWvuB,IAAK,CACjC,IAAMwuB,EAAiBjE,GAAS,EAAGgE,EAAWvuB,GAC9C2T,EAAO/T,KAAKgY,GAAIzM,EAAK,EAAGqjB,GAC5B,CACJ,CDLIC,CAAW9a,EAAQqS,EAAI9lB,OAAS,GACzByT,CACX,CEcA,IAAM+a,GAAa,SAAChE,EAAGiE,EAAIC,GAAE,SAAQ,EAAM,EAAMA,EAAK,EAAMD,GAAMjE,GAAK,EAAMkE,EAAK,EAAMD,IAAOjE,EAAI,EAAMiE,GACrGjE,CAAC,EACCmE,GAAuB,KACvBC,GAA2B,GAkBjC,SAASC,GAAYC,EAAKC,EAAKC,EAAKC,GAEhC,GAAIH,IAAQC,GAAOC,IAAQC,EACvB,OAAO7N,GACX,IAAM8N,EAAW,SAACC,GAAE,OArBxB,SAAyB/kB,EAAGglB,EAAYC,EAAYP,EAAKE,GACrD,IAAIM,EACAC,EACAzvB,EAAI,EACR,IAEIwvB,EAAWd,GADXe,EAAWH,GAAcC,EAAaD,GAAc,EACpBN,EAAKE,GAAO5kB,GAC7B,EACXilB,EAAaE,EAGbH,EAAaG,QAEZpkB,KAAKqkB,IAAIF,GAAYX,MACxB7uB,EAAI8uB,IACV,OAAOW,CACX,CAK6BE,CAAgBN,EAAI,EAAG,EAAGL,EAAKE,EAAI,EAE5D,OAAO,SAACxE,GAAC,OAAW,IAANA,GAAiB,IAANA,EAAUA,EAAIgE,GAAWU,EAAS1E,GAAIuE,EAAKE,EAAI,CAC5E,CC7CA,IAAMrH,GAAS,SAACnmB,GAAC,OAAK,EAAI0J,KAAKukB,IAAIvkB,KAAKwkB,KAAKluB,GAAG,EAC1ComB,GAAUW,GAAcZ,IACxBgI,GAAYrH,GAAaV,ICDzBE,GAAU8G,GAAY,IAAM,KAAM,IAAM,KACxC/G,GAASU,GAAcT,IACvB8H,GAAYtH,GAAaT,ICEzBgI,GAAe,CACjBvI,OAAQnG,GACRqG,OAAAA,GACAE,UAAAA,GACAD,QAAAA,GACAE,OAAAA,GACAgI,UAAAA,GACA/H,QAAAA,GACAC,OAAAA,GACA+H,UAAAA,GACA9H,QAAAA,GACAgI,WCjBe,SAACtuB,GAAC,OAAMA,GAAK,GAAK,EAAI,GAAMqmB,GAAOrmB,GAAK,IAAO,EAAI0J,KAAK6kB,IAAI,GAAI,IAAMvuB,EAAI,IAAI,GDmB3FwuB,GAA6B,SAAC5Y,GAChC,GAAI3U,MAAMC,QAAQ0U,GAAa,CAE3BuP,GAAgC,IAAtBvP,EAAWrX,OAAc,2DACnC,IAAAkwB,GAAA/I,EAAAA,GAAAA,GAAyB9P,EAAU,GACnC,OAAOwX,GADEqB,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAAIA,EAAA,GAEzB,CACK,MAA0B,kBAAf7Y,GAEZuP,QAAuChmB,IAA7BkvB,GAAazY,GAA2B,wBAAFrU,OAA0BqU,EAAU,MAC7EyY,GAAazY,IAEjBA,CACX,EACM8Y,GAAgB,SAAC3I,GACnB,OAAO9kB,MAAMC,QAAQ6kB,IAA4B,kBAAZA,EAAK,EAC9C,EE5BA,SAAS4I,GAAStqB,GAA4E,IAHvE6P,EAAQsS,EAG+DoI,EAAAvqB,EAAzEwqB,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAaE,EAAczqB,EAAzBsqB,UAA2BI,EAAK1qB,EAAL0qB,MAAKC,EAAA3qB,EAAE0hB,KAAAA,OAAI,IAAAiJ,EAAG,YAAWA,EAK/EC,EAAkBP,GAAc3I,GAChCA,EAAKqE,IAAIoE,IACTA,GAA2BzI,GAK3BtX,EAAQ,CACVygB,MAAM,EACNhyB,MAAO4xB,EAAe,IAKpBK,EC5BV,SAA8Bnd,EAAQ6c,GAClC,OAAO7c,EAAOoY,KAAI,SAAC9R,GAAC,OAAKA,EAAIuW,CAAQ,GACzC,CD0B0BO,CAGtBL,GAASA,EAAMxwB,SAAWuwB,EAAevwB,OACnCwwB,EACApC,GAAcmC,GAAiBD,GAC/BQ,EAAoBjD,GAAY+C,EAAeL,EAAgB,CACjE/I,KAAM9kB,MAAMC,QAAQ+tB,GACdA,GA9BS/a,EA+BK4a,EA/BGtI,EA+BayI,EA9BjC/a,EAAOkW,KAAI,kBAAM5D,GAAUN,EAAS,IAAEzI,OAAO,EAAGvJ,EAAO3V,OAAS,MAgCvE,MAAO,CACH+wB,mBAAoBT,EACpBlK,KAAM,SAACoE,GAGH,OAFAta,EAAMvR,MAAQmyB,EAAkBtG,GAChCta,EAAMygB,KAAOnG,GAAK8F,EACXpgB,CACX,EAER,CEzCA,SAAS8gB,GAAkBvK,EAAUwK,GACjC,OAAOA,EAAgBxK,GAAY,IAAOwK,GAAiB,CAC/D,CCNA,IAAMC,GAAyB,EAC/B,SAASC,GAAsBC,EAAc5G,EAAGplB,GAC5C,IAAMisB,EAAQlmB,KAAKD,IAAIsf,EAAI0G,GAAwB,GACnD,OAAOF,GAAkB5rB,EAAUgsB,EAAaC,GAAQ7G,EAAI6G,EAChE,CCFA,IAAMC,GAAU,KACVC,GAAc,IACdC,GAAc,GACdC,GAAa,IACbC,GAAa,EACnB,SAASC,GAAU7rB,GAA6D,IACxE8rB,EACAC,EAFwExB,EAAAvqB,EAA1DwqB,SAAAA,OAAQ,IAAAD,EAAG,IAAGA,EAAAyB,EAAAhsB,EAAEisB,OAAAA,OAAM,IAAAD,EAAG,IAAIA,EAAAE,EAAAlsB,EAAE2gB,SAAAA,OAAQ,IAAAuL,EAAG,EAACA,EAAAC,EAAAnsB,EAAEosB,KAAAA,OAAI,IAAAD,EAAG,EAACA,EAGvEtL,GAAQ2J,GAAYzJ,GAAsB2K,IAAc,8CACxD,IAAIW,EAAe,EAAIJ,EAIvBI,EAAennB,EAAMymB,GAAYC,GAAYS,GAC7C7B,EAAWtlB,EAAMumB,GAAaC,GAAazK,GAAsBuJ,IAC7D6B,EAAe,GAIfP,EAAW,SAACQ,GACR,IAAMC,EAAmBD,EAAeD,EAClCvU,EAAQyU,EAAmB/B,EAC3B9T,EAAI6V,EAAmB5L,EACvBhK,EAAI6V,GAAgBF,EAAcD,GAClC/K,EAAIjc,KAAKonB,KAAK3U,GACpB,OAAO0T,GAAW9U,EAAIC,EAAK2K,CAC/B,EACAyK,EAAa,SAACO,GACV,IACMxU,EADmBwU,EAAeD,EACP7B,EAC3BjJ,EAAIzJ,EAAQ6I,EAAWA,EACvBtN,EAAIhO,KAAK6kB,IAAImC,EAAc,GAAKhnB,KAAK6kB,IAAIoC,EAAc,GAAK9B,EAC5DkC,EAAIrnB,KAAKonB,KAAK3U,GACdgM,EAAI0I,GAAgBnnB,KAAK6kB,IAAIoC,EAAc,GAAID,GAErD,QADgBP,EAASQ,GAAgBd,GAAU,GAAK,EAAI,KACzCjK,EAAIlO,GAAKqZ,GAAM5I,CACtC,IAMAgI,EAAW,SAACQ,GAGR,OAFUjnB,KAAKonB,KAAKH,EAAe9B,KACxB8B,EAAe3L,GAAY6J,EAAW,GACzCgB,EACZ,EACAO,EAAa,SAACO,GAGV,OAFUjnB,KAAKonB,KAAKH,EAAe9B,IACIA,EAAWA,GAAvC7J,EAAW2L,GAE1B,GAEJ,IACMA,EAmBV,SAAyBR,EAAUC,EAAYY,GAE3C,IADA,IAAItX,EAASsX,EACJ3yB,EAAI,EAAGA,EAAI4yB,GAAgB5yB,IAChCqb,GAAkByW,EAASzW,GAAU0W,EAAW1W,GAEpD,OAAOA,CACX,CAzByBwX,CAAgBf,EAAUC,EAD1B,EAAIvB,GAGzB,GADAA,EAAWzJ,GAAsByJ,GAC7B/D,MAAM6F,GACN,MAAO,CACHQ,UAAW,IACXC,QAAS,GACTvC,SAAAA,GAIJ,IAAMsC,EAAYznB,KAAK6kB,IAAIoC,EAAc,GAAKF,EAC9C,MAAO,CACHU,UAAAA,EACAC,QAAwB,EAAfV,EAAmBhnB,KAAKwf,KAAKuH,EAAOU,GAC7CtC,SAAAA,EAGZ,CACA,IAAMoC,GAAiB,GAQvB,SAASJ,GAAgBF,EAAcD,GACnC,OAAOC,EAAejnB,KAAKwf,KAAK,EAAIwH,EAAeA,EACvD,C,6CClFMW,GAAe,CAAC,WAAY,UAC5BC,GAAc,CAAC,YAAa,UAAW,QAC7C,SAASC,GAAa5iB,EAAShR,GAC3B,OAAOA,EAAKgE,MAAK,SAAC1E,GAAG,YAAsBkC,IAAjBwP,EAAQ1R,EAAkB,GACxD,CAwBA,SAASu0B,GAAMntB,GAAkD,IAuBzDotB,EAvBU9C,EAAStqB,EAATsqB,UAAW+C,EAASrtB,EAATqtB,UAAWC,EAASttB,EAATstB,UAAchjB,EAAO8C,GAAApN,EAAAwO,IACnDd,EAAS4c,EAAU,GACnBvwB,EAASuwB,EAAUA,EAAUpwB,OAAS,GAKtCkQ,EAAQ,CAAEygB,MAAM,EAAOhyB,MAAO6U,GACpC6f,EA/BJ,SAA0BjjB,GACtB,IAAIkjB,GAAajtB,EAAAA,EAAAA,GAAA,CACbogB,SAAU,EACVmM,UAAW,IACXC,QAAS,GACTX,KAAM,EACNqB,wBAAwB,GACrBnjB,GAGP,IAAK4iB,GAAa5iB,EAAS2iB,KACvBC,GAAa5iB,EAAS0iB,IAAe,CACrC,IAAMU,EAAU7B,GAAWvhB,IAC3BkjB,GAAajtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNitB,GACAE,GAAO,IACV/M,SAAU,EACVyL,KAAM,KAEIqB,wBAAyB,CAC3C,CACA,OAAOD,CACX,CASsFG,CAAiBrjB,GAA3FwiB,EAASS,EAATT,UAAWC,EAAOQ,EAAPR,QAASX,EAAImB,EAAJnB,KAAMzL,EAAQ4M,EAAR5M,SAAU6J,EAAQ+C,EAAR/C,SAAUiD,EAAsBF,EAAtBE,uBAChDG,EAAkBjN,GAAYM,GAAsBN,GAAY,EAChE0L,EAAeU,GAAW,EAAI1nB,KAAKwf,KAAKiI,EAAYV,IACpDyB,EAAe9zB,EAAS2T,EACxBogB,EAAsB7M,GAAsB5b,KAAKwf,KAAKiI,EAAYV,IAQlE2B,EAAkB1oB,KAAKqkB,IAAImE,GAAgB,EAIjD,GAHAP,IAAcA,EAAYS,EAAkB,IAAO,GACnDV,IAAcA,EAAYU,EAAkB,KAAQ,IAEhD1B,EAAe,EAAG,CAClB,IAAM2B,EAAcxB,GAAgBsB,EAAqBzB,GAEzDe,EAAgB,SAAC1I,GACb,IAAMoH,EAAWzmB,KAAKonB,KAAKJ,EAAeyB,EAAsBpJ,GAChE,OAAQ3qB,EACJ+xB,IACO8B,EACCvB,EAAeyB,EAAsBD,GACrCG,EACA3oB,KAAKukB,IAAIoE,EAActJ,GACvBmJ,EAAexoB,KAAK4oB,IAAID,EAActJ,GACtD,CACJ,MACK,GAAqB,IAAjB2H,EAELe,EAAgB,SAAC1I,GAAC,OAAK3qB,EACnBsL,KAAKonB,KAAKqB,EAAsBpJ,IAC3BmJ,GACID,EAAkBE,EAAsBD,GAAgBnJ,EAAE,MAEtE,CAED,IAAMwJ,EAAoBJ,EAAsBzoB,KAAKwf,KAAKwH,EAAeA,EAAe,GACxFe,EAAgB,SAAC1I,GACb,IAAMoH,EAAWzmB,KAAKonB,KAAKJ,EAAeyB,EAAsBpJ,GAE1DyJ,EAAW9oB,KAAKF,IAAI+oB,EAAoBxJ,EAAG,KACjD,OAAQ3qB,EACH+xB,IACK8B,EACEvB,EAAeyB,EAAsBD,GACrCxoB,KAAK+oB,KAAKD,GACVD,EACIL,EACAxoB,KAAKgpB,KAAKF,IAClBD,CACZ,CACJ,CACA,MAAO,CACHjD,mBAAoBwC,GAAyBjD,GAAmB,KAChElK,KAAM,SAACoE,GACH,IAAMplB,EAAU8tB,EAAc1I,GAC9B,GAAK+I,EAqBDrjB,EAAMygB,KAAOnG,GAAK8F,MArBO,CACzB,IAAI/Y,EAAkBmc,EACZ,IAANlJ,IAOIjT,EADA4a,EAAe,EACGhB,GAAsB+B,EAAe1I,EAAGplB,GAGxC,GAG1B,IAAMgvB,EAA2BjpB,KAAKqkB,IAAIjY,IAAoB6b,EACxDiB,EAA+BlpB,KAAKqkB,IAAI3vB,EAASuF,IAAY+tB,EACnEjjB,EAAMygB,KACFyD,GAA4BC,CACpC,CAKA,OADAnkB,EAAMvR,MAAQuR,EAAMygB,KAAO9wB,EAASuF,EAC7B8K,CACX,EAER,CC3HA,SAASokB,GAAOxuB,GAAiK,IAA9JsqB,EAAStqB,EAATsqB,UAAS4B,EAAAlsB,EAAE2gB,SAAAA,OAAQ,IAAAuL,EAAG,EAAGA,EAAAuC,EAAAzuB,EAAE0uB,MAAAA,OAAK,IAAAD,EAAG,GAAGA,EAAAE,EAAA3uB,EAAE4uB,aAAAA,OAAY,IAAAD,EAAG,IAAGA,EAAAE,EAAA7uB,EAAE8uB,cAAAA,OAAa,IAAAD,EAAG,GAAEA,EAAAE,EAAA/uB,EAAEgvB,gBAAAA,OAAe,IAAAD,EAAG,IAAGA,EAAEE,EAAYjvB,EAAZivB,aAAc9pB,EAAGnF,EAAHmF,IAAKC,EAAGpF,EAAHoF,IAAG8pB,EAAAlvB,EAAEqtB,UAAAA,OAAS,IAAA6B,EAAG,GAAGA,EAAE5B,EAASttB,EAATstB,UACzJ5f,EAAS4c,EAAU,GACnBlgB,EAAQ,CACVygB,MAAM,EACNhyB,MAAO6U,GAGLyhB,EAAkB,SAACxyB,GACrB,YAAY7B,IAARqK,EACOC,OACCtK,IAARsK,GAEGC,KAAKqkB,IAAIvkB,EAAMxI,GAAK0I,KAAKqkB,IAAItkB,EAAMzI,GAD/BwI,EAC0CC,CACzD,EACIgqB,EAAYV,EAAQ/N,EAClB0O,EAAQ3hB,EAAS0hB,EACjBr1B,OAA0Be,IAAjBm0B,EAA6BI,EAAQJ,EAAaI,GAK7Dt1B,IAAWs1B,IACXD,EAAYr1B,EAAS2T,GACzB,IAcI4hB,EACAC,EAfEC,EAAY,SAAC9K,GAAC,OAAM0K,EAAY/pB,KAAKonB,KAAK/H,EAAIkK,EAAa,EAC3Da,EAAa,SAAC/K,GAAC,OAAK3qB,EAASy1B,EAAU9K,EAAE,EACzCgL,EAAgB,SAAChL,GACnB,IAAM5M,EAAQ0X,EAAU9K,GAClBiL,EAASF,EAAW/K,GAC1Bta,EAAMygB,KAAOxlB,KAAKqkB,IAAI5R,IAAUuV,EAChCjjB,EAAMvR,MAAQuR,EAAMygB,KAAO9wB,EAAS41B,CACxC,EASMC,EAAqB,SAAClL,GAjCN,IAAC/nB,KAkCAyN,EAAMvR,WAlCSiC,IAARqK,GAAqBxI,EAAIwI,QAAiBrK,IAARsK,GAAqBzI,EAAIyI,KAoCrFkqB,EAAsB5K,EACtB6K,EAAWpC,GAAO,CACd7C,UAAW,CAAClgB,EAAMvR,MAAOs2B,EAAgB/kB,EAAMvR,QAC/C8nB,SAAU0K,GAAsBoE,EAAY/K,EAAGta,EAAMvR,OACrDk0B,QAAS+B,EACThC,UAAWkC,EACX3B,UAAAA,EACAC,UAAAA,IAER,EAEA,OADAsC,EAAmB,GACZ,CACH3E,mBAAoB,KACpB3K,KAAM,SAACoE,GAOH,IAAImL,GAAkB,EAUtB,OATKN,QAAoCz0B,IAAxBw0B,IACbO,GAAkB,EAClBH,EAAchL,GACdkL,EAAmBlL,SAMK5pB,IAAxBw0B,GAAqC5K,EAAI4K,EAClCC,EAASjP,KAAKoE,EAAI4K,KAGxBO,GAAmBH,EAAchL,GAC3Bta,EAEf,EAER,CCjFA,IAAM0lB,GAAkB,SAACnuB,GACrB,IAAMouB,EAAgB,SAAH/vB,GAAA,IAAM+X,EAAS/X,EAAT+X,UAAS,OAAOpW,EAAOoW,EAAU,EAC1D,MAAO,CACHhb,MAAO,kBAAMyc,GAAK7X,OAAOouB,GAAe,EAAK,EAC7CC,KAAM,kBAAMpW,GAAWjY,OAAOouB,EAAc,EAK5CE,IAAK,kBAAMpY,GAAUG,aAAeH,GAAUE,UAAYmY,YAAYD,KAAK,EAEnF,E,kICNME,GAAQ,CACVC,MAAO5B,GACPA,QAAAA,GACA6B,MAAO/F,GACPA,UAAWA,GACX6C,OAAAA,IAMEzB,GAAc,IAWpB,SAAS4E,GAAYtwB,GAA2M,IACxNuwB,EACAC,EAaAC,EAfwNC,EAAA1wB,EAAxM2wB,SAAAA,OAAQ,IAAAD,GAAOA,EAAAE,EAAA5wB,EAAE6wB,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAAE,EAAA9wB,EAAE+wB,OAAAA,OAAM,IAAAD,EAAGhB,GAAegB,EAAaE,EAAWhxB,EAAtBsqB,UAAS2G,EAAAjxB,EAAegF,KAAAA,OAAI,IAAAisB,EAAG,YAAWA,EAAAC,EAAAlxB,EAAEmxB,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAE,EAAApxB,EAAEqxB,YAAAA,OAAW,IAAAD,EAAG,EAACA,EAAAE,EAAAtxB,EAAEuxB,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAEE,EAAMxxB,EAANwxB,OAAQC,EAAMzxB,EAANyxB,OAAQC,EAAU1xB,EAAV0xB,WAAYC,EAAQ3xB,EAAR2xB,SAAarnB,EAAO8C,GAAApN,EAAAwO,IAQlNojB,EAAwB,WAC1BpB,EAAyB,IAAIqB,SAAQ,SAACC,GAClCvB,EAAyBuB,CAC7B,GACJ,EAEAF,IAEA,IAMIG,EANEC,EAAmB7B,GAAMnrB,IAASslB,GAOpC0H,IAAqB1H,IACK,kBAAnB0G,EAAY,KACnBe,EAAwBhK,GAAY,CAAC,EAAG,KAAMiJ,EAAa,CACvD9rB,OAAO,IAEX8rB,EAAc,CAAC,EAAG,MAEtB,IACIiB,EADEC,EAAYF,GAAgBzxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI+J,GAAO,IAAEggB,UAAW0G,KAEzC,WAAfO,IACAU,EAAoBD,GAAgBzxB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B+J,GAAO,IACVggB,UAAWxE,GAAIkL,GAAa7I,UAC5BxH,WAAYrW,EAAQqW,UAAY,OAGxC,IAAIwR,EAAY,OACZC,EAAW,KACXC,EAAY,KASqB,OAAjCH,EAAUjH,oBAA+BkG,IACzCe,EAAUjH,mBA7DlB,SAA2BiH,GAIvB,IAHA,IAAI1H,EAAW,EAEXpgB,EAAQ8nB,EAAU5R,KAAKkK,IACnBpgB,EAAMygB,MAAQL,EAAWkB,IAC7BlB,GAHa,GAIbpgB,EAAQ8nB,EAAU5R,KAAKkK,GAE3B,OAAOA,CACX,CAoDuC8H,CAAkBJ,IAErD,IAAQjH,EAAuBiH,EAAvBjH,mBACJsH,EAAmBC,IACnBC,EAAgBD,IAChBvH,IAEAwH,GADAF,EAAmBtH,EAAqBoG,IACJF,EAAS,GAAKE,GAEtD,IAAIqB,EAAO,EACLC,EAAO,SAAC5a,GACV,GAAkB,OAAdsa,EAAJ,CAGIK,EADa,OAAbN,EACOA,EAGAra,EAAYsa,EAGvBK,EAAOrtB,KAAKD,IAAIstB,EAAO7B,EAAO,GAKZ,aAAdsB,GAAyC,OAAbC,IAC5BM,EAAOD,GAEX,IAAIG,EAAUF,EACVG,EAAiBX,EACrB,GAAIf,EAAQ,CAMR,IAAM5M,EAAWmO,EAAOH,EAKpBO,EAAmBztB,KAAK0tB,MAAMxO,GAK9ByO,EAAoBzO,EAAW,GAK9ByO,GAAqBzO,GAAY,IAClCyO,EAAoB,GAEF,IAAtBA,GAA2BF,IAI3B,IAAMG,EAAiBH,EAAmB,EACtCG,IACmB,YAAf1B,GACAyB,EAAoB,EAAIA,EACpB3B,IACA2B,GAAqB3B,EAAckB,IAGnB,WAAfhB,IACLsB,EAAiBZ,IAQzBW,GALUF,GAAQD,EACG,YAAflB,GAA4B0B,EACxB,EACA,EACJ/tB,EAAM,EAAG,EAAG8tB,IACJT,CAClB,CACA,IAAMnoB,EAAQyoB,EAAevS,KAAKsS,GAC5B/5B,EAAgBuR,EAAhBvR,MAAOgyB,EAASzgB,EAATygB,KAYb,OAXI8G,GACAA,EAASI,EAAwBA,EAAsBl5B,GAASA,GAEzC,OAAvBoyB,IACAJ,EAAO6H,GAAQD,GAEsB,OAAbL,IACT,aAAdD,GAA2C,YAAdA,GAA2BtH,IAEzDqI,IAEG9oB,CA9EG,CA+Ed,EACM8oB,EAAS,WACXzC,GAAmBA,EAAgBT,OACnCmC,EAAY,WACZT,GAAcA,IACdnB,IACAqB,GACJ,EACMuB,EAAO,WACJ1C,IACDA,EAAkBM,EAAO4B,IAC7B,IAAM1C,EAAMQ,EAAgBR,MAC5BuB,GAAUA,IACVW,EAAY,UACK,OAAbC,EACAC,EAAYpC,EAAMmC,EAEZC,IAGNA,EAAYpC,GAEhBmC,EAAW,KACX3B,EAAgB1zB,OACpB,EA0CA,OAzCI4zB,GACAwC,IAEa,CACbC,KAAI,SAACtB,EAASuB,GACV,OAAO7C,EAAuB4C,KAAKtB,EAASuB,EAChD,EACIX,WACA,OAAOzR,GAAsByR,EACjC,EACIA,SAAKY,GACLA,EAAUvS,GAAsBuS,GAChCZ,EAAOY,EACU,OAAblB,GAAsB3B,EAItB4B,EAAY5B,EAAgBR,MAAQqD,EAHpClB,EAAWkB,CAKnB,EACIlpB,YACA,OAAO+nB,CACX,EACAgB,KAAAA,EACAI,MAAO,WACHpB,EAAY,SACZC,EAAWM,CACf,EACA1C,KAAM,WACgB,SAAdmC,IAEJA,EAAY,OACZV,GAAUA,IACVhB,GAAmBA,EAAgBT,OACnCS,OAAkB31B,EACtB,EACA04B,OAAQ,SAACZ,GAEL,OADAP,EAAY,EACLM,EAAKC,EAChB,EAGR,C,iCCpOMa,GAAoB,IAAIzvB,IAAI,CAC9B,UACA,WACA,SACA,YACA,oBAOE0vB,GAAc,GAKdhI,GAAc,IACdiI,GAAgC,SAACC,EAAWtpB,GAAO,MAAsB,WAAjBA,EAAQtF,MACpD,oBAAd4uB,OjC9B4BzR,EiC+BJ7X,EAAQoX,OjC7B5B9kB,MAAMC,QAAQslB,IACK,kBAAXA,GAAuBX,GAAqBW,IAH5D,IAAgCA,CiC+BS,EACzC,SAAS0R,GAA2Bh7B,EAAO+6B,EAAS5zB,GAAYA,EAAR2xB,SAAoC,IAYpFpB,EACAC,EAb0DkB,EAAU1xB,EAAV0xB,WAAepnB,EAAO8C,GAAApN,EAAAwO,IAOpF,KAN+BgU,GAASH,SACpCoR,GAAkBnwB,IAAIswB,KACrBtpB,EAAQ+mB,aACc,WAAvB/mB,EAAQinB,YACY,IAApBjnB,EAAQyiB,SACS,YAAjBziB,EAAQtF,MAER,OAAO,EAWX,IAAM4sB,EAAwB,WAC1BpB,EAAyB,IAAIqB,SAAQ,SAACC,GAClCvB,EAAyBuB,CAC7B,GACJ,EAEAF,IACA,IAAMtH,EAAoChgB,EAApCggB,UAASwJ,EAA2BxpB,EAAzBkgB,SAAAA,OAAQ,IAAAsJ,EAAG,IAAGA,EAAEpS,EAASpX,EAAToX,KAIjC,GAAIiS,GAA8BC,EAAWtpB,GAAU,CAanD,IAZA,IAAMypB,EAAkBzD,IAAY/vB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B+J,GAAO,IACV6mB,OAAQ,EACRN,MAAO,KAEPzmB,EAAQ,CAAEygB,MAAM,EAAOhyB,MAAOyxB,EAAU,IACtC0J,EAAwB,GAK1BtP,EAAI,GACAta,EAAMygB,MAAQnG,EAAIgH,IACtBthB,EAAQ2pB,EAAgBP,OAAO9O,GAC/BsP,EAAsBp6B,KAAKwQ,EAAMvR,OACjC6rB,GAAKgP,GAETpJ,EAAY0J,EACZxJ,EAAW9F,EAAIgP,GACfhS,EAAO,QACX,CACA,IAAMnjB,EClFV,SAAsBgS,EAASqjB,EAAWtJ,GAAwF,IAAAtqB,EAAA/F,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAAC22B,EAAA5wB,EAAzE6wB,MAAAA,OAAK,IAAAD,EAAG,EAACA,EAAEpG,EAAQxqB,EAARwqB,SAAQ0G,EAAAlxB,EAAEmxB,OAAAA,OAAM,IAAAD,EAAG,EAACA,EAAAI,EAAAtxB,EAAEuxB,WAAAA,OAAU,IAAAD,EAAG,OAAMA,EAAE5P,EAAI1hB,EAAJ0hB,KAAMgJ,EAAK1qB,EAAL0qB,MACzGuJ,GAAev7B,EAAAA,GAAAA,GAAA,GAAMk7B,EAAYtJ,GAGvC,OAFII,IACAuJ,EAAgBtmB,OAAS+c,GACtBna,EAAQlT,QAAQ42B,EAAiB,CACpCpD,MAAAA,EACArG,SAAAA,EACArI,OAAQD,GAAwBR,GAChCwS,KAAM,OACNC,WAAYhD,EAAS,EACrBiD,UAA0B,YAAf7C,EAA2B,YAAc,UAE5D,CDsEsB8C,CAAax7B,EAAMy7B,MAAMh1B,QAASs0B,EAAWtJ,GAAS/pB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACjE+J,GAAO,IACVkgB,SAAAA,EASA9I,KAAMA,KAoBV,OAVAnjB,EAAUg2B,SAAW,WACjB17B,EAAM0K,IE1Gd,SAA0B+mB,EAAStqB,GAAmC,IAA/BmxB,EAAMnxB,EAANmxB,OAAMG,EAAAtxB,EAAEuxB,WAI3C,OAAOjH,EAHO6G,GAAyB,eADc,IAAAG,EAAG,OAAMA,IACbH,EAAS,IAAM,EAC1D,EACA7G,EAAUpwB,OAAS,EAE7B,CFqGkBs6B,CAAiBlK,EAAWhgB,IACtCkP,GAAK7X,QAAO,kBAAMpD,EAAU2a,QAAQ,IACpCwY,GAAcA,IACdnB,IACAqB,GACJ,EAIO,CACHwB,KAAI,SAACtB,EAASuB,GACV,OAAO7C,EAAuB4C,KAAKtB,EAASuB,EAChD,EACIX,WACA,OAAOzR,GAAsB1iB,EAAUk2B,aAAe,EAC1D,EACI/B,SAAKY,GACL/0B,EAAUk2B,YAAc1T,GAAsBuS,EAClD,EACAH,KAAM,kBAAM50B,EAAU40B,MAAM,EAC5BI,MAAO,kBAAMh1B,EAAUg1B,OAAO,EAC9BvD,KAAM,WACF,GAA4B,SAAxBzxB,EAAU4zB,UAAd,CAUA,IAAQsC,EAAgBl2B,EAAhBk2B,YACR,GAAIA,EAAa,CACb,IAAMV,EAAkBzD,IAAY/vB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC/B+J,GAAO,IACVqmB,UAAU,KAEd93B,EAAM67B,gBAAgBX,EAAgBP,OAAOiB,EAAcf,IAAa76B,MAAOk7B,EAAgBP,OAAOiB,GAAa57B,MAAO66B,GAC9H,CACAla,GAAK7X,QAAO,kBAAMpD,EAAU2a,QAAQ,GAjB1B,CAkBd,EAER,CGnJA,IAAMyb,GAAoB,CACtB3vB,KAAM,SACN8nB,UAAW,IACXC,QAAS,GACTO,UAAW,IAQTsH,GAAsB,CACxB5vB,KAAM,YACNwlB,SAAU,IAMR9I,GAAO,CACT1c,KAAM,YACN0c,KAAM,CAAC,IAAM,GAAK,IAAM,GACxB8I,SAAU,IAERqK,GAAuB,SAACC,EAAQ90B,GAAoB,IAAhBsqB,EAAStqB,EAATsqB,UACtC,OAAIA,EAAUpwB,OAAS,EACZ06B,GAEF7wB,EAAeT,IAAIwxB,GACjBA,EAAS5wB,WAAW,SAxBS,CACxCc,KAAM,SACN8nB,UAAW,IACXC,QAAoB,IAsBazC,EAAU,GAtBnB,EAAIjlB,KAAKwf,KAAK,KAAO,GAC7CyI,UAAW,IAsBDqH,GAEHjT,EACX,EC1BMqT,GAAe,SAACn8B,EAAKC,GAEvB,MAAY,WAARD,MAKiB,kBAAVC,IAAsB+D,MAAMC,QAAQhE,OAE1B,kBAAVA,IACP0tB,GAAQ3iB,KAAK/K,IACZA,EAAMqL,WAAW,SAK1B,ECrBM8wB,GAAc,IAAIhxB,IAAI,CAAC,aAAc,WAAY,WAAY,YACnE,SAASixB,GAAmBt4B,GACxB,IAAAu4B,EAAsBv4B,EAAEw4B,MAAM,GAAI,GAAG9uB,MAAM,KAAI+uB,GAAA/T,EAAAA,GAAAA,GAAA6T,EAAA,GAAxC33B,EAAI63B,EAAA,GAAEv8B,EAAKu8B,EAAA,GAClB,GAAa,gBAAT73B,EACA,OAAOZ,EACX,IAAAqD,EAAiBnH,EAAMqqB,MAAMpd,IAAe,GAArCR,GAAuC+b,EAAAA,GAAAA,GAAArhB,EAAA,GAAjC,GACb,IAAKsF,EACD,OAAO3I,EACX,IAAMwJ,EAAOtN,EAAMwX,QAAQ/K,EAAQ,IAC/B+vB,EAAeL,GAAY1xB,IAAI/F,GAAQ,EAAI,EAG/C,OAFI+H,IAAWzM,IACXw8B,GAAgB,KACb93B,EAAO,IAAM83B,EAAelvB,EAAO,GAC9C,CACA,IAAMmvB,GAAgB,oBAChB77B,IAAM8G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLgmB,IAAO,IACVG,kBAAmB,SAAC/pB,GAChB,IAAM44B,EAAY54B,EAAEumB,MAAMoS,IAC1B,OAAOC,EAAYA,EAAUxP,IAAIkP,IAAoB52B,KAAK,KAAO1B,CACrE,ICnBE64B,IAAiBj1B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChBsG,IAAgB,IAEnBwd,MAAAA,GACAoR,gBAAiBpR,GACjBqR,aAAcrR,GACd6P,KAAM7P,GACNsR,OAAQtR,GAERuR,YAAavR,GACbwR,eAAgBxR,GAChByR,iBAAkBzR,GAClB0R,kBAAmB1R,GACnB2R,gBAAiB3R,GACjB5qB,OAAAA,GACAw8B,aAAcx8B,KAKZy8B,GAAsB,SAACt9B,GAAG,OAAK48B,GAAkB58B,EAAI,ECvB3D,SAAS8tB,GAAkB9tB,EAAKC,GAC5B,IAAIs9B,EAAmBD,GAAoBt9B,GAI3C,OAHIu9B,IAAqB18B,KACrB08B,EAAmB5P,IAEhB4P,EAAiBzP,kBAClByP,EAAiBzP,kBAAkB7tB,QACnCiC,CACV,C,kICFA,SAASs7B,GAAOv9B,GACZ,OAAkB,IAAVA,GACc,kBAAVA,GACkB,IAAtB2M,WAAW3M,KACa,IAAxBA,EAAM8K,QAAQ,IAC1B,CACA,SAAS0yB,GAAYC,GACjB,MAAoC,kBAAtBA,EACR,EACA5P,GAAkB,GAAI4P,EAChC,CACA,SAASC,GAAmBvjB,EAAYpa,GACpC,OAAOoa,EAAWpa,IAAQoa,EAAoB,SAAKA,CACvD,CCZA,IAAMwjB,GAAqB,SAAC5C,EAAW/6B,EAAOkB,GAA4B,IAApBiZ,EAAU/Y,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChE,OAAO,SAACy3B,GACJ,IAAM+E,EAAkBF,GAAmBvjB,EAAY4gB,IAAc,CAAC,EAMhE/C,EAAQ4F,EAAgB5F,OAAS7d,EAAW6d,OAAS,EAK3D6F,EAAsB1jB,EAAhB4f,QAAAA,OAAO,IAAA8D,EAAG,EAACA,EACjB9D,GAAoB7R,GAAsB8P,GAC1C,IAAMvG,ECtBd,SAAsBzxB,EAAO+6B,EAAW75B,EAAQiZ,GAC5C,IAAM2jB,EAAqB5B,GAAanB,EAAW75B,GAC/C2T,OAA6B5S,IAApBkY,EAAWmN,KAAqBnN,EAAWmN,KAAOtnB,EAAMuK,MAmBrE,MAlBe,SAAXsK,GAAqBipB,GAAwC,kBAAX58B,EAKlD2T,EAASgZ,GAAkBkN,EAAW75B,GAEjCq8B,GAAO1oB,IAA6B,kBAAX3T,EAC9B2T,EAAS2oB,GAAYt8B,IAEf6C,MAAMC,QAAQ9C,IACpBq8B,GAAOr8B,IACW,kBAAX2T,IACP3T,EAASs8B,GAAY3oB,IAKrB9Q,MAAMC,QAAQ9C,IAKI,OAAdA,EAAO,KACPA,EAAO,GAAK2T,GAET3T,GAGA,CAAC2T,EAAQ3T,EAExB,CDZ0B68B,CAAa/9B,EAAO+6B,EAAW75B,EAAQ08B,GAMnDI,EAAiBvM,EAAU,GAC3BwM,EAAiBxM,EAAUA,EAAUpwB,OAAS,GAC9C68B,EAAqBhC,GAAanB,EAAWiD,GAC7CF,EAAqB5B,GAAanB,EAAWkD,GACnDjW,GAAQkW,IAAuBJ,EAAoB,6BAAFz5B,OAA+B02B,EAAS,WAAA12B,OAAU25B,EAAc,UAAA35B,OAAS45B,EAAc,OAAA55B,OAAM25B,EAAc,+DAAA35B,OAA8D25B,EAAc,8BAAA35B,OAA6B45B,EAAc,+BACnR,IAAIxsB,GAAO/J,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACP+pB,UAAAA,EACA3J,SAAU9nB,EAAMuL,eACbqyB,GAAe,IAClB5F,OAAQ+B,EACRjB,SAAU,SAACh1B,GACP9D,EAAM0K,IAAI5G,GACV85B,EAAgB9E,UAAY8E,EAAgB9E,SAASh1B,EACzD,EACA+0B,WAAY,WACRA,IACA+E,EAAgB/E,YAAc+E,EAAgB/E,YAClD,IAEJ,IAAKqF,IACAJ,GACDxV,KACyB,IAAzBsV,EAAgBzxB,KAKhB,OExDZ,SAA+BhF,GAAuD,IAApDsqB,EAAStqB,EAATsqB,UAAkB0M,EAAOh3B,EAAd6wB,MAAgBc,EAAQ3xB,EAAR2xB,SAAUD,EAAU1xB,EAAV0xB,WAC7DuF,EAAW,WAGb,OAFAtF,GAAYA,EAASrH,EAAUA,EAAUpwB,OAAS,IAClDw3B,GAAcA,IACP,CACHgB,KAAM,EACNS,KAAO7X,GACPiY,MAAQjY,GACR0U,KAAO1U,GACP8X,KAAM,SAACtB,GAEH,OADAA,IACOD,QAAQC,SACnB,EAER,EACA,OAAOkF,EACD1G,GAAa,CACXhG,UAAW,CAAC,EAAG,GACfE,SAAUwM,EACVtF,WAAYuF,IAEdA,GACV,CFkCmBC,CAAuB5sB,GA0BlC,GD9ER,SAA4BtK,GAAOA,EAAJm3B,KAAmBn3B,EAAb6wB,MAA4B7wB,EAAbo3B,cAA8Bp3B,EAAfq3B,gBAAiCr3B,EAAhBs3B,iBAAwBt3B,EAANmxB,OAAkBnxB,EAAVuxB,WAAuBvxB,EAAXqxB,YAAiBrxB,EAAJmgB,KAAangB,EAAP4yB,QAA0B,IAAd5f,EAAU5F,GAAApN,EAAAwO,IAC/J,QAAS1V,OAAOQ,KAAK0Z,GAAY9Y,MACrC,CCwDaq9B,CAAoBd,KACrBnsB,GAAO/J,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACA+J,GACAuqB,GAAqBjB,EAAWtpB,KAQvCA,EAAQkgB,WACRlgB,EAAQkgB,SAAWzJ,GAAsBzW,EAAQkgB,WAEjDlgB,EAAQ+mB,cACR/mB,EAAQ+mB,YAActQ,GAAsBzW,EAAQ+mB,cAKpDx4B,EAAMy7B,OACNz7B,EAAMy7B,MAAMh1B,mBAAmBk4B,cAC9B3+B,EAAMy7B,MAAMha,WAAWqX,SAAU,CAClC,IAAM8F,EAAuB5D,GAA2Bh7B,EAAO+6B,EAAWtpB,GAC1E,GAAImtB,EACA,OAAOA,CACf,CAIA,OAAOnH,GAAahmB,EACxB,CACJ,EG/FA,SAASotB,GAAwB7+B,GAC7B,OAAO4E,QAAQ0G,EAActL,IAAUA,EAAMogB,IACjD,CCDA,IAAM0e,GAAoB,SAACh7B,GAAC,MAAK,iBAAiBiH,KAAKjH,EAAE,ECAnDi7B,GAAoB,SAACj7B,GAAC,MAAK,aAAaiH,KAAKjH,EAAE,ECHrD,SAASk7B,GAAc7X,EAAK8X,IACG,IAAvB9X,EAAIrc,QAAQm0B,IACZ9X,EAAIpmB,KAAKk+B,EACjB,CACA,SAASC,GAAW/X,EAAK8X,GACrB,IAAM3e,EAAQ6G,EAAIrc,QAAQm0B,GACtB3e,GAAS,GACT6G,EAAI5G,OAAOD,EAAO,EAC1B,CCRwD,IAElD6e,GAAmB,WACrB,SAAAA,IAAcxkB,GAAA,KAAAwkB,GACVxiB,KAAKyiB,cAAgB,EACzB,CA+BC,OA/BApkB,GAAAmkB,EAAA,EAAAp/B,IAAA,MAAAC,MACD,SAAI8c,GAAS,IAAAkF,EAAA,KAET,OADAgd,GAAcriB,KAAKyiB,cAAetiB,GAC3B,kBAAMoiB,GAAWld,EAAKod,cAAetiB,EAAQ,CACxD,GAAC,CAAA/c,IAAA,SAAAC,MACD,SAAO6d,EAAGC,EAAG2K,GACT,IAAM4W,EAAmB1iB,KAAKyiB,cAAc/9B,OAC5C,GAAKg+B,EAEL,GAAyB,IAArBA,EAIA1iB,KAAKyiB,cAAc,GAAGvhB,EAAGC,EAAG2K,QAG5B,IAAK,IAAItnB,EAAI,EAAGA,EAAIk+B,EAAkBl+B,IAAK,CAKvC,IAAM2b,EAAUH,KAAKyiB,cAAcj+B,GACnC2b,GAAWA,EAAQe,EAAGC,EAAG2K,EAC7B,CAER,GAAC,CAAA1oB,IAAA,UAAAC,MACD,WACI,OAAO2c,KAAKyiB,cAAc/9B,MAC9B,GAAC,CAAAtB,IAAA,QAAAC,MACD,WACI2c,KAAKyiB,cAAc/9B,OAAS,CAChC,KAAC89B,CAAA,CAlCoB,GCYnBG,GAAW,WASb,SAAAA,EAAY/4B,GAAoB,IAjBnBvG,EAiBmBgiB,EAAA,KAAdvQ,EAAOrQ,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAACuZ,GAAA,KAAA2kB,GAK1B3iB,KAAK4iB,QAAU,SAMf5iB,KAAK6iB,UAAY,EAMjB7iB,KAAK8iB,YAAc,EAQnB9iB,KAAK+iB,kBAAmB,EAIxB/iB,KAAKgjB,OAAS,CAAC,EACfhjB,KAAKijB,gBAAkB,SAAC97B,GAAqB,IAAlBiF,IAAM3H,UAAAC,OAAA,QAAAY,IAAAb,UAAA,KAAAA,UAAA,GAC7B4gB,EAAK0F,KAAO1F,EAAKvb,QACjBub,EAAKvb,QAAU3C,EAEf,IAAQmb,EAAqBD,GAAAA,MAAdE,EAAcF,GAAAA,UACzBgD,EAAKyd,cAAgBvgB,IACrB8C,EAAKwd,UAAYvgB,EACjB+C,EAAKyd,YAAcvgB,EACnByB,GAAKkf,WAAW7d,EAAK8d,wBAGrB9d,EAAK0F,OAAS1F,EAAKvb,SAAWub,EAAK2d,OAAOI,QAC1C/d,EAAK2d,OAAOI,OAAOC,OAAOhe,EAAKvb,SAG/Bub,EAAK2d,OAAOM,gBACZje,EAAK2d,OAAOM,eAAeD,OAAOhe,EAAKzW,eAGvCxC,GAAUiZ,EAAK2d,OAAOO,eACtBle,EAAK2d,OAAOO,cAAcF,OAAOhe,EAAKvb,QAE9C,EASAkW,KAAKmjB,sBAAwB,kBAAMnf,GAAKkf,WAAW7d,EAAKme,cAAc,EAUtExjB,KAAKwjB,cAAgB,SAAAh5B,GAAYA,EAAT+X,YACF8C,EAAKyd,cACnBzd,EAAK0F,KAAO1F,EAAKvb,QACbub,EAAK2d,OAAOM,gBACZje,EAAK2d,OAAOM,eAAeD,OAAOhe,EAAKzW,eAGnD,EACAoR,KAAKyjB,aAAc,EACnBzjB,KAAK+K,KAAO/K,KAAKlW,QAAUF,EAC3BoW,KAAK+iB,kBAlGI1/B,EAkGuB2c,KAAKlW,SAjGjCmnB,MAAMjhB,WAAW3M,KAkGrB2c,KAAK8e,MAAQhqB,EAAQgqB,KACzB,CA2NC,OA1NDzgB,GAAAskB,EAAA,EAAAv/B,IAAA,WAAAC,MAwCA,SAASqgC,GAIL,OAAO1jB,KAAK2jB,GAAG,SAAUD,EAC7B,GAAC,CAAAtgC,IAAA,KAAAC,MACD,SAAG6c,EAAWoD,GAAU,IAAAkC,EAAA,KACfxF,KAAKgjB,OAAO9iB,KACbF,KAAKgjB,OAAO9iB,GAAa,IAAIsiB,IAEjC,IAAMoB,EAAc5jB,KAAKgjB,OAAO9iB,GAAWuD,IAAIH,GAC/C,MAAkB,WAAdpD,EACO,WACH0jB,IAKA5f,GAAK6f,MAAK,WACDre,EAAKwd,OAAOI,OAAOU,WACpBte,EAAKgV,MAEb,GACJ,EAEGoJ,CACX,GAAC,CAAAxgC,IAAA,iBAAAC,MACD,WACI,IAAK,IAAM0gC,KAAiB/jB,KAAKgjB,OAC7BhjB,KAAKgjB,OAAOe,GAAeC,OAEnC,GACA,CAAA5gC,IAAA,SAAAC,MAKA,SAAO4gC,EAAeC,GAClBlkB,KAAKikB,cAAgBA,EACrBjkB,KAAKkkB,kBAAoBA,CAC7B,GACA,CAAA9gC,IAAA,MAAAC,MAeA,SAAI8D,GAAkB,IAAfiF,IAAM3H,UAAAC,OAAA,QAAAY,IAAAb,UAAA,KAAAA,UAAA,GACJ2H,GAAW4T,KAAKikB,cAIjBjkB,KAAKikB,cAAc98B,EAAG6Y,KAAKijB,iBAH3BjjB,KAAKijB,gBAAgB97B,EAAGiF,EAKhC,GAAC,CAAAhJ,IAAA,kBAAAC,MACD,SAAgB0nB,EAAMjhB,EAASwY,GAC3BtC,KAAKjS,IAAIjE,GACTkW,KAAK+K,KAAOA,EACZ/K,KAAK6iB,UAAYvgB,CACrB,GACA,CAAAlf,IAAA,OAAAC,MAIA,SAAK8D,GACD6Y,KAAKijB,gBAAgB97B,GACrB6Y,KAAK+K,KAAO5jB,EACZ6Y,KAAKwa,OACDxa,KAAKkkB,mBACLlkB,KAAKkkB,mBACb,GACA,CAAA9gC,IAAA,MAAAC,MAOA,WACI,OAAO2c,KAAKlW,OAChB,GACA,CAAA1G,IAAA,cAAAC,MAGA,WACI,OAAO2c,KAAK+K,IAChB,GACA,CAAA3nB,IAAA,cAAAC,MAOA,WAEI,OAAO2c,KAAK+iB,iBAEJrN,GAAkB1lB,WAAWgQ,KAAKlW,SAC9BkG,WAAWgQ,KAAK+K,MAAO/K,KAAK6iB,WAClC,CACV,GACA,CAAAz/B,IAAA,QAAAC,MAYA,SAAM8gC,GAAgB,IAAAC,EAAA,KAElB,OADApkB,KAAKwa,OACE,IAAI6B,SAAQ,SAACC,GAChB8H,EAAKX,aAAc,EACnBW,EAAKr7B,UAAYo7B,EAAe7H,GAC5B8H,EAAKpB,OAAOqB,gBACZD,EAAKpB,OAAOqB,eAAehB,QAEnC,IAAGzF,MAAK,WACAwG,EAAKpB,OAAOsB,mBACZF,EAAKpB,OAAOsB,kBAAkBjB,SAElCe,EAAKG,gBACT,GACJ,GACA,CAAAnhC,IAAA,OAAAC,MAKA,WACQ2c,KAAKjX,YACLiX,KAAKjX,UAAUyxB,OACXxa,KAAKgjB,OAAOwB,iBACZxkB,KAAKgjB,OAAOwB,gBAAgBnB,UAGpCrjB,KAAKukB,gBACT,GACA,CAAAnhC,IAAA,cAAAC,MAKA,WACI,QAAS2c,KAAKjX,SAClB,GAAC,CAAA3F,IAAA,iBAAAC,MACD,kBACW2c,KAAKjX,SAChB,GACA,CAAA3F,IAAA,UAAAC,MASA,WACI2c,KAAKykB,iBACLzkB,KAAKwa,OACDxa,KAAKkkB,mBACLlkB,KAAKkkB,mBAEb,KAACvB,CAAA,CAvTY,GAyTjB,SAAS+B,GAAY96B,EAAMkL,GACvB,OAAO,IAAI6tB,GAAY/4B,EAAMkL,EACjC,CCtUA,IAAM6vB,GAAgB,SAACx9B,GAAC,OAAK,SAACqI,GAAI,OAAKA,EAAKpB,KAAKjH,EAAE,GCK7Cy9B,GAAsB,CAAC90B,EAAQkB,GAAID,GAASD,GAASI,GAAID,GCLlD,CACT7C,KAAM,SAACjH,GAAC,MAAW,SAANA,CAAY,EACzB4I,MAAO,SAAC5I,GAAC,OAAKA,CAAC,IDOb09B,GAAyB,SAAC19B,GAAC,OAAKy9B,GAAoBpV,KAAKmV,GAAcx9B,GAAG,EEJ1E29B,GAAa,GAAHp9B,OAAA4oB,GAAOsU,IAAmB,CAAE/V,GAAOkC,KAI7CgU,GAAgB,SAAC59B,GAAC,OAAK29B,GAAWtV,KAAKmV,GAAcx9B,GAAG,E,kCCC9D,SAAS69B,GAAet5B,EAAetI,EAAKC,GACpCqI,EAAcu5B,SAAS7hC,GACvBsI,EAAcw5B,SAAS9hC,GAAK2K,IAAI1K,GAGhCqI,EAAcy5B,SAAS/hC,EAAKshC,GAAYrhC,GAEhD,CACA,SAAS+hC,GAAU15B,EAAeqQ,GAC9B,IAAMuB,EAAW2N,GAAevf,EAAeqQ,GAC/CvR,EAAyD8S,EAAW5R,EAAc25B,qBAAqB/nB,GAAU,GAAS,CAAC,EAACgoB,EAAA96B,EAAtH+S,cAAAA,OAAa,IAAA+nB,EAAG,CAAC,EAACA,EAAsB/gC,GAAtBiG,EAAEgT,WAA0B5F,GAAApN,EAAAwO,KAEpD,IAAK,IAAM5V,KADXmB,GAAMwG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQxG,GAAWgZ,GACC,CAEtBynB,GAAet5B,EAAetI,EADhBkZ,GAA6B/X,EAAOnB,IAEtD,CACJ,CAuEA,SAASmiC,GAAwBniC,EAAKoa,GAClC,GAAKA,EAGL,OADwBA,EAAWpa,IAAQoa,EAAoB,SAAKA,GAC7CmN,IAC3B,C,sCCvFA,SAAS6a,GAAc95B,EAAeqQ,GAA0D,IAAA3O,EAAA3I,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACghC,EAAAr4B,EAA1CiuB,MAAAA,OAAK,IAAAoK,EAAG,EAACA,EAAEC,EAAkBt4B,EAAlBs4B,mBAAoBl2B,EAAIpC,EAAJoC,KAC/Em2B,EAAsFj6B,EAAc25B,qBAAqBtpB,GAAW6pB,EAAAD,EAA9HnoB,WAAAA,OAAU,IAAAooB,EAAGl6B,EAAc2zB,uBAAsBuG,EAAEroB,EAAaooB,EAAbpoB,cAAkBhZ,EAAMqT,GAAA+tB,EAAA3sB,IAC3E6sB,EAAan6B,EAAcw5B,SAAS,cACtCQ,IACAloB,EAAakoB,GACjB,IAAMI,EAAa,GACbC,EAAqBv2B,GACvB9D,EAAcc,gBACdd,EAAcc,eAAew5B,WAAWx2B,GAAM/F,EAAA,SAAArG,GAE9C,IAAMC,EAAQqI,EAAcw5B,SAAS9hC,GAC/Bqa,EAAclZ,EAAOnB,GAC3B,IAAKC,QACeiC,IAAhBmY,GACCsoB,GAnBb,SAA6Bv7B,EAAoCpH,GAAK,IAAtC6iC,EAAaz7B,EAAby7B,cAAeC,EAAc17B,EAAd07B,eACrCC,EAAcF,EAAch/B,eAAe7D,KAAgC,IAAxB8iC,EAAe9iC,GAExE,OADA8iC,EAAe9iC,IAAO,EACf+iC,CACX,CAgBgBC,CAAqBL,EAAoB3iC,GAAO,iBAGxD,IAAM69B,GAAel2B,EAAAA,EAAAA,GAAA,CAAKswB,MAAAA,EAAO+B,QAAS,GAAM5f,GAKhD,GAAIlR,OAAOC,0BAA4BlJ,EAAMogC,YAAa,CACtD,IAAM4C,EAAW36B,EAAcoZ,WAAWsG,IACtCib,IACApF,EAAgB7D,QAAU9wB,OAAOC,wBAAwB85B,EAAUjjC,EAAKC,EAAO2gB,IAEvF,CACA3gB,EAAMkE,MAAMy5B,GAAmB59B,EAAKC,EAAOoa,EAAa/R,EAAc46B,oBAAsB/3B,EAAeT,IAAI1K,GACzG,CAAEoM,MAAM,GACRyxB,IACN,IAAMl4B,EAAY1F,EAAM0F,UACpBm5B,GAAwB2D,KACxBA,EAAWpiB,IAAIrgB,GACf2F,EAAU60B,MAAK,kBAAMiI,EAAWU,OAAOnjC,EAAI,KAE/C0iC,EAAW1hC,KAAK2E,EACpB,EA7BA,IAAK,IAAM3F,KAAOmB,EAAMkF,EAAArG,GAmCxB,OALIma,GACA8e,QAAQpT,IAAI6c,GAAYlI,MAAK,WACzBrgB,GAAiB6nB,GAAU15B,EAAe6R,EAC9C,IAEGuoB,CACX,CC5DA,SAASU,GAAe96B,EAAe+6B,GAAuB,IAAd3xB,EAAOrQ,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD6Y,EAAW2N,GAAevf,EAAe+6B,EAAS3xB,EAAQtH,QACgBk5B,GAAdppB,GAAY,CAAC,GAAzEE,WAAAA,OAAU,IAAAkpB,EAAGh7B,EAAc2zB,wBAA0B,CAAC,EAACqH,EACzD5xB,EAAQ4wB,qBACRloB,EAAa1I,EAAQ4wB,oBAMzB,IAAMiB,EAAerpB,EACf,kBAAM+e,QAAQpT,IAAIuc,GAAc95B,EAAe4R,EAAUxI,GAAS,EAClE,kBAAMunB,QAAQC,SAAS,EAKvBsK,EAAqBl7B,EAAcm7B,iBAAmBn7B,EAAcm7B,gBAAgBx0B,KACpF,WAAsB,IAArBy0B,EAAYriC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EACdsiC,EAAkEvpB,EAAUwpB,EAAAD,EAApEnF,cAAAA,OAAa,IAAAoF,EAAG,EAACA,EAAEnF,EAAekF,EAAflF,gBAAiBC,EAAgBiF,EAAhBjF,iBAC5C,OAkBZ,SAAyBp2B,EAAe+6B,GAAgF,IAAvE7E,EAAan9B,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAGo9B,EAAep9B,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAGq9B,EAAgBr9B,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAGqQ,EAAOrQ,UAAAC,OAAA,EAAAD,UAAA,QAAAa,EAC5GwgC,EAAa,GACbmB,GAAsBv7B,EAAcm7B,gBAAgBx0B,KAAO,GAAKwvB,EAChEqF,EAA+C,IAArBpF,EAC1B,WAAM,OAAJr9B,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,GAAUo9B,CAAe,EAC9B,WAAM,OAAKoF,GAATxiC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,GAA+Bo9B,CAAe,EAUzD,OATAz6B,MAAMujB,KAAKjf,EAAcm7B,iBACpBM,KAAKC,IACLxiC,SAAQ,SAACghB,EAAOphB,GACjBohB,EAAMyd,OAAO,iBAAkBoD,GAC/BX,EAAW1hC,KAAKoiC,GAAe5gB,EAAO6gB,GAAO17B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtC+J,GAAO,IACVumB,MAAOuG,EAAgBsF,EAAwB1iC,MAChDo5B,MAAK,kBAAMhY,EAAMyd,OAAO,oBAAqBoD,EAAQ,IAC5D,IACOpK,QAAQpT,IAAI6c,EACvB,CAlCmBuB,CAAgB37B,EAAe+6B,EAAS7E,EAAgBkF,EAAcjF,EAAiBC,EAAkBhtB,EACpH,EACE,kBAAMunB,QAAQC,SAAS,EAKrBqF,EAASnkB,EAATmkB,KACR,GAAIA,EAAM,CACN,IAAAv0B,EAA+B,mBAATu0B,EAChB,CAACgF,EAAcC,GACf,CAACA,EAAoBD,GAAaW,GAAAzb,EAAAA,GAAAA,GAAAze,EAAA,GAFjCm6B,EAAKD,EAAA,GAAEE,EAAIF,EAAA,GAGlB,OAAOC,IAAQ3J,MAAK,kBAAM4J,GAAM,GACpC,CAEI,OAAOnL,QAAQpT,IAAI,CAAC0d,IAAgBC,EAAmB9xB,EAAQumB,QAEvE,CAkBA,SAAS+L,GAAgBlmB,EAAGC,GACxB,OAAOD,EAAEumB,iBAAiBtmB,EAC9B,C,sCCpDMumB,GAAuBpX,GAAI9oB,GAAsBmrB,UACjDgV,GAAoBngC,EAAqB9C,OAC/C,SAASkjC,GAAYl8B,GACjB,OAAO,SAACo6B,GAAU,OAAKzJ,QAAQpT,IAAI6c,EAAWvV,KAAI,SAAA/lB,GAAA,IAAGzB,EAASyB,EAATzB,UAAW+L,EAAOtK,EAAPsK,QAAO,OCP3E,SAA8BpJ,EAAeqQ,GAA0B,IAE/DhT,EAFiD+L,EAAOrQ,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGhE,GAFAiH,EAAc23B,OAAO,iBAAkBtnB,GAEnC3U,MAAMC,QAAQ0U,GAAa,CAC3B,IAAM+pB,EAAa/pB,EAAWwU,KAAI,SAACkW,GAAO,OAAKD,GAAe96B,EAAe+6B,EAAS3xB,EAAQ,IAC9F/L,EAAYszB,QAAQpT,IAAI6c,EAC5B,MACK,GAA0B,kBAAf/pB,EACZhT,EAAYy9B,GAAe96B,EAAeqQ,EAAYjH,OAErD,CACD,IAAM+yB,EAA2C,oBAAf9rB,EAC5BkP,GAAevf,EAAeqQ,EAAYjH,EAAQtH,QAClDuO,EACNhT,EAAYszB,QAAQpT,IAAIuc,GAAc95B,EAAem8B,EAAoB/yB,GAC7E,CACA,OAAO/L,EAAU60B,MAAK,kBAAMlyB,EAAc23B,OAAO,oBAAqBtnB,EAAW,GACrF,CDVkF+rB,CAAqBp8B,EAAe3C,EAAW+L,EAAQ,IAAE,CAC3I,CACA,SAASizB,GAAqBr8B,GAC1B,IAAI7D,EAAU+/B,GAAYl8B,GACpBkJ,EAoSC,CACH/M,QAASmgC,IAAgB,GACzBC,YAAaD,KACbjjB,WAAYijB,KACZ3wB,SAAU2wB,KACVE,UAAWF,KACXG,WAAYH,KACZh/B,KAAMg/B,MA1SNI,GAAkB,EAKhBC,EAA0B,SAACxlB,EAAK9G,GAClC,IAAMuB,EAAW2N,GAAevf,EAAeqQ,GAC/C,GAAIuB,EAAU,CACuCA,EAAzCE,WAAR,IAAoBD,EAA6BD,EAA7BC,cAAkBhZ,EAAMqT,GAAK0F,EAAQtE,IACzD6J,GAAG9X,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ8X,GAAQte,GAAWgZ,EAClC,CACA,OAAOsF,CACX,EAkBA,SAASpW,EAAeqI,EAASwzB,GA8B7B,IA7BA,IAAM1gC,EAAQ8D,EAAcoZ,WACtBzc,EAAUqD,EAAc68B,mBAAkB,IAAS,CAAC,EAKpDzC,EAAa,GAKb0C,EAAc,IAAIh6B,IAMpBi6B,EAAkB,CAAC,EAKnBC,EAAsB1L,IAC1BvzB,EAAA,WAOI,IAAM+F,EAAOk4B,GAAqBljC,GAC5BmkC,EAAY/zB,EAAMpF,GAClB5G,OAAuBtD,IAAhBsC,EAAM4H,GAAsB5H,EAAM4H,GAAQnH,EAAQmH,GACzDo5B,EAAgB1hC,EAAe0B,GAK/BigC,EAAcr5B,IAAS84B,EAAoBK,EAAUhkB,SAAW,MAClD,IAAhBkkB,IACAH,EAAsBlkC,GAO1B,IAAIskC,EAAclgC,IAASP,EAAQmH,IAAS5G,IAAShB,EAAM4H,IAASo5B,EAepE,GAXIE,GACAV,GACA18B,EAAcq9B,yBACdD,GAAc,GAMlBH,EAAU1C,eAAal7B,EAAAA,EAAAA,GAAA,GAAQ09B,IAI7BE,EAAUhkB,UAA4B,OAAhBkkB,IAElBjgC,IAAS+/B,EAAUK,UAErB1hC,EAAoBsB,IACJ,mBAATA,EAAoB,iBAQ/B,IAAMqgC,EAqKlB,SAAgCle,EAAMD,GAClC,GAAoB,kBAATA,EACP,OAAOA,IAASC,EAEf,GAAI3jB,MAAMC,QAAQyjB,GACnB,OAAQD,GAAeC,EAAMC,GAEjC,OAAO,CACX,CA7KqCme,CAAuBP,EAAUK,SAAUpgC,GAChEugC,EAAoBF,GAEnBz5B,IAAS84B,GACNK,EAAUhkB,WACTmkB,GACDF,GAEHpkC,EAAIkkC,GAAuBE,EAK1BQ,EAAiBhiC,MAAMC,QAAQuB,GAAQA,EAAO,CAACA,GAKjDygC,EAAiBD,EAAe5nB,OAAO6mB,EAAyB,CAAC,IACjD,IAAhBQ,IACAQ,EAAiB,CAAC,GAUtB,IAAAC,EAAoCX,EAA5BY,mBAAAA,OAAkB,IAAAD,EAAG,CAAC,EAACA,EACzBE,GAAOz+B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACNw+B,GACAF,GAEDI,EAAgB,SAACrmC,GACnB+lC,GAAoB,EACpBX,EAAY3kB,OAAOzgB,GACnBulC,EAAUzC,eAAe9iC,IAAO,CACpC,EACA,IAAK,IAAMA,KAAOomC,EAAS,CACvB,IAAM1e,EAAOue,EAAejmC,GACtB2nB,EAAOwe,EAAmBnmC,GAE5BqlC,EAAgBxhC,eAAe7D,KAK/B0nB,IAASC,EAKL7O,GAAkB4O,IAAS5O,GAAkB6O,IACxCF,GAAeC,EAAMC,IAASke,EAC/BQ,EAAcrmC,GAOdulC,EAAU1C,cAAc7iC,IAAO,OAGrBkC,IAATwlB,EAEL2e,EAAcrmC,GAIdolC,EAAY/kB,IAAIrgB,QAGNkC,IAATwlB,GAAsB0d,EAAY16B,IAAI1K,GAK3CqmC,EAAcrmC,GAOdulC,EAAU1C,cAAc7iC,IAAO,EAEvC,CAKAulC,EAAUK,SAAWpgC,EACrB+/B,EAAUY,mBAAqBF,EAI3BV,EAAUhkB,WACV8jB,GAAe19B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAQ09B,GAAoBY,IAE3CjB,GAAmB18B,EAAcO,wBACjCk9B,GAAoB,GAOpBA,IAAsBL,GACtBhD,EAAW1hC,KAAIC,MAAfyhC,EAAUxV,GAAS8Y,EAAe7Y,KAAI,SAACxnB,GAAS,MAAM,CAClDA,UAAWA,EACX+L,SAAO/J,EAAAA,EAAAA,GAAA,CAAIyE,KAAAA,GAASsF,GACvB,KAET,EApKStQ,EAAI,EAAGA,EAAImjC,GAAmBnjC,IAAGiF,IA0K1C,GAAI++B,EAAYn2B,KAAM,CAClB,IAAMq3B,EAAoB,CAAC,EAC3BlB,EAAY5jC,SAAQ,SAACxB,GACjB,IAAMumC,EAAiBj+B,EAAck+B,cAAcxmC,QAC5BkC,IAAnBqkC,IACAD,EAAkBtmC,GAAOumC,EAEjC,IACA7D,EAAW1hC,KAAK,CAAE2E,UAAW2gC,GACjC,CACA,IAAIG,EAAgB5hC,QAAQ69B,EAAWphC,QAOvC,OANI0jC,IACkB,IAAlBxgC,EAAMU,UACLoD,EAAcq9B,yBACfc,GAAgB,GAEpBzB,GAAkB,EACXyB,EAAgBhiC,EAAQi+B,GAAczJ,QAAQC,SACzD,CAkBA,MAAO,CACH7vB,eAAAA,EACAuY,UAhBJ,SAAmBxV,EAAMmV,EAAU7P,GAC/B,IAAI6C,EAEJ,GAAI/C,EAAMpF,GAAMmV,WAAaA,EACzB,OAAO0X,QAAQC,UAEsB,QAAxC3kB,EAAKjM,EAAcm7B,uBAAoC,IAAPlvB,GAAyBA,EAAG/S,SAAQ,SAACghB,GAAY,IAAIjO,EAAI,OAAuC,QAA/BA,EAAKiO,EAAMpZ,sBAAmC,IAAPmL,OAAgB,EAASA,EAAGqN,UAAUxV,EAAMmV,EAAW,IAChN/P,EAAMpF,GAAMmV,SAAWA,EACvB,IAAMmhB,EAAar5B,EAAeqI,EAAStF,GAC3C,IAAK,IAAMpM,KAAOwR,EACdA,EAAMxR,GAAK6iC,cAAgB,CAAC,EAEhC,OAAOH,CACX,EAIIgE,mBA5PJ,SAA4BC,GACxBliC,EAAUkiC,EAAar+B,EAC3B,EA2PIs6B,SAAU,kBAAMpxB,CAAK,EAE7B,CAUA,SAASozB,KACL,MAAO,CACHrjB,SAFyBlgB,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GAGzBwhC,cAAe,CAAC,EAChBC,eAAgB,CAAC,EACjBqD,mBAAoB,CAAC,EAE7B,CE/SyC,IAEnCS,GAAgB,SAAA9kB,GAAArG,GAAAmrB,EAAA9kB,GAAA,IAAAC,EAAA7F,GAAA0qB,GAMlB,SAAAA,EAAY7nB,GAAM,IAAAkD,EAE4D,OAF5DrH,GAAA,KAAAgsB,GACd3kB,EAAAF,EAAA3f,KAAA,KAAM2c,GACNA,EAAK3V,iBAAmB2V,EAAK3V,eAAiBu7B,GAAqB5lB,IAAOkD,CAC9E,CAqBa,OArBZhH,GAAA2rB,EAAA,EAAA5mC,IAAA,sCAAAC,MACD,WACI,IAAQwE,EAAYmY,KAAKmC,KAAK2C,WAAtBjd,QACRmY,KAAK9S,UACD5F,EAAoBO,KACpBmY,KAAK9S,QAAUrF,EAAQoiC,UAAUjqB,KAAKmC,MAE9C,GACA,CAAA/e,IAAA,QAAAC,MAGA,WACI2c,KAAKkqB,qCACT,GAAC,CAAA9mC,IAAA,SAAAC,MACD,WACwB2c,KAAKmC,KAAK2C,WAAtBjd,WACyBmY,KAAKmC,KAAKzG,WAAa,CAAC,GAAjD7T,SAEJmY,KAAKkqB,qCAEb,GAAC,CAAA9mC,IAAA,UAAAC,MACD,WAAY,KAAC2mC,CAAA,CA9BK,CAAS9nB,ICF3BhY,GAAK,EACHigC,GAAoB,SAAAjlB,GAAArG,GAAAsrB,EAAAjlB,GAAA,IAAAC,EAAA7F,GAAA6qB,GACtB,SAAAA,IAAc,IAAA9kB,EAEK,OAFLrH,GAAA,KAAAmsB,IACV9kB,EAAAF,EAAA9gB,MAAA,KAASI,YACJyF,GAAKA,KAAKmb,CACnB,CAoBa,OApBZhH,GAAA8rB,EAAA,EAAA/mC,IAAA,SAAAC,MACD,WAAS,IAAAmiB,EAAA,KACL,GAAKxF,KAAKmC,KAAKtW,gBAAf,CAEA,IAAAu+B,EAA8CpqB,KAAKmC,KAAKtW,gBAAhDw+B,EAASD,EAATC,UAAWC,EAAcF,EAAdE,eAAgB98B,EAAM48B,EAAN58B,OAChB+8B,GAAkBvqB,KAAKmC,KAAKqoB,qBAAuB,CAAC,GAA/DH,UACR,GAAKrqB,KAAKmC,KAAK3V,gBAAkB69B,IAAcE,EAA/C,CAGA,IAAME,EAAgBzqB,KAAKmC,KAAK3V,eAAewY,UAAU,QAASqlB,EAAW,CAAE78B,OAAmB,OAAXA,QAA8B,IAAXA,EAAoBA,EAASwS,KAAKmC,KAAK2C,WAAWtX,SACxJ88B,IAAmBD,GACnBI,EAAc7M,MAAK,kBAAM0M,EAAe9kB,EAAKtb,GAAG,GAHpD,CALU,CAUd,GAAC,CAAA9G,IAAA,QAAAC,MACD,WACI,IAAQqnC,GAAa1qB,KAAKmC,KAAKtW,iBAAmB,CAAC,GAA3C6+B,SACJA,IACA1qB,KAAK9S,QAAUw9B,EAAS1qB,KAAK9V,IAErC,GAAC,CAAA9G,IAAA,UAAAC,MACD,WAAY,KAAC8mC,CAAA,CAxBS,CAASjoB,ICA7B4jB,GAAa,CACf/8B,UAAW,CACPmZ,QAAS8nB,IAEbhhC,KAAM,CACFkZ,QAASioB,KCRXr2B,GAAW,SAACoN,EAAGC,GAAC,OAAKtR,KAAKqkB,IAAIhT,EAAIC,EAAE,ECS1C,IAGMwpB,GAAU,WACZ,SAAAA,EAAYnqB,EAAOoqB,GAAuC,IAAAvlB,EAAA,KAA3Bnf,GAA2BzB,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAAxByB,mBA0D3B,GA1D6C8X,GAAA,KAAA2sB,GAI7C3qB,KAAKwG,WAAa,KAIlBxG,KAAK6qB,cAAgB,KAIrB7qB,KAAK8qB,kBAAoB,KAIzB9qB,KAAK4qB,SAAW,CAAC,EACjB5qB,KAAK+qB,YAAc,WACf,GAAM1lB,EAAKwlB,eAAiBxlB,EAAKylB,kBAAjC,CAEA,IAAMjmB,EAAOmmB,GAAW3lB,EAAKylB,kBAAmBzlB,EAAK4lB,SAC/CC,EAAmC,OAApB7lB,EAAKmB,WAIpB2kB,EDrClB,SAAoBjqB,EAAGC,GAEnB,IAAMiqB,EAASt3B,GAASoN,EAAEpS,EAAGqS,EAAErS,GACzBu8B,EAASv3B,GAASoN,EAAEnS,EAAGoS,EAAEpS,GAC/B,OAAOc,KAAKwf,KAAKxf,KAAA6kB,IAAA0W,EAAU,GAACv7B,KAAA6kB,IAAG2W,EAAU,GAC7C,CCgC4CC,CAAWzmB,EAAK1M,OAAQ,CAAErJ,EAAG,EAAGC,EAAG,KAAQ,EAC3E,GAAKm8B,GAAiBC,EAAtB,CAEA,IAAQrqB,EAAU+D,EAAV/D,MACAyB,EAAcF,GAAAA,UACtBgD,EAAK4lB,QAAQ7mC,MAAI2G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI+V,GAAK,IAAEyB,UAAAA,KAC9B,IAAAgpB,EAA4BlmB,EAAKulB,SAAzBY,EAAOD,EAAPC,QAASC,EAAMF,EAANE,OACZP,IACDM,GAAWA,EAAQnmB,EAAKwlB,cAAehmB,GACvCQ,EAAKmB,WAAanB,EAAKwlB,eAE3BY,GAAUA,EAAOpmB,EAAKwlB,cAAehmB,EAT3B,CARA,CAkBd,EACA7E,KAAK0rB,kBAAoB,SAAClrB,EAAOqE,GAC7BQ,EAAKwlB,cAAgBrqB,EACrB6E,EAAKylB,kBAAoBa,GAAe9mB,EAAMQ,EAAKnf,oBAEnD8d,GAAK7X,OAAOkZ,EAAK0lB,aAAa,EAClC,EACA/qB,KAAK4rB,gBAAkB,SAACprB,EAAOqE,GAE3B,GADAQ,EAAKwmB,MACCxmB,EAAKwlB,eAAiBxlB,EAAKylB,kBAAjC,CAEA,IAAAgB,EAAgCzmB,EAAKulB,SAA7BmB,EAAKD,EAALC,MAAOC,EAAYF,EAAZE,aACTC,EAAUjB,GAA0B,kBAAfxqB,EAAMhR,KAC3B6V,EAAKylB,kBACLa,GAAe9mB,EAAMQ,EAAKnf,oBAAqBmf,EAAK4lB,SACtD5lB,EAAKmB,YAAculB,GACnBA,EAAMvrB,EAAOyrB,GAEjBD,GAAgBA,EAAaxrB,EAAOyrB,EAR1B,CASd,EAEK1rB,GAAiBC,GAAtB,CAEAR,KAAK4qB,SAAWA,EAChB5qB,KAAK9Z,mBAAqBA,EAC1B,IACMgmC,EAAcP,GADP/qB,GAAiBJ,GACWR,KAAK9Z,oBACtC4a,EAAUorB,EAAVprB,MACAyB,EAAcF,GAAAA,UACtBrC,KAAKirB,QAAU,EAAAlgC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAM+V,GAAK,IAAEyB,UAAAA,KAC5B,IAAQ4pB,EAAmBvB,EAAnBuB,eACRA,GACIA,EAAe3rB,EAAOwqB,GAAWkB,EAAalsB,KAAKirB,UACvDjrB,KAAKosB,gBAAkBhrB,GAAKJ,GAAgB1U,OAAQ,cAAe0T,KAAK0rB,mBAAoB1qB,GAAgB1U,OAAQ,YAAa0T,KAAK4rB,iBAAkB5qB,GAAgB1U,OAAQ,gBAAiB0T,KAAK4rB,iBAX5L,CAYd,CAOC,OAPAvtB,GAAAssB,EAAA,EAAAvnC,IAAA,iBAAAC,MACD,SAAeunC,GACX5qB,KAAK4qB,SAAWA,CACpB,GAAC,CAAAxnC,IAAA,MAAAC,MACD,WACI2c,KAAKosB,iBAAmBpsB,KAAKosB,kBAC7BhoB,GAAWjY,OAAO6T,KAAK+qB,YAC3B,KAACJ,CAAA,CA/EW,GAiFhB,SAASgB,GAAe9mB,EAAM3e,GAC1B,OAAOA,EAAqB,CAAE4a,MAAO5a,EAAmB2e,EAAK/D,QAAW+D,CAC5E,CACA,SAASwnB,GAAcnrB,EAAGC,GACtB,MAAO,CAAErS,EAAGoS,EAAEpS,EAAIqS,EAAErS,EAAGC,EAAGmS,EAAEnS,EAAIoS,EAAEpS,EACtC,CACA,SAASi8B,GAAU59B,EAAY69B,GAAS,IAAlBnqB,EAAK1T,EAAL0T,MAClB,MAAO,CACHA,MAAAA,EACAwB,MAAO+pB,GAAcvrB,EAAOwrB,GAAgBrB,IAC5C9yB,OAAQk0B,GAAcvrB,EAAOyrB,GAAiBtB,IAC9C9f,SAAUvc,GAAYq8B,EAAS,IAEvC,CACA,SAASsB,GAAiBtB,GACtB,OAAOA,EAAQ,EACnB,CACA,SAASqB,GAAgBrB,GACrB,OAAOA,EAAQA,EAAQvmC,OAAS,EACpC,CACA,SAASkK,GAAYq8B,EAASpI,GAC1B,GAAIoI,EAAQvmC,OAAS,EACjB,MAAO,CAAEoK,EAAG,EAAGC,EAAG,GAKtB,IAHA,IAAIvK,EAAIymC,EAAQvmC,OAAS,EACrB8nC,EAAmB,KACjBC,EAAYH,GAAgBrB,GAC3BzmC,GAAK,IACRgoC,EAAmBvB,EAAQzmC,KACvBioC,EAAUlqB,UAAYiqB,EAAiBjqB,UACvCgJ,GAAsBsX,MAG1Br+B,IAEJ,IAAKgoC,EACD,MAAO,CAAE19B,EAAG,EAAGC,EAAG,GAEtB,IAAMmuB,EAAOzR,GAAsBghB,EAAUlqB,UAAYiqB,EAAiBjqB,WAC1E,GAAa,IAAT2a,EACA,MAAO,CAAEpuB,EAAG,EAAGC,EAAG,GAEtB,IAAMkN,EAAkB,CACpBnN,GAAI29B,EAAU39B,EAAI09B,EAAiB19B,GAAKouB,EACxCnuB,GAAI09B,EAAU19B,EAAIy9B,EAAiBz9B,GAAKmuB,GAQ5C,OANIjhB,EAAgBnN,IAAMkuB,MACtB/gB,EAAgBnN,EAAI,GAEpBmN,EAAgBlN,IAAMiuB,MACtB/gB,EAAgBlN,EAAI,GAEjBkN,CACX,CChJA,SAASywB,GAAWC,GAChB,OAAOA,EAAK/8B,IAAM+8B,EAAKh9B,GAC3B,CACA,SAASi9B,GAAOvpC,GAAuC,IAAhCkB,EAAME,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAGooC,EAAWpoC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,IAC7C,OAAOoL,KAAKqkB,IAAI7wB,EAAQkB,IAAWsoC,CACvC,CACA,SAASC,GAAcxqB,EAAO3d,EAAQJ,GAAsB,IAAd2T,EAAMzT,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,GACnD6d,EAAMpK,OAASA,EACfoK,EAAMyqB,YAAc3wB,GAAIzX,EAAOgL,IAAKhL,EAAOiL,IAAK0S,EAAMpK,QACtDoK,EAAMpS,MAAQw8B,GAAWnoC,GAAUmoC,GAAW/nC,IAC1CioC,GAAOtqB,EAAMpS,MAAO,EAAG,OAAW+gB,MAAM3O,EAAMpS,UAC9CoS,EAAMpS,MAAQ,GAClBoS,EAAM0qB,UACF5wB,GAAI7X,EAAOoL,IAAKpL,EAAOqL,IAAK0S,EAAMpK,QAAUoK,EAAMyqB,aAClDH,GAAOtqB,EAAM0qB,YAAc/b,MAAM3O,EAAM0qB,cACvC1qB,EAAM0qB,UAAY,EAC1B,CACA,SAASC,GAAa3qB,EAAO3d,EAAQJ,EAAQ2T,GACzC40B,GAAcxqB,EAAMxT,EAAGnK,EAAOmK,EAAGvK,EAAOuK,EAAGoJ,EAASA,EAAO9D,aAAU9O,GACrEwnC,GAAcxqB,EAAMvT,EAAGpK,EAAOoK,EAAGxK,EAAOwK,EAAGmJ,EAASA,EAAO7D,aAAU/O,EACzE,CACA,SAAS4nC,GAAiB3oC,EAAQ4oC,EAAUxhC,GACxCpH,EAAOoL,IAAMhE,EAAOgE,IAAMw9B,EAASx9B,IACnCpL,EAAOqL,IAAMrL,EAAOoL,IAAM+8B,GAAWS,EACzC,CAKA,SAASC,GAAyB7oC,EAAQgF,EAAQoC,GAC9CpH,EAAOoL,IAAMpG,EAAOoG,IAAMhE,EAAOgE,IACjCpL,EAAOqL,IAAMrL,EAAOoL,IAAM+8B,GAAWnjC,EACzC,CACA,SAAS8jC,GAAqB9oC,EAAQgF,EAAQoC,GAC1CyhC,GAAyB7oC,EAAOuK,EAAGvF,EAAOuF,EAAGnD,EAAOmD,GACpDs+B,GAAyB7oC,EAAOwK,EAAGxF,EAAOwF,EAAGpD,EAAOoD,EACxD,CCZA,SAASu+B,GAA4BX,EAAMh9B,EAAKC,GAC5C,MAAO,CACHD,SAAarK,IAARqK,EAAoBg9B,EAAKh9B,IAAMA,OAAMrK,EAC1CsK,SAAatK,IAARsK,EACC+8B,EAAK/8B,IAAMA,GAAO+8B,EAAK/8B,IAAM+8B,EAAKh9B,UAClCrK,EAEd,CAcA,SAASioC,GAA4BC,EAAYC,GAC7C,IAAI99B,EAAM89B,EAAgB99B,IAAM69B,EAAW79B,IACvCC,EAAM69B,EAAgB79B,IAAM49B,EAAW59B,IAG3C,GAAI69B,EAAgB79B,IAAM69B,EAAgB99B,IACtC69B,EAAW59B,IAAM49B,EAAW79B,IAAK,KAAA23B,EACpB,CAAC13B,EAAKD,GAAlBA,EAAG23B,EAAA,GAAE13B,EAAG03B,EAAA,EACb,CACA,MAAO,CAAE33B,IAAAA,EAAKC,IAAAA,EAClB,CAuCA,IAAM89B,GAAiB,IAgBvB,SAASC,GAAmBC,EAAaC,EAAUC,GAC/C,MAAO,CACHn+B,IAAKo+B,GAAoBH,EAAaC,GACtCj+B,IAAKm+B,GAAoBH,EAAaE,GAE9C,CACA,SAASC,GAAoBH,EAAaI,GACtC,MAA8B,kBAAhBJ,EACRA,EACAA,EAAYI,IAAU,CAChC,CC1HA,IAMMC,GAAc,WAAH,MAAU,CACvBn/B,EAP2B,CAC3Bk+B,UAAW,EACX98B,MAAO,EACPgI,OAAQ,EACR60B,YAAa,GAIbh+B,EAR2B,CAC3Bi+B,UAAW,EACX98B,MAAO,EACPgI,OAAQ,EACR60B,YAAa,GAKhB,EAEKmB,GAAY,WAAH,MAAU,CACrBp/B,EAFsB,CAAEa,IAAK,EAAGC,IAAK,GAGrCb,EAHsB,CAAEY,IAAK,EAAGC,IAAK,GAIxC,ECdD,SAASu+B,GAAS7qB,GACd,MAAO,CAACA,EAAS,KAAMA,EAAS,KACpC,CCGA,SAAS8qB,GAAuB5jC,GAAgC,IAA7B8H,EAAG9H,EAAH8H,IAC/B,MAAO,CACHxD,EAAG,CAAEa,IAF+BnF,EAAJiI,KAEhB7C,IAF2BpF,EAAL+H,OAGtCxD,EAAG,CAAEY,IAAK2C,EAAK1C,IAHoCpF,EAANgI,QAKrD,CCVA,SAAS67B,GAAgBn+B,GACrB,YAAiB5K,IAAV4K,GAAiC,IAAVA,CAClC,CACA,SAASo+B,GAAQ9jC,GAA4B,IAAzB0F,EAAK1F,EAAL0F,MAAOsD,EAAMhJ,EAANgJ,OAAQC,EAAMjJ,EAANiJ,OAC/B,OAAS46B,GAAgBn+B,KACpBm+B,GAAgB76B,KAChB66B,GAAgB56B,EACzB,CACA,SAAS0B,GAAakF,GAClB,OAAQi0B,GAASj0B,IACbk0B,GAAel0B,IACfA,EAAOrL,GACPqL,EAAOjH,QACPiH,EAAOhH,SACPgH,EAAO/G,OACf,CACA,SAASi7B,GAAel0B,GACpB,OAAOm0B,GAAcn0B,EAAOvL,IAAM0/B,GAAcn0B,EAAOtL,EAC3D,CACA,SAASy/B,GAAcnrC,GACnB,OAAOA,GAAmB,OAAVA,CACpB,CCfA,SAASorC,GAAW3tB,EAAO5Q,EAAO68B,GAG9B,OAAOA,EADQ78B,GADY4Q,EAAQisB,EAGvC,CAIA,SAAS2B,GAAgB5tB,EAAOksB,EAAW98B,EAAO68B,EAAa4B,GAI3D,YAHiBrpC,IAAbqpC,IACA7tB,EAAQ2tB,GAAW3tB,EAAO6tB,EAAU5B,IAEjC0B,GAAW3tB,EAAO5Q,EAAO68B,GAAeC,CACnD,CAIA,SAAS4B,GAAejC,GAAuD,IAAjDK,EAASvoC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAGyL,EAAKzL,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAGsoC,EAAWtoC,UAAAC,OAAA,EAAAD,UAAA,QAAAa,EAAEqpC,EAAQlqC,UAAAC,OAAA,EAAAD,UAAA,QAAAa,EACzEqnC,EAAKh9B,IAAM++B,GAAgB/B,EAAKh9B,IAAKq9B,EAAW98B,EAAO68B,EAAa4B,GACpEhC,EAAK/8B,IAAM8+B,GAAgB/B,EAAK/8B,IAAKo9B,EAAW98B,EAAO68B,EAAa4B,EACxE,CAIA,SAASE,GAAcC,EAAGtkC,GAAY,IAARsE,EAACtE,EAADsE,EAAGC,EAACvE,EAADuE,EAC7B6/B,GAAeE,EAAIhgC,EAAGA,EAAEk+B,UAAWl+B,EAAEoB,MAAOpB,EAAEi+B,aAC9C6B,GAAeE,EAAI//B,EAAGA,EAAEi+B,UAAWj+B,EAAEmB,MAAOnB,EAAEg+B,YAClD,CAuDA,SAASgC,GAAc7+B,GACnB,OAAIvK,OAAOqpC,UAAU9+B,IAEdA,EAAQ,iBAAmBA,EAAQ,cAD/BA,EACwD,CACvE,CACA,SAAS++B,GAActC,EAAM74B,GACzB64B,EAAKh9B,IAAMg9B,EAAKh9B,IAAMmE,EACtB64B,EAAK/8B,IAAM+8B,EAAK/8B,IAAMkE,CAC1B,CAMA,SAASo7B,GAAcvC,EAAMwC,EAAU/hC,GAA8B,IAAAk6B,GAAAzb,EAAAA,GAAAA,GAAAze,EAAA,GAA3BhK,EAAGkkC,EAAA,GAAE8H,EAAQ9H,EAAA,GAAE+H,EAAS/H,EAAA,GACxDgI,OAAuChqC,IAA1B6pC,EAAWE,GAA2BF,EAAWE,GAAa,GAC3EtC,EAAc3wB,GAAIuwB,EAAKh9B,IAAKg9B,EAAK/8B,IAAK0/B,GAE5CV,GAAejC,EAAMwC,EAAW/rC,GAAM+rC,EAAWC,GAAWrC,EAAaoC,EAAWj/B,MACxF,CAIA,IAAMq/B,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAI9B,SAASC,GAAaX,EAAKr/B,GACvBy/B,GAAcJ,EAAIhgC,EAAGW,EAAW8/B,IAChCL,GAAcJ,EAAI//B,EAAGU,EAAW+/B,GACpC,CCpHA,SAASE,GAAmB1iC,EAAU2+B,GAClC,OAAOyC,GHeX,SAA4BttB,EAAO6qB,GAC/B,IAAKA,EACD,OAAO7qB,EACX,IAAM6uB,EAAUhE,EAAe,CAAE78B,EAAGgS,EAAMrO,KAAM1D,EAAG+R,EAAMxO,MACnDs9B,EAAcjE,EAAe,CAAE78B,EAAGgS,EAAMvO,MAAOxD,EAAG+R,EAAMtO,SAC9D,MAAO,CACHF,IAAKq9B,EAAQ5gC,EACb0D,KAAMk9B,EAAQ7gC,EACd0D,OAAQo9B,EAAY7gC,EACpBwD,MAAOq9B,EAAY9gC,EAE3B,CG1BmC+gC,CAAmB7iC,EAAS4Q,wBAAyB+tB,GACxF,CCaA,IAAMmE,GAAsB,IAAI/nB,QAK1BgoB,GAAyB,WAC3B,SAAAA,EAAYrkC,GAAesS,GAAA,KAAA+xB,GAIvB/vB,KAAKgwB,eAAiB,KACtBhwB,KAAKiwB,YAAa,EAClBjwB,KAAKkwB,iBAAmB,KACxBlwB,KAAK+sB,YAAc,CAAEj+B,EAAG,EAAGC,EAAG,GAI9BiR,KAAKmwB,aAAc,EACnBnwB,KAAKowB,uBAAwB,EAI7BpwB,KAAKqwB,QAAUnC,KACfluB,KAAKtU,cAAgBA,CACzB,CAsYC,OAtYA2S,GAAA0xB,EAAA,EAAA3sC,IAAA,QAAAC,MACD,SAAMitC,GAA4C,IAAAjrB,EAAA,KAAFkrB,GAAE9rC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAA1B+rC,aAAAA,OAAY,IAAAD,GAAQA,EAI7B1kC,EAAoBmU,KAAKtU,cAAzBG,gBACR,IAAIA,IAAiD,IAA9BA,EAAgBw+B,UAAvC,CAwFArqB,KAAKywB,WAAa,IAAI9F,GAAW2F,EAAa,CAC1CnE,eAvFmB,SAAC3rB,GAGpB6E,EAAKqrB,gBACDF,GACAnrB,EAAKmrB,aAAa5vB,GAAiBJ,EAAO,QAAQM,MAE1D,EAiFI0qB,QAhFY,SAAChrB,EAAOqE,GAEpB,IAAA8rB,EAA+CtrB,EAAKP,WAA5C7b,EAAI0nC,EAAJ1nC,KAAM2nC,EAAeD,EAAfC,gBAAiBC,EAAWF,EAAXE,YAC/B,IAAI5nC,GAAS2nC,IACLvrB,EAAK2qB,gBACL3qB,EAAK2qB,iBACT3qB,EAAK2qB,eAAiBnuB,GAAc5Y,GAE/Boc,EAAK2qB,gBALd,CAQA3qB,EAAK4qB,YAAa,EAClB5qB,EAAK6qB,iBAAmB,KACxB7qB,EAAKyrB,qBACDzrB,EAAK3Z,cAAcuP,aACnBoK,EAAK3Z,cAAcuP,WAAW81B,oBAAqB,EACnD1rB,EAAK3Z,cAAcuP,WAAW1W,YAASe,GAK3C6oC,IAAS,SAACxB,GACN,IAAI7iC,EAAUub,EAAK2rB,mBAAmBrE,GAAM/+B,OAAS,EAIrD,GAAImD,GAAQ3C,KAAKtE,GAAU,CACvB,IAAQmR,EAAeoK,EAAK3Z,cAApBuP,WACR,GAAIA,GAAcA,EAAW1R,OAAQ,CACjC,IAAM0nC,EAAeh2B,EAAW1R,OAAO2nC,UAAUvE,GACjD,GAAIsE,EAEAnnC,EADe4iC,GAAWuE,IACNjhC,WAAWlG,GAAW,IAElD,CACJ,CACAub,EAAK0nB,YAAYJ,GAAQ7iC,CAC7B,IAEI+mC,GACA7sB,GAAK7X,QAAO,kBAAM0kC,EAAYrwB,EAAOqE,EAAK,IAE9C,IAAQrY,EAAmB6Y,EAAK3Z,cAAxBc,eACRA,GAAkBA,EAAewY,UAAU,aAAa,EAjCxD,CAkCJ,EAqCIymB,OApCW,SAACjrB,EAAOqE,GAEnB,IAAAssB,EAAyE9rB,EAAKP,WAAtE8rB,EAAeO,EAAfP,gBAAiBQ,EAAiBD,EAAjBC,kBAAmBC,EAAeF,EAAfE,gBAAiBC,EAAMH,EAANG,OAE7D,GAAKV,GAAoBvrB,EAAK2qB,eAA9B,CAEA,IAAQ73B,EAAW0M,EAAX1M,OAER,GAAIi5B,GAA+C,OAA1B/rB,EAAK6qB,iBAM1B,OALA7qB,EAAK6qB,iBA6UrB,SAA6B/3B,GAA4B,IAApBo5B,EAAa9sC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,GAC7Cm6B,EAAY,KACZ/uB,KAAKqkB,IAAI/b,EAAOpJ,GAAKwiC,EACrB3S,EAAY,IAEP/uB,KAAKqkB,IAAI/b,EAAOrJ,GAAKyiC,IAC1B3S,EAAY,KAEhB,OAAOA,CACX,CAtVwC4S,CAAoBr5B,QAEd,OAA1BkN,EAAK6qB,kBACLmB,GAAmBA,EAAgBhsB,EAAK6qB,mBAKhD7qB,EAAKosB,WAAW,IAAK5sB,EAAK/D,MAAO3I,GACjCkN,EAAKosB,WAAW,IAAK5sB,EAAK/D,MAAO3I,GAOjCkN,EAAK3Z,cAAcU,SAKnBklC,GAAUA,EAAO9wB,EAAOqE,EAzBd,CA0Bd,EAMImnB,aALiB,SAACxrB,EAAOqE,GAAI,OAAKQ,EAAKmV,KAAKha,EAAOqE,EAAK,GAMzD,CAAE3e,mBAAoB8Z,KAAKtU,cAAcgmC,yBA5FlC,CA6Fd,GAAC,CAAAtuC,IAAA,OAAAC,MACD,SAAKmd,EAAOqE,GACR,IAAMorB,EAAajwB,KAAKiwB,WAExB,GADAjwB,KAAK0D,SACAusB,EAAL,CAEA,IAAQ9kB,EAAatG,EAAbsG,SACRnL,KAAKmkB,eAAehZ,GACpB,IAAQwmB,EAAc3xB,KAAK8E,WAAnB6sB,UACJA,GACA3tB,GAAK7X,QAAO,kBAAMwlC,EAAUnxB,EAAOqE,EAAK,GALlC,CAOd,GAAC,CAAAzhB,IAAA,SAAAC,MACD,WACI2c,KAAKiwB,YAAa,EAClB,IAAA2B,EAAuC5xB,KAAKtU,cAApCuP,EAAU22B,EAAV32B,WAAYzO,EAAcolC,EAAdplC,eAChByO,IACAA,EAAW81B,oBAAqB,GAEpC/wB,KAAKywB,YAAczwB,KAAKywB,WAAW5E,MACnC7rB,KAAKywB,gBAAanrC,GACU0a,KAAK8E,WAAzB8rB,iBACgB5wB,KAAKgwB,iBACzBhwB,KAAKgwB,iBACLhwB,KAAKgwB,eAAiB,MAE1BxjC,GAAkBA,EAAewY,UAAU,aAAa,EAC5D,GAAC,CAAA5hB,IAAA,aAAAC,MACD,SAAWspC,EAAMkF,EAAQ15B,GACrB,IAAQlP,EAAS+W,KAAK8E,WAAd7b,KAER,GAAKkP,GAAW25B,GAAWnF,EAAM1jC,EAAM+W,KAAKkwB,kBAA5C,CAEA,IAAM6B,EAAY/xB,KAAKgxB,mBAAmBrE,GACtC7hB,EAAO9K,KAAK+sB,YAAYJ,GAAQx0B,EAAOw0B,GAEvC3sB,KAAKmwB,aAAenwB,KAAKmwB,YAAYxD,KACrC7hB,EPzKZ,SAA0BhK,EAAKtW,EAAgB6lC,GAAS,IAArB1gC,EAAGnF,EAAHmF,IAAKC,EAAGpF,EAAHoF,IASpC,YARYtK,IAARqK,GAAqBmR,EAAQnR,EAE7BmR,EAAQuvB,EAAUj0B,GAAIzM,EAAKmR,EAAOuvB,EAAQ1gC,KAAOE,KAAKD,IAAIkR,EAAOnR,QAEpDrK,IAARsK,GAAqBkR,EAAQlR,IAElCkR,EAAQuvB,EAAUj0B,GAAIxM,EAAKkR,EAAOuvB,EAAQzgC,KAAOC,KAAKF,IAAImR,EAAOlR,IAE9DkR,CACX,CO+JmBkxB,CAAiBlnB,EAAM9K,KAAKmwB,YAAYxD,GAAO3sB,KAAKqwB,QAAQ1D,KAEvEoF,EAAUhkC,IAAI+c,EAPJ,CAQd,GAAC,CAAA1nB,IAAA,qBAAAC,MACD,WAAqB,IAAAmiB,EAAA,KACjBysB,EAAyCjyB,KAAK8E,WAAtCotB,EAAeD,EAAfC,gBAAiBtE,EAAWqE,EAAXrE,YACjBrkC,GAAWyW,KAAKtU,cAAcuP,YAAc,CAAC,GAA7C1R,OACF4oC,EAAkBnyB,KAAKmwB,YACzB+B,GAAmBnrC,EAAYmrC,GAC1BlyB,KAAKmwB,cACNnwB,KAAKmwB,YAAcnwB,KAAKoyB,yBAKxBpyB,KAAKmwB,eADL+B,IAAmB3oC,IP3JnC,SAAiC2nC,EAAS9jC,GAAgC,IAA5BkF,EAAGlF,EAAHkF,IAAKG,EAAIrF,EAAJqF,KAAMD,EAAMpF,EAANoF,OAAQD,EAAKnF,EAALmF,MAC7D,MAAO,CACHzD,EAAGw+B,GAA4B4D,EAAUpiC,EAAG2D,EAAMF,GAClDxD,EAAGu+B,GAA4B4D,EAAUniC,EAAGuD,EAAKE,GAEzD,COuJmC6/B,CAAwB9oC,EAAO2nC,UAAWgB,GAMrElyB,KAAKqwB,QPpGb,WAA0D,IAA9BzC,EAAWnpC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAGipC,GAOtC,OANoB,IAAhBE,EACAA,EAAc,GAEO,IAAhBA,IACLA,EAAcF,IAEX,CACH5+B,EAAG6+B,GAAmBC,EAAa,OAAQ,SAC3C7+B,EAAG4+B,GAAmBC,EAAa,MAAO,UAElD,COyFuB0E,CAAmB1E,GAK9BuE,IAAoBnyB,KAAKmwB,aACzB5mC,GACAyW,KAAKmwB,cACJnwB,KAAKowB,uBACNjC,IAAS,SAACxB,GACFnnB,EAAKwrB,mBAAmBrE,KACxBnnB,EAAK2qB,YAAYxD,GP7HrC,SAA+BpjC,EAAQ4mC,GACnC,IAAMoC,EAAsB,CAAC,EAO7B,YANwBjtC,IAApB6qC,EAAYxgC,MACZ4iC,EAAoB5iC,IAAMwgC,EAAYxgC,IAAMpG,EAAOoG,UAE/BrK,IAApB6qC,EAAYvgC,MACZ2iC,EAAoB3iC,IAAMugC,EAAYvgC,IAAMrG,EAAOoG,KAEhD4iC,CACX,COoH6CC,CAAsBjpC,EAAO2nC,UAAUvE,GAAOnnB,EAAK2qB,YAAYxD,IAEhG,GAER,GAAC,CAAAvpC,IAAA,wBAAAC,MACD,WACI,IAAAovC,EAAmEzyB,KAAK8E,WAA/CqrB,EAAWsC,EAA5BP,gBAA8BQ,EAAwBD,EAAxBC,yBACtC,IAAKvC,IAAgBppC,EAAYopC,GAC7B,OAAO,EACX,IAAMwC,EAAqBxC,EAAYrmC,QACvCwhB,GAAiC,OAAvBqnB,EAA6B,0GACvC,IAAQ13B,EAAe+E,KAAKtU,cAApBuP,WAER,IAAKA,IAAeA,EAAW1R,OAC3B,OAAO,EACX,IAAMqpC,ED5Nd,SAAwB73B,EAAS83B,EAAoB3sC,GACjD,IAAM4sC,EAAcpD,GAAmB30B,EAAS7U,GACxC6sC,EAAWF,EAAXE,OAKR,OAJIA,IACA9D,GAAc6D,EAAYhkC,EAAGikC,EAAO56B,OAAOrJ,GAC3CmgC,GAAc6D,EAAY/jC,EAAGgkC,EAAO56B,OAAOpJ,IAExC+jC,CACX,CCoN+BE,CAAeL,EAAoB13B,EAAWsN,KAAMvI,KAAKtU,cAAcgmC,yBAC1FuB,EPtKZ,SAAiC/B,EAAW0B,GACxC,MAAO,CACH9jC,EAAGy+B,GAA4B2D,EAAUpiC,EAAG8jC,EAAe9jC,GAC3DC,EAAGw+B,GAA4B2D,EAAUniC,EAAG6jC,EAAe7jC,GAEnE,COiKkCmkC,CAAwBj4B,EAAW1R,OAAO2nC,UAAW0B,GAK/E,GAAIF,EAA0B,CAC1B,IAAMS,EAAkBT,EJ9NpC,SAAgCtlC,GAAW,IAAR0B,EAAC1B,EAAD0B,EAAGC,EAAC3B,EAAD2B,EAClC,MAAO,CAAEuD,IAAKvD,EAAEY,IAAK4C,MAAOzD,EAAEc,IAAK4C,OAAQzD,EAAEa,IAAK6C,KAAM3D,EAAEa,IAC9D,CI4N6DyjC,CAAwBH,IACzEjzB,KAAKowB,wBAA0B+C,EAC3BA,IACAF,EAAsB7E,GAAwB+E,GAEtD,CACA,OAAOF,CACX,GAAC,CAAA7vC,IAAA,iBAAAC,MACD,SAAe8nB,GAAU,IAAAiZ,EAAA,KACrBiP,EAAoGrzB,KAAK8E,WAAjG7b,EAAIoqC,EAAJpqC,KAAMqqC,EAAYD,EAAZC,aAAc1F,EAAWyF,EAAXzF,YAAa2F,EAAcF,EAAdE,eAAgBC,EAAgBH,EAAhBG,iBAAkBC,EAAmBJ,EAAnBI,oBACrEtD,EAAcnwB,KAAKmwB,aAAe,CAAC,EACnCuD,EAAqBvF,IAAS,SAACxB,GACjC,GAAKmF,GAAWnF,EAAM1jC,EAAMm7B,EAAK8L,kBAAjC,CAGA,IAAI1yB,EAAc2yB,GAAeA,EAAYxD,IAAU,CAAC,EACpD6G,IACAh2B,EAAa,CAAE7N,IAAK,EAAGC,IAAK,IAOhC,IAAM4pB,EAAkBoU,EAAc,IAAM,IACtCtU,EAAgBsU,EAAc,GAAK,IACnC5U,GAAOjuB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACTyE,KAAM,UACN2b,SAAUmoB,EAAenoB,EAASwhB,GAAQ,EAC1CnT,gBAAAA,EACAF,cAAAA,EACAF,aAAc,IACdvB,UAAW,EACXC,UAAW,IACRyb,GACA/1B,GAKP,OAAO4mB,EAAKuP,wBAAwBhH,EAAM3T,EA1B1C,CA2BJ,IAEA,OAAOqD,QAAQpT,IAAIyqB,GAAoB9V,KAAK6V,EAChD,GAAC,CAAArwC,IAAA,0BAAAC,MACD,SAAwBspC,EAAMnvB,GAC1B,IAAMu0B,EAAY/xB,KAAKgxB,mBAAmBrE,GAC1C,OAAOoF,EAAUxqC,MAAMy5B,GAAmB2L,EAAMoF,EAAW,EAAGv0B,GAClE,GAAC,CAAApa,IAAA,gBAAAC,MACD,WAAgB,IAAAuwC,EAAA,KACZzF,IAAS,SAACxB,GAAI,OAAKiH,EAAK5C,mBAAmBrE,GAAMnS,MAAM,GAC3D,GACA,CAAAp3B,IAAA,qBAAAC,MAMA,SAAmBspC,GACf,IAAMkH,EAAU,QAAUlH,EAAK9wB,cACzBjU,EAAQoY,KAAKtU,cAAcoZ,WAC3BgvB,EAAsBlsC,EAAMisC,GAClC,OAAOC,GAED9zB,KAAKtU,cAAcw5B,SAASyH,GAAO/kC,EAAMU,QAAUV,EAAMU,QAAQqkC,QAAQrnC,IAAc,EACjG,GAAC,CAAAlC,IAAA,eAAAC,MACD,SAAayd,GAAO,IAAAizB,EAAA,KAChB5F,IAAS,SAACxB,GAGN,GAAKmF,GAAWnF,EAFCoH,EAAKjvB,WAAd7b,KAEoB8qC,EAAK7D,kBAAjC,CAEA,IAAQj1B,EAAe84B,EAAKroC,cAApBuP,WACF82B,EAAYgC,EAAK/C,mBAAmBrE,GAC1C,GAAI1xB,GAAcA,EAAW1R,OAAQ,CACjC,IAAAyqC,EAAqB/4B,EAAW1R,OAAO2nC,UAAUvE,GAAzCh9B,EAAGqkC,EAAHrkC,IAAKC,EAAGokC,EAAHpkC,IACbmiC,EAAUhkC,IAAI+S,EAAM6rB,GAAQvwB,GAAIzM,EAAKC,EAAK,IAC9C,CANU,CAOd,GACJ,GACA,CAAAxM,IAAA,iCAAAC,MAKA,WAAiC,IAAA4wC,EAAA,KAC7B,GAAKj0B,KAAKtU,cAAc5B,QAAxB,CAEA,IAAAoqC,EAAkCl0B,KAAK8E,WAA/B7b,EAAIirC,EAAJjrC,KAAMipC,EAAegC,EAAfhC,gBACNj3B,EAAe+E,KAAKtU,cAApBuP,WACR,GAAKlU,EAAYmrC,IAAqBj3B,GAAe+E,KAAKmwB,YAA1D,CAMAnwB,KAAK0wB,gBAKL,IAAMyD,EAAc,CAAErlC,EAAG,EAAGC,EAAG,GAC/Bo/B,IAAS,SAACxB,GACN,IAAMoF,EAAYkC,EAAKjD,mBAAmBrE,GAC1C,GAAIoF,EAAW,CACX,IAAM5X,EAAS4X,EAAUnkC,MACzBumC,EAAYxH,GP5Q5B,SAAoBhoC,EAAQJ,GACxB,IAAI2T,EAAS,GACPk8B,EAAe1H,GAAW/nC,GAC1B0vC,EAAe3H,GAAWnoC,GAOhC,OANI8vC,EAAeD,EACfl8B,EAAS6W,GAASxqB,EAAOoL,IAAKpL,EAAOqL,IAAMwkC,EAAczvC,EAAOgL,KAE3DykC,EAAeC,IACpBn8B,EAAS6W,GAASpqB,EAAOgL,IAAKhL,EAAOiL,IAAMykC,EAAc9vC,EAAOoL,MAE7DD,EAAM,EAAG,EAAGwI,EACvB,COiQoCD,CAAW,CAAEtI,IAAKwqB,EAAQvqB,IAAKuqB,GAAU8Z,EAAK9D,YAAYxD,GAClF,CACJ,IAIA,IAAQ53B,EAAsBiL,KAAKtU,cAAcoZ,WAAzC/P,kBACRiL,KAAKtU,cAAc5B,QAAQkL,MAAMvF,UAAYsF,EACvCA,EAAkB,CAAC,EAAG,IACtB,OACNkG,EAAWsN,MAAQtN,EAAWsN,KAAK+rB,eACnCr5B,EAAWs5B,eACXv0B,KAAK8wB,qBAKL3C,IAAS,SAACxB,GACN,GAAKmF,GAAWnF,EAAM1jC,EAAM,MAA5B,CAKA,IAAM8oC,EAAYkC,EAAKjD,mBAAmBrE,GAC1C6H,EAAqBP,EAAK9D,YAAYxD,GAA9Bh9B,EAAG6kC,EAAH7kC,IAAKC,EAAG4kC,EAAH5kC,IACbmiC,EAAUhkC,IAAIqO,GAAIzM,EAAKC,EAAKukC,EAAYxH,IAN9B,CAOd,GAzCU,CAJA,CA8Cd,GAAC,CAAAvpC,IAAA,eAAAC,MACD,WAAe,IAAAoxC,EAAA,KACX,GAAKz0B,KAAKtU,cAAc5B,QAAxB,CAEAgmC,GAAoB/hC,IAAIiS,KAAKtU,cAAesU,MAC5C,IAIM00B,EAAsB1zB,GAJZhB,KAAKtU,cAAc5B,QAIkB,eAAe,SAAC0W,GACjE,IAAAm0B,EAAsCF,EAAK3vB,WAAnC7b,EAAI0rC,EAAJ1rC,KAAI2rC,EAAAD,EAAE/9B,aACd3N,SAD0B,IAAA2rC,GAAOA,IACTH,EAAKltC,MAAMiZ,EACvC,IACMq0B,EAAyB,WAEvB9tC,EADwB0tC,EAAK3vB,WAAzBotB,mBAEJuC,EAAKtE,YAAcsE,EAAKrC,wBAEhC,EACQn3B,EAAe+E,KAAKtU,cAApBuP,WACF65B,EAA4B75B,EAAWoF,iBAAiB,UAAWw0B,GACrE55B,IAAeA,EAAW1R,SAC1B0R,EAAWsN,MAAQtN,EAAWsN,KAAK+rB,eACnCr5B,EAAWs5B,gBAEfM,IAKA,IAAME,EAAqB90B,GAAY3T,OAAQ,UAAU,kBAAMmoC,EAAKO,gCAAgC,IAK9FC,EAA2Bh6B,EAAWoF,iBAAiB,aAAc,SAAAinB,GAAiC,IAA9BhlB,EAAKglB,EAALhlB,MAAO4yB,EAAgB5N,EAAhB4N,iBAC7ET,EAAKxE,YAAciF,IACnB/G,IAAS,SAACxB,GACN,IAAMjI,EAAc+P,EAAKzD,mBAAmBrE,GACvCjI,IAEL+P,EAAK1H,YAAYJ,IAASrqB,EAAMqqB,GAAMK,UACtCtI,EAAY32B,IAAI22B,EAAY92B,MAAQ0U,EAAMqqB,GAAMK,WACpD,IACAyH,EAAK/oC,cAAcU,SAE3B,IACA,OAAO,WACH2oC,IACAL,IACAI,IACAG,GAA4BA,GAChC,CAjDU,CAkDd,GAAC,CAAA7xC,IAAA,WAAAC,MACD,WACI,IAAMuE,EAAQoY,KAAKtU,cAAcoZ,WACjCqwB,EAA0JvtC,EAAlJqB,KAAAA,OAAI,IAAAksC,GAAQA,EAAAC,EAAsIxtC,EAApIwpC,kBAAAA,OAAiB,IAAAgE,GAAQA,EAAAC,EAA2GztC,EAAzGgpC,gBAAAA,OAAe,IAAAyE,GAAQA,EAAAC,EAAkF1tC,EAAhFsqC,gBAAAA,OAAe,IAAAoD,GAAQA,EAAAC,EAAyD3tC,EAAvDgmC,YAAAA,OAAW,IAAA2H,EAAG7H,GAAc6H,EAAAC,EAA2B5tC,EAAzB0rC,aAAAA,OAAY,IAAAkC,GAAOA,EACpJ,OAAAzqC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACOnD,GAAK,IACRqB,KAAAA,EACAmoC,kBAAAA,EACAR,gBAAAA,EACAsB,gBAAAA,EACAtE,YAAAA,EACA0F,aAAAA,GAER,KAACvD,CAAA,CAzZ0B,GA2Z/B,SAAS+B,GAAWlT,EAAW31B,EAAMinC,GACjC,QAAkB,IAATjnC,GAAiBA,IAAS21B,KACT,OAArBsR,GAA6BA,IAAqBtR,EAC3D,CCnb4E,IAEtE6W,GAAW,SAAAvwB,GAAArG,GAAA42B,EAAAvwB,GAAA,IAAAC,EAAA7F,GAAAm2B,GACb,SAAAA,EAAYtzB,GAAM,IAAAkD,EAIsC,OAJtCrH,GAAA,KAAAy3B,IACdpwB,EAAAF,EAAA3f,KAAA,KAAM2c,IACDuzB,oBAAsB5vB,GAC3BT,EAAK+mB,gBAAkBtmB,GACvBT,EAAKswB,SAAW,IAAI5F,GAA0B5tB,GAAMkD,CACxD,CAaC,OAbAhH,GAAAo3B,EAAA,EAAAryC,IAAA,QAAAC,MACD,WAGI,IAAQuyC,EAAiB51B,KAAKmC,KAAK2C,WAA3B8wB,aACJA,IACA51B,KAAK01B,oBAAsBE,EAAa3L,UAAUjqB,KAAK21B,WAE3D31B,KAAKosB,gBAAkBpsB,KAAK21B,SAASE,gBAAkB/vB,EAC3D,GAAC,CAAA1iB,IAAA,UAAAC,MACD,WACI2c,KAAK01B,sBACL11B,KAAKosB,iBACT,KAACqJ,CAAA,CAnBY,CAASvzB,ICEpB4zB,GAAe,SAAC31B,GAAO,OAAK,SAACK,EAAOqE,GAClC1E,GACA6D,GAAK7X,QAAO,kBAAMgU,EAAQK,EAAOqE,EAAK,GAE9C,CAAC,EACKkxB,GAAU,SAAA7wB,GAAArG,GAAAk3B,EAAA7wB,GAAA,IAAAC,EAAA7F,GAAAy2B,GACZ,SAAAA,IAAc,IAAA1wB,EAE4B,OAF5BrH,GAAA,KAAA+3B,IACV1wB,EAAAF,EAAA9gB,MAAA,KAASI,YACJuxC,0BAA4BlwB,GAAKT,CAC1C,CA2BC,OA3BAhH,GAAA03B,EAAA,EAAA3yC,IAAA,gBAAAC,MACD,SAAc4yC,GACVj2B,KAAKk2B,QAAU,IAAIvL,GAAWsL,EAAkBj2B,KAAKm2B,oBAAqB,CAAEjwC,mBAAoB8Z,KAAKmC,KAAKuvB,yBAC9G,GAAC,CAAAtuC,IAAA,oBAAAC,MACD,WAAoB,IAAAmiB,EAAA,KAChBuB,EAA2D/G,KAAKmC,KAAK2C,WAA7DsxB,EAAiBrvB,EAAjBqvB,kBAAmBC,EAAUtvB,EAAVsvB,WAAYC,EAAKvvB,EAALuvB,MAAOC,EAAQxvB,EAARwvB,SAC9C,MAAO,CACHpK,eAAgB2J,GAAaM,GAC7B5K,QAASsK,GAAaO,GACtB5K,OAAQ6K,EACRvK,MAAO,SAACvrB,EAAOqE,UACJW,EAAK0wB,QACRK,GACAvyB,GAAK7X,QAAO,kBAAMoqC,EAAS/1B,EAAOqE,EAAK,GAE/C,EAER,GAAC,CAAAzhB,IAAA,QAAAC,MACD,WAAQ,IAAA+gC,EAAA,KACJpkB,KAAKg2B,0BAA4Bh1B,GAAgBhB,KAAKmC,KAAKrY,QAAS,eAAe,SAAC0W,GAAK,OAAK4jB,EAAKoS,cAAch2B,EAAM,GAC3H,GAAC,CAAApd,IAAA,SAAAC,MACD,WACI2c,KAAKk2B,SAAWl2B,KAAKk2B,QAAQO,eAAez2B,KAAKm2B,oBACrD,GAAC,CAAA/yC,IAAA,UAAAC,MACD,WACI2c,KAAKg2B,4BACLh2B,KAAKk2B,SAAWl2B,KAAKk2B,QAAQrK,KACjC,KAACkK,CAAA,CA/BW,CAAS7zB,ICTzB,SAASw0B,GAAgBC,EAAQhK,GAC7B,OAAIA,EAAK/8B,MAAQ+8B,EAAKh9B,IACX,EACHgnC,GAAUhK,EAAK/8B,IAAM+8B,EAAKh9B,KAAQ,GAC9C,CAQA,IAAMinC,GAAsB,CACxBC,QAAS,SAAC1c,EAAQhY,GACd,IAAKA,EAAK5d,OACN,OAAO41B,EAKX,GAAsB,kBAAXA,EAAqB,CAC5B,IAAInpB,GAAG5C,KAAK+rB,GAIR,OAAOA,EAHPA,EAASnqB,WAAWmqB,EAK5B,CAKA,IAAMrrB,EAAI4nC,GAAgBvc,EAAQhY,EAAK5d,OAAOuK,GACxCC,EAAI2nC,GAAgBvc,EAAQhY,EAAK5d,OAAOwK,GAC9C,MAAO,GAAPrH,OAAUoH,EAAC,MAAApH,OAAKqH,EAAC,IACrB,GCzBJ,IAAM+nC,GAAmB,uDAQzB,IAAMC,GAAW,EACjB,SAASC,GAAiBltC,EAASiR,GAAoB,IAAXk8B,EAAKxyC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAChD6mB,GAAU2rB,GAASF,GAAU,yDAAFrvC,OAA2DoC,EAAO,yDAC7F,IAAAotC,EAVJ,SAA0BptC,GACtB,IAAM4jB,EAAQopB,GAAiBK,KAAKrtC,GACpC,IAAK4jB,EACD,MAAO,CAAC,GACZ,IAAA0pB,GAAAvrB,EAAAA,GAAAA,GAA4B6B,EAAK,GACjC,MAAO,CADO0pB,EAAA,GAAUA,EAAA,GAE5B,CAI8BC,CAAiBvtC,GAAQwtC,GAAAzrB,EAAAA,GAAAA,GAAAqrB,EAAA,GAA5C9nC,EAAKkoC,EAAA,GAAEC,EAAQD,EAAA,GAEtB,GAAKloC,EAAL,CAGA,IAAMkO,EAAWhR,OAAOkrC,iBAAiBz8B,GAAS08B,iBAAiBroC,GACnE,OAAIkO,EACOA,EAASvH,OAEXzG,EAAmBioC,GAEjBP,GAAiBO,EAAUx8B,EAASk8B,EAAQ,GAG5CM,CAXD,CAad,CAMA,SAASG,GAAoBhsC,EAAalB,EAAiB+S,GAAe,IAAzBhZ,EAAMjB,OAAAiT,OAAA,IC7CxC,SAAmCpT,GAChD,GAAW,MAAPA,EAAa,MAAM,IAAIsC,UAAU,sBAAwBtC,EAC/D,CD2CuDw0C,CAAAntC,GAAAA,IAC7CuQ,EAAUrP,EAAc5B,QAC9B,KAAMiR,aAAmB+R,SACrB,MAAO,CAAEvoB,OAAAA,EAAQgZ,cAAAA,GAiBrB,IAAK,IAAMna,KAdPma,IACAA,GAAaxS,EAAAA,EAAAA,GAAA,GAAQwS,IAGzB7R,EAAc2O,OAAOzV,SAAQ,SAACvB,GAC1B,IAAMyG,EAAUzG,EAAMuK,MACtB,GAAK0B,EAAmBxF,GAAxB,CAEA,IAAMwT,EAAW05B,GAAiBltC,EAASiR,GACvCuC,GACAja,EAAM0K,IAAIuP,EAHJ,CAId,IAGkB/Y,EAAQ,CACtB,IAAMuF,EAAUvF,EAAOnB,GACvB,GAAKkM,EAAmBxF,GAAxB,CAEA,IAAMwT,EAAW05B,GAAiBltC,EAASiR,GACtCuC,IAGL/Y,EAAOnB,GAAOka,EACTC,IACDA,EAAgB,CAAC,QAIMjY,IAAvBiY,EAAcna,KACdma,EAAcna,GAAO0G,GAZb,CAchB,CACA,MAAO,CAAEvF,OAAAA,EAAQgZ,cAAAA,EACrB,CEhFA,IAAMq6B,GAAW,QACXC,GAAmB,CACrBhB,QAAS,SAAC1c,EAAM3vB,GAAqC,IAAjCstC,EAASttC,EAATstC,UAAWC,EAAevtC,EAAfutC,gBACrBC,EAAW7d,EAIX8d,EAAuB9d,EAAOjsB,SAAS,QACvCgqC,EAAe,GACjBD,IACA9d,EAASA,EAAOtf,QAAQi8B,IAAkB,SAACppB,GAEvC,OADAwqB,EAAa9zC,KAAKspB,GACXkqB,EACX,KAEJ,IAAMO,EAASpnB,GAAQhhB,MAAMoqB,GAE7B,GAAIge,EAAOzzC,OAAS,EAChB,OAAOszC,EACX,IAAMrmB,EAAWZ,GAAQL,kBAAkByJ,GACrChiB,EAA8B,kBAAdggC,EAAO,GAAkB,EAAI,EAE7CC,EAASL,EAAgBjpC,EAAEoB,MAAQ4nC,EAAUhpC,EAC7CupC,EAASN,EAAgBhpC,EAAEmB,MAAQ4nC,EAAU/oC,EACnDopC,EAAO,EAAIhgC,IAAWigC,EACtBD,EAAO,EAAIhgC,IAAWkgC,EAOtB,IAAMC,EAAel8B,GAAIg8B,EAAQC,EAAQ,IAEP,kBAAvBF,EAAO,EAAIhgC,KAClBggC,EAAO,EAAIhgC,IAAWmgC,GAEQ,kBAAvBH,EAAO,EAAIhgC,KAClBggC,EAAO,EAAIhgC,IAAWmgC,GAC1B,IAAIznB,EAASc,EAASwmB,GACtB,GAAIF,EAAsB,CACtB,IAAIzzC,EAAI,EACRqsB,EAASA,EAAOhW,QAAQ+8B,IAAU,WAC9B,IAAMW,EAAcL,EAAa1zC,GAEjC,OADAA,IACO+zC,CACX,GACJ,CACA,OAAO1nB,CACX,GC3CE2nB,GAAwB,SAAAC,GAAA55B,GAAA25B,EAAAC,GAAA,IAAAtzB,EAAA7F,GAAAk5B,GAAA,SAAAA,IAAA,OAAAx6B,GAAA,KAAAw6B,GAAArzB,EAAA9gB,MAAA,KAAAI,UAAA,CA8FzB,OA9FyB4Z,GAAAm6B,EAAA,EAAAp1C,IAAA,oBAAAC,MAM1B,WAAoB,I7JfGq1C,E6JeHrzB,EAAA,KAChBszB,EAAoE34B,KAAKpY,MAAjE8D,EAAaitC,EAAbjtC,cAAektC,EAAWD,EAAXC,YAAaC,EAAiBF,EAAjBE,kBAAmBvtC,EAAQqtC,EAARrtC,SAC/C2P,EAAevP,EAAfuP,W7JjBWy9B,E6JkBDI,G7JjBtBx1C,OAAOiT,OAAOlI,EAAiBqqC,G6JkBvBz9B,IACI29B,EAAYG,OACZH,EAAYG,MAAMt1B,IAAIxI,GACtB49B,GAAqBA,EAAkBnO,UAAYp/B,GACnDutC,EAAkBnO,SAASzvB,GAE/BA,EAAWsN,KAAKywB,YAChB/9B,EAAWoF,iBAAiB,qBAAqB,WAC7CgF,EAAK4zB,cACT,IACAh+B,EAAWi+B,YAAUnuC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAChBkQ,EAAWnG,SAAO,IACrBw1B,eAAgB,kBAAMjlB,EAAK4zB,cAAc,MAGjDlvC,EAAsBE,gBAAiB,CAC3C,GAAC,CAAA7G,IAAA,0BAAAC,MACD,SAAwBqY,GAAW,IAAA8J,EAAA,KAC/B2zB,EAA6Dn5B,KAAKpY,MAA1DwxC,EAAgBD,EAAhBC,iBAAkB1tC,EAAaytC,EAAbztC,cAAezC,EAAIkwC,EAAJlwC,KAAMohC,EAAS8O,EAAT9O,UACzCpvB,EAAavP,EAAcuP,WACjC,OAAKA,GASLA,EAAWovB,UAAYA,EACnBphC,GACAyS,EAAU09B,mBAAqBA,QACV9zC,IAArB8zC,EACAn+B,EAAWo+B,aAGXr5B,KAAKi5B,eAELv9B,EAAU2uB,YAAcA,IACpBA,EACApvB,EAAWq+B,UAELr+B,EAAWs+B,YAMjBv1B,GAAKkf,YAAW,WACZ,IAAMsW,EAAQv+B,EAAWw+B,WACpBD,GAAUA,EAAME,QAAQh1C,QACzB8gB,EAAKyzB,cAEb,KAGD,MAnCI,IAoCf,GAAC,CAAA71C,IAAA,qBAAAC,MACD,WACI,IAAQ4X,EAAe+E,KAAKpY,MAAM8D,cAA1BuP,WACJA,IACAA,EAAWsN,KAAKywB,aACX/9B,EAAW0+B,kBAAoB1+B,EAAW2+B,UAC3C55B,KAAKi5B,eAGjB,GAAC,CAAA71C,IAAA,uBAAAC,MACD,WACI,IAAAw2C,EAA2E75B,KAAKpY,MAAxE8D,EAAamuC,EAAbnuC,cAAektC,EAAWiB,EAAXjB,YAAgCkB,EAAcD,EAAjChB,kBAC5B59B,EAAevP,EAAfuP,WACJA,IACAA,EAAW8+B,4BACPnB,GAAeA,EAAYG,OAC3BH,EAAYG,MAAMxS,OAAOtrB,GACzB6+B,GAAkBA,EAAeE,YACjCF,EAAeE,WAAW/+B,GAEtC,GAAC,CAAA7X,IAAA,eAAAC,MACD,WACI,IAAQ41C,EAAiBj5B,KAAKpY,MAAtBqxC,aACRA,GAAgBA,GACpB,GAAC,CAAA71C,IAAA,SAAAC,MACD,WACI,OAAO,IACX,KAACm1C,CAAA,CA9FyB,CAASyB,EAAAA,WAgGvC,SAAS7uC,GAAcxD,GACnB,IAAAsyC,ECjFJ,WACI,IAAM7xC,GAAUI,EAAAA,EAAAA,YAAWlC,GAC3B,GAAgB,OAAZ8B,EACA,MAAO,EAAC,EAAM,MAClB,IAAQgiC,EAAwChiC,EAAxCgiC,UAAWC,EAA6BjiC,EAA7BiiC,eAAgBI,EAAariC,EAAbqiC,SAG7BxgC,GAAKiwC,EAAAA,EAAAA,SAGX,OAFAvzC,EAAAA,EAAAA,YAAU,kBAAM8jC,EAASxgC,EAAG,GAAE,KAEtBmgC,GAAaC,EAAiB,EAAC,EADlB,WAAH,OAASA,GAAkBA,EAAepgC,EAAG,GACD,EAAC,EACnE,CDsEsCkwC,GAAaC,GAAAxuB,EAAAA,GAAAA,GAAAquB,EAAA,GAAxC7P,EAASgQ,EAAA,GAAEpB,EAAYoB,EAAA,GACxBzB,GAAcnwC,EAAAA,EAAAA,YAAW0B,GAC/B,OAAQ8vC,EAAAA,cAA6BzB,IAAwBztC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOnD,GAAK,IAAEgxC,YAAaA,EAAaC,mBAAmBpwC,EAAAA,EAAAA,YAAW2B,GAA2BigC,UAAWA,EAAW4O,aAAcA,IACtM,CACA,IAAMH,GAAyB,CAC3BnnC,cAAY5G,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACL6rC,IAAmB,IACtB0D,QAAS,CACL,sBACA,uBACA,yBACA,6BAGRzoC,oBAAqB+kC,GACrB9kC,qBAAsB8kC,GACtB5kC,uBAAwB4kC,GACxB7kC,wBAAyB6kC,GACzB2D,UAAW1C,IEvHT2C,GAAU,CAAC,UAAW,WAAY,aAAc,eAChDC,GAAaD,GAAQ91C,OACrBg2C,GAAW,SAACr3C,GAAK,MAAsB,kBAAVA,EAAqB2M,WAAW3M,GAASA,CAAK,EAC3Es3C,GAAO,SAACt3C,GAAK,MAAsB,kBAAVA,GAAsB2N,GAAG5C,KAAK/K,EAAM,EA0CnE,SAASu3C,GAAUvgC,EAAQwgC,GACvB,YAA8Bv1C,IAAvB+U,EAAOwgC,GACRxgC,EAAOwgC,GACPxgC,EAAO1I,YACjB,CAwBA,IAAMmpC,GAAkBC,GAAS,EAAG,GAAKxuB,IACnCyuB,GAAmBD,GAAS,GAAK,IAAMj1B,IAC7C,SAASi1B,GAASprC,EAAKC,EAAK+c,GACxB,OAAO,SAACxmB,GAEJ,OAAIA,EAAIwJ,EACG,EACPxJ,EAAIyJ,EACG,EACJ+c,EAAOoC,GAASpf,EAAKC,EAAKzJ,GACrC,CACJ,CCrFA,SAAS80C,GAAatO,EAAMuO,GACxBvO,EAAKh9B,IAAMurC,EAAWvrC,IACtBg9B,EAAK/8B,IAAMsrC,EAAWtrC,GAC1B,CAMA,SAASurC,GAAYrM,EAAKsM,GACtBH,GAAanM,EAAIhgC,EAAGssC,EAAUtsC,GAC9BmsC,GAAanM,EAAI//B,EAAGqsC,EAAUrsC,EAClC,CCVA,SAASssC,GAAiBv6B,EAAOksB,EAAW98B,EAAO68B,EAAa4B,GAM5D,OAJA7tB,EAAQ2tB,GADR3tB,GAASksB,EACiB,EAAI98B,EAAO68B,QACpBznC,IAAbqpC,IACA7tB,EAAQ2tB,GAAW3tB,EAAO,EAAI6tB,EAAU5B,IAErCjsB,CACX,CAsBA,SAASw6B,GAAqB3O,EAAMwC,EAAU3kC,EAA8B0N,EAAQqjC,GAAY,IAAAnuC,GAAAye,EAAAA,GAAAA,GAAArhB,EAAA,GAA/CpH,EAAGgK,EAAA,GAAEgiC,EAAQhiC,EAAA,GAAEiiC,EAASjiC,EAAA,IAlBzE,SAAyBu/B,GAA8F,IAAxFK,EAASvoC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAGyL,EAAKzL,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,EAAGyT,EAAMzT,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,GAAKkqC,EAAQlqC,UAAAC,OAAA,EAAAD,UAAA,QAAAa,EAAE41C,EAAUz2C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAGkoC,EAAM4O,EAAU92C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAGkoC,EAM7G,GALI57B,GAAQ3C,KAAK4+B,KACbA,EAAYh9B,WAAWg9B,GAEvBA,EADyB5wB,GAAIm/B,EAAW5rC,IAAK4rC,EAAW3rC,IAAKo9B,EAAY,KAC1CuO,EAAW5rC,KAErB,kBAAdq9B,EAAX,CAEA,IAAID,EAAc3wB,GAAI8+B,EAAWvrC,IAAKurC,EAAWtrC,IAAKsI,GAClDy0B,IAASuO,IACTnO,GAAeC,GACnBL,EAAKh9B,IAAM0rC,GAAiB1O,EAAKh9B,IAAKq9B,EAAW98B,EAAO68B,EAAa4B,GACrEhC,EAAK/8B,IAAMyrC,GAAiB1O,EAAK/8B,IAAKo9B,EAAW98B,EAAO68B,EAAa4B,EAL3D,CAMd,CAMI6M,CAAgB7O,EAAMwC,EAAW/rC,GAAM+rC,EAAWC,GAAWD,EAAWE,GAAYF,EAAWj/B,MAAOgI,EAAQqjC,EAClH,CAIA,IAAMhM,GAAQ,CAAC,IAAK,SAAU,WACxBC,GAAQ,CAAC,IAAK,SAAU,WAK9B,SAASiM,GAAoB3M,EAAKK,EAAYiM,EAAWM,GACrDJ,GAAqBxM,EAAIhgC,EAAGqgC,EAAYI,GAAO6L,EAAYA,EAAUtsC,OAAIxJ,EAAWo2C,EAAYA,EAAU5sC,OAAIxJ,GAC9Gg2C,GAAqBxM,EAAI//B,EAAGogC,EAAYK,GAAO4L,EAAYA,EAAUrsC,OAAIzJ,EAAWo2C,EAAYA,EAAU3sC,OAAIzJ,EAClH,CCjDA,SAASq2C,GAAgBr5B,GACrB,OAA2B,IAApBA,EAAM0qB,WAAmC,IAAhB1qB,EAAMpS,KAC1C,CACA,SAAS0rC,GAAYt5B,GACjB,OAAOq5B,GAAgBr5B,EAAMxT,IAAM6sC,GAAgBr5B,EAAMvT,EAC7D,CACA,SAAS8sC,GAAU36B,EAAGC,GAClB,OAAQD,EAAEpS,EAAEa,MAAQwR,EAAErS,EAAEa,KACpBuR,EAAEpS,EAAEc,MAAQuR,EAAErS,EAAEc,KAChBsR,EAAEnS,EAAEY,MAAQwR,EAAEpS,EAAEY,KAChBuR,EAAEnS,EAAEa,MAAQuR,EAAEpS,EAAEa,GACxB,CACA,SAASksC,GAAYhN,GACjB,OAAOpC,GAAWoC,EAAIhgC,GAAK49B,GAAWoC,EAAI//B,EAC9C,CChBkE,IAE5DgtC,GAAS,WACX,SAAAA,IAAc/9B,GAAA,KAAA+9B,GACV/7B,KAAK05B,QAAU,EACnB,CAuGC,OAvGAr7B,GAAA09B,EAAA,EAAA34C,IAAA,MAAAC,MACD,SAAI8e,GACAkgB,GAAcriB,KAAK05B,QAASv3B,GAC5BA,EAAK65B,gBACT,GAAC,CAAA54C,IAAA,SAAAC,MACD,SAAO8e,GAKH,GAJAogB,GAAWviB,KAAK05B,QAASv3B,GACrBA,IAASnC,KAAKi8B,WACdj8B,KAAKi8B,cAAW32C,GAEhB6c,IAASnC,KAAKk8B,KAAM,CACpB,IAAMD,EAAWj8B,KAAK05B,QAAQ15B,KAAK05B,QAAQh1C,OAAS,GAChDu3C,GACAj8B,KAAKs5B,QAAQ2C,EAErB,CACJ,GAAC,CAAA74C,IAAA,WAAAC,MACD,SAAS8e,GACL,IAMI85B,EANEE,EAAcn8B,KAAK05B,QAAQ0C,WAAU,SAACC,GAAM,OAAKl6B,IAASk6B,CAAM,IACtE,GAAoB,IAAhBF,EACA,OAAO,EAKX,IAAK,IAAI33C,EAAI23C,EAAa33C,GAAK,EAAGA,IAAK,CACnC,IAAM63C,EAASr8B,KAAK05B,QAAQl1C,GAC5B,IAAyB,IAArB63C,EAAOhS,UAAqB,CAC5B4R,EAAWI,EACX,KACJ,CACJ,CACA,QAAIJ,IACAj8B,KAAKs5B,QAAQ2C,IACN,EAKf,GAAC,CAAA74C,IAAA,UAAAC,MACD,SAAQ8e,EAAMm6B,GACV,IAAML,EAAWj8B,KAAKk8B,KAClB/5B,IAAS85B,IAEbj8B,KAAKi8B,SAAWA,EAChBj8B,KAAKk8B,KAAO/5B,EACZA,EAAKo6B,OACDN,IACAA,EAASjvC,UAAYivC,EAASD,iBAC9B75B,EAAK65B,iBACL75B,EAAKq6B,WAAaP,EACdK,IACAn6B,EAAKq6B,WAAWC,iBAAkB,GAElCR,EAASS,WACTv6B,EAAKu6B,SAAWT,EAASS,SACzBv6B,EAAKu6B,SAAS7nC,aACVonC,EAASU,iBAAmBV,EAASpnC,cAEzCsN,EAAKoG,MAAQpG,EAAKoG,KAAKq0B,aACvBz6B,EAAK06B,eAAgB,IAGP,IADI16B,EAAKrN,QAAnBgoC,WAEJb,EAASc,QAerB,GAAC,CAAA35C,IAAA,wBAAAC,MACD,WACI2c,KAAK05B,QAAQ90C,SAAQ,SAACud,GAClB,IAAQrN,EAA0BqN,EAA1BrN,QAASkoC,EAAiB76B,EAAjB66B,aACjBloC,EAAQw1B,gBAAkBx1B,EAAQw1B,iBAC9B0S,GACAA,EAAaloC,QAAQw1B,gBACjB0S,EAAaloC,QAAQw1B,gBAEjC,GACJ,GAAC,CAAAlnC,IAAA,iBAAAC,MACD,WACI2c,KAAK05B,QAAQ90C,SAAQ,SAACud,GAClBA,EAAKnV,UAAYmV,EAAK65B,gBAAe,EACzC,GACJ,GACA,CAAA54C,IAAA,qBAAAC,MAIA,WACQ2c,KAAKk8B,MAAQl8B,KAAKk8B,KAAKQ,WACvB18B,KAAKk8B,KAAKQ,cAAWp3C,EAE7B,KAACy2C,CAAA,CA1GU,GCFf,SAASkB,GAAyB36B,EAAOw1B,EAAWoF,GAChD,IAAIztC,EAAY,GAOV0tC,EAAa76B,EAAMxT,EAAEk+B,UAAY8K,EAAUhpC,EAC3CsuC,EAAa96B,EAAMvT,EAAEi+B,UAAY8K,EAAU/oC,EAWjD,IAVIouC,GAAcC,KACd3tC,EAAY,eAAH/H,OAAkBy1C,EAAU,QAAAz1C,OAAO01C,EAAU,YAMtC,IAAhBtF,EAAUhpC,GAA2B,IAAhBgpC,EAAU/oC,IAC/BU,GAAa,SAAJ/H,OAAa,EAAIowC,EAAUhpC,EAAC,MAAApH,OAAK,EAAIowC,EAAU/oC,EAAC,OAEzDmuC,EAAiB,CACjB,IAAQ9pC,EAA6B8pC,EAA7B9pC,OAAQC,EAAqB6pC,EAArB7pC,QAASC,EAAY4pC,EAAZ5pC,QACrBF,IACA3D,GAAa,UAAJ/H,OAAc0L,EAAM,UAC7BC,IACA5D,GAAa,WAAJ/H,OAAe2L,EAAO,UAC/BC,IACA7D,GAAa,WAAJ/H,OAAe4L,EAAO,SACvC,CAKA,IAAM+pC,EAAgB/6B,EAAMxT,EAAEoB,MAAQ4nC,EAAUhpC,EAC1CwuC,EAAgBh7B,EAAMvT,EAAEmB,MAAQ4nC,EAAU/oC,EAIhD,OAHsB,IAAlBsuC,GAAyC,IAAlBC,IACvB7tC,GAAa,SAAJ/H,OAAa21C,EAAa,MAAA31C,OAAK41C,EAAa,MAElD7tC,GAAa,MACxB,CCvCA,IAAM8tC,GAAiB,SAACr8B,EAAGC,GAAC,OAAKD,EAAE+1B,MAAQ91B,EAAE81B,KAAK,ECG5CuG,GAAQ,WACV,SAAAA,IAAcx/B,GAAA,KAAAw/B,GACVx9B,KAAKxF,SAAW,GAChBwF,KAAKy9B,SAAU,CACnB,CAaC,OAbAp/B,GAAAm/B,EAAA,EAAAp6C,IAAA,MAAAC,MACD,SAAIuiB,GACAyc,GAAcriB,KAAKxF,SAAUoL,GAC7B5F,KAAKy9B,SAAU,CACnB,GAAC,CAAAr6C,IAAA,SAAAC,MACD,SAAOuiB,GACH2c,GAAWviB,KAAKxF,SAAUoL,GAC1B5F,KAAKy9B,SAAU,CACnB,GAAC,CAAAr6C,IAAA,UAAAC,MACD,SAAQigB,GACJtD,KAAKy9B,SAAWz9B,KAAKxF,SAAS2sB,KAAKoW,IACnCv9B,KAAKy9B,SAAU,EACfz9B,KAAKxF,SAAS5V,QAAQ0e,EAC1B,KAACk6B,CAAA,CAjBS,GCsBd,IAAME,GAAgB,CAAC,GAAI,IAAK,IAAK,KAK/BC,GAAkB,IACpBzzC,GAAK,EAKH0zC,GAAsB,CACxBpuC,KAAM,kBACNquC,WAAY,EACZC,qBAAsB,EACtBC,uBAAwB,GAE5B,SAASC,GAAoBxzC,GAA6F,IAA1FyzC,EAAoBzzC,EAApByzC,qBAAsBC,EAAa1zC,EAAb0zC,cAAeC,EAAa3zC,EAAb2zC,cAAeC,EAAiB5zC,EAAjB4zC,kBAAmBC,EAAc7zC,EAAd6zC,eACnG,kBACI,SAAAC,EAAYC,GAAsH,IAAAl5B,EAAA,KAA3GxQ,EAAYpQ,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGkH,EAAMlH,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAqB,OAAlBy5C,QAA4C,IAAlBA,OAA2B,EAASA,IAAelgC,GAAA,KAAAsgC,GAI5Ht+B,KAAK9V,GAAKA,KAIV8V,KAAKw+B,YAAc,EAOnBx+B,KAAKxF,SAAW,IAAIhM,IAKpBwR,KAAKlL,QAAU,CAAC,EAMhBkL,KAAKy+B,iBAAkB,EACvBz+B,KAAK+wB,oBAAqB,EAO1B/wB,KAAK68B,eAAgB,EAKrB78B,KAAK0+B,mBAAoB,EAKzB1+B,KAAK2+B,yBAA0B,EAK/B3+B,KAAK4+B,kBAAmB,EAIxB5+B,KAAK6+B,uBAAwB,EAC7B7+B,KAAK8+B,uBAAwB,EAK7B9+B,KAAK48B,YAAa,EAIlB58B,KAAK++B,OAAQ,EAKb/+B,KAAKg/B,YAAa,EAIlBh/B,KAAKi/B,sBAAuB,EAS5Bj/B,KAAK83B,UAAY,CAAEhpC,EAAG,EAAGC,EAAG,GAI5BiR,KAAKk/B,cAAgB,IAAIvxC,IAEzBqS,KAAKm/B,eAAiB,IAAIxxC,IAC1BqS,KAAKo/B,kBAAoB,WACjB/5B,EAAKu3B,aACLv3B,EAAKu3B,YAAa,EAClBv3B,EAAKg6B,oBAEb,EAMAr/B,KAAKs/B,iBAAmB,WC/IpC,IAAgBC,EDoJA3B,GAAoBC,WAChBD,GAAoBE,qBAChBF,GAAoBG,uBAChB,EACZ14B,EAAKm6B,MAAM56C,QAAQ66C,IACnBp6B,EAAKm6B,MAAM56C,QAAQ86C,IACnBr6B,EAAKm6B,MAAM56C,QAAQ+6C,IACnBt6B,EAAKm6B,MAAM56C,QAAQg7C,IC3JnBL,ED4JO3B,GC3JftxC,OAAOuzC,aACPvzC,OAAOuzC,YAAYC,OAAOP,ED2JtB,EACAv/B,KAAK+/B,cAAe,EACpB//B,KAAKggC,WAAY,EACjBhgC,KAAKigC,kBAAoB,EAKzBjgC,KAAKkgC,YAAc,IAAIvyC,IACvBqS,KAAKu+B,UAAYA,EACjBv+B,KAAKnL,aAAeA,EACpBmL,KAAKuI,KAAO5c,EAASA,EAAO4c,MAAQ5c,EAASqU,KAC7CA,KAAKmgC,KAAOx0C,EAAS,GAAHjE,OAAA4oB,GAAO3kB,EAAOw0C,MAAI,CAAEx0C,IAAU,GAChDqU,KAAKrU,OAASA,EACdqU,KAAKi3B,MAAQtrC,EAASA,EAAOsrC,MAAQ,EAAI,EACzCsH,GAAav+B,KAAKuI,KAAK63B,sBAAsB7B,EAAWv+B,MACxD,IAAK,IAAIxb,EAAI,EAAGA,EAAIwb,KAAKmgC,KAAKz7C,OAAQF,IAClCwb,KAAKmgC,KAAK37C,GAAGy6C,sBAAuB,EAEpCj/B,KAAKuI,OAASvI,OACdA,KAAKw/B,MAAQ,IAAIhC,GACzB,CA8iCC,OA9iCAn/B,GAAAigC,EAAA,EAAAl7C,IAAA,mBAAAC,MACD,SAAiB0E,EAAMoY,GAInB,OAHKH,KAAKk/B,cAAcpxC,IAAI/F,IACxBiY,KAAKk/B,cAAcnxC,IAAIhG,EAAM,IAAIy6B,IAE9BxiB,KAAKk/B,cAActxC,IAAI7F,GAAM0b,IAAItD,EAC5C,GAAC,CAAA/c,IAAA,kBAAAC,MACD,SAAgB0E,GAC6C,IAAzD,IAAMs4C,EAAsBrgC,KAAKk/B,cAActxC,IAAI7F,GAAMsZ,EAAA5c,UAAAC,OADpC47C,EAAI,IAAAl5C,MAAAia,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJ++B,EAAI/+B,EAAA,GAAA9c,UAAA8c,GAEzB8+B,GAAuBA,EAAoBhd,OAAMh/B,MAA1Bg8C,EAA8BC,EACzD,GAAC,CAAAl9C,IAAA,eAAAC,MACD,SAAa0E,GACT,OAAOiY,KAAKk/B,cAAcpxC,IAAI/F,EAClC,GAAC,CAAA3E,IAAA,wBAAAC,MACD,SAAsBk7C,EAAWp8B,GAC7BnC,KAAKm/B,eAAepxC,IAAIwwC,EAAWp8B,EACvC,GACA,CAAA/e,IAAA,QAAAC,MAGA,SAAM2J,GAAiC,IAAAwY,EAAA,KAAvBq3B,EAAap4C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GACzB,IAAIub,KAAKhT,SAAT,CEvMZ,IAAsB+N,EFyMViF,KAAK++B,OEzMKhkC,EFyMgB/N,aExMRuzC,YAAkC,QAApBxlC,EAAQ+C,QFyMxCkC,KAAKhT,SAAWA,EAChB,IAAAwzC,EAA4CxgC,KAAKlL,QAAzCxJ,EAAQk1C,EAARl1C,SAAU/B,EAAMi3C,EAANj3C,OAAQmC,EAAa80C,EAAb90C,cAU1B,GATIA,IAAkBA,EAAc5B,SAChC4B,EAAcuB,MAAMD,GAExBgT,KAAKuI,KAAKi3B,MAAM/7B,IAAIzD,MACpBA,KAAKrU,QAAUqU,KAAKrU,OAAO6O,SAASiJ,IAAIzD,MACxCA,KAAKu+B,WAAav+B,KAAKuI,KAAK42B,eAAet7B,OAAO7D,KAAKu+B,WACnD1B,IAAkBtzC,GAAU+B,KAC5B0U,KAAK68B,eAAgB,GAErBoB,EAAsB,CACtB,IAAIwC,EACEC,EAAsB,WAAH,OAAUl7B,EAAK+C,KAAKu2B,uBAAwB,CAAK,EAC1Eb,EAAqBjxC,GAAU,WAC3BwY,EAAK+C,KAAKu2B,uBAAwB,EAClC2B,GAAeA,IACfA,EGtNpB,SAAen9B,EAAUq9B,GACrB,IAAMp5C,EAAQmzB,YAAYD,MACpBmmB,EAAe,SAAfA,EAAYp2C,GAAsB,IAC9B4yB,EADuB5yB,EAAT+X,UACQhb,EACxB61B,GAAWujB,IACXv8B,GAAWyf,KAAK+c,GAChBt9B,EAAS8Z,EAAUujB,GAE3B,EAEA,OADA38B,GAAK6f,KAAK+c,GAAc,GACjB,kBAAMx8B,GAAWyf,KAAK+c,EAAa,CAC9C,CH2MkCvlB,CAAMqlB,EAAqB,KACrC32C,EAAsBC,yBACtBD,EAAsBC,wBAAyB,EAC/Cwb,EAAKg6B,MAAM56C,QAAQi8C,IAE3B,GACJ,CACIv1C,GACA0U,KAAKuI,KAAKu4B,mBAAmBx1C,EAAU0U,OAGd,IAAzBA,KAAKlL,QAAQjN,SACb6D,IACCJ,GAAY/B,IACbyW,KAAKK,iBAAiB,aAAa,SAAAjT,GAA+E,IAA5EkV,EAAKlV,EAALkV,MAAO4yB,EAAgB9nC,EAAhB8nC,iBAAkB6L,EAAwB3zC,EAAxB2zC,yBAAkCC,EAAS5zC,EAAjB7D,OACrF,GAAIic,EAAKy7B,yBAGL,OAFAz7B,EAAKjhB,YAASe,OACdkgB,EAAK07B,oBAAiB57C,GAI1B,IAAM67C,EAAmB37B,EAAK1Q,QAAQ0I,YAClC9R,EAAc2zB,wBACd+hB,GACJC,EAA+D31C,EAAcoZ,WAArEw8B,EAAsBD,EAAtBC,uBAAwBC,EAAyBF,EAAzBE,0BAK1BC,GAAiBh8B,EAAKi8B,eACvB5F,GAAUr2B,EAAKi8B,aAAcT,IAC9BD,EAMEW,GAAgCxM,GAAoB6L,EAC1D,GAAIv7B,EAAK1Q,QAAQ6sC,YACZn8B,EAAKg3B,YAAch3B,EAAKg3B,WAAWxvC,UACpC00C,GACCxM,IACIsM,IAAkBh8B,EAAKm0B,kBAAoB,CAC5Cn0B,EAAKg3B,aACLh3B,EAAKw3B,aAAex3B,EAAKg3B,WACzBh3B,EAAKw3B,aAAaA,kBAAe13C,GAErCkgB,EAAKo8B,mBAAmBt/B,EAAOo/B,GAC/B,IAAMG,GAAgB92C,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACfg2B,GAAmBogB,EAAkB,WAAS,IACjDnlB,OAAQslB,EACRplB,WAAYqlB,KAEZ71C,EAAc46B,oBACd9gB,EAAK1Q,QAAQ6sC,cACbE,EAAiBxmB,MAAQ,EACzBwmB,EAAiBryC,MAAO,GAE5BgW,EAAK2e,eAAe0d,EACxB,MAOS3M,GAC0B,IAA3B1vB,EAAKy6B,mBACLY,GAAgBr7B,GAEhBA,EAAKo0B,UAAYp0B,EAAK1Q,QAAQw1B,gBAC9B9kB,EAAK1Q,QAAQw1B,iBAGrB9kB,EAAKi8B,aAAeT,CACxB,GA9FM,CAgGd,GAAC,CAAA59C,IAAA,UAAAC,MACD,WACI2c,KAAKlL,QAAQxJ,UAAY0U,KAAKq5B,aAC9Br5B,KAAKuI,KAAKi3B,MAAMjZ,OAAOvmB,MACvB,IAAMw5B,EAAQx5B,KAAKy5B,WACnBD,GAASA,EAAMjT,OAAOvmB,MACtBA,KAAKrU,QAAUqU,KAAKrU,OAAO6O,SAASqJ,OAAO7D,MAC3CA,KAAKhT,cAAW1H,EAChB8e,GAAW09B,UAAU9hC,KAAKs/B,iBAC9B,GACA,CAAAl8C,IAAA,cAAAC,MACA,WACI2c,KAAK6+B,uBAAwB,CACjC,GAAC,CAAAz7C,IAAA,gBAAAC,MACD,WACI2c,KAAK6+B,uBAAwB,CACjC,GAAC,CAAAz7C,IAAA,kBAAAC,MACD,WACI,OAAO2c,KAAK6+B,uBAAyB7+B,KAAK8+B,qBAC9C,GAAC,CAAA17C,IAAA,yBAAAC,MACD,WACI,OAAQ2c,KAAK+wB,oBACR/wB,KAAKrU,QAAUqU,KAAKrU,OAAOs1C,2BAC5B,CACR,GACA,CAAA79C,IAAA,cAAAC,MACA,WACQ2c,KAAK+hC,oBAET/hC,KAAK48B,YAAa,EAClB58B,KAAKw/B,OAASx/B,KAAKw/B,MAAM56C,QAAQo9C,IACjChiC,KAAKw+B,cACT,GAAC,CAAAp7C,IAAA,uBAAAC,MACD,WACI,IAAQqI,EAAkBsU,KAAKlL,QAAvBpJ,cACR,OAAOA,GAAiBA,EAAcoZ,WAAW/P,iBACrD,GAAC,CAAA3R,IAAA,aAAAC,MACD,WAAyC,IAA9B4+C,IAAqBx9C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,KAAAA,UAAA,GAC5B,GAAIub,KAAKuI,KAAKw5B,kBACV/hC,KAAKlL,QAAQw1B,gBAAkBtqB,KAAKlL,QAAQw1B,sBAIhD,IADCtqB,KAAKuI,KAAKq0B,YAAc58B,KAAKuI,KAAK25B,eAC/BliC,KAAK68B,cAAT,CAEA78B,KAAK68B,eAAgB,EACrB,IAAK,IAAIr4C,EAAI,EAAGA,EAAIwb,KAAKmgC,KAAKz7C,OAAQF,IAAK,CACvC,IAAM2d,EAAOnC,KAAKmgC,KAAK37C,GACvB2d,EAAK88B,sBAAuB,EAC5B98B,EAAKmyB,aAAa,YACdnyB,EAAKrN,QAAQ6sC,YACbx/B,EAAKk3B,YAAW,EAExB,CACA,IAAA8I,EAA6BniC,KAAKlL,QAA1BxJ,EAAQ62C,EAAR72C,SAAU/B,EAAM44C,EAAN54C,OAClB,QAAiBjE,IAAbgG,GAA2B/B,EAA/B,CAEA,IAAMwL,EAAoBiL,KAAKoiC,uBAC/BpiC,KAAKqiC,2BAA6BttC,EAC5BA,EAAkBiL,KAAKnL,aAAc,SACrCvP,EACN0a,KAAKsiC,iBACLL,GAAyBjiC,KAAKuiC,gBAAgB,aANpC,CAZA,CAmBd,GACA,CAAAn/C,IAAA,YAAAC,MACA,WAKI,GAJyB2c,KAAK+hC,kBAQ1B,OAHA/hC,KAAKwiC,gBACLxiC,KAAKq/B,yBACLr/B,KAAKw/B,MAAM56C,QAAQ69C,IAGlBziC,KAAK48B,aAEV58B,KAAK48B,YAAa,EAOd58B,KAAKm/B,eAAe9sC,OACpB2N,KAAKm/B,eAAev6C,QAAQ89C,IAC5B1iC,KAAKm/B,eAAenb,SAKxBhkB,KAAKw/B,MAAM56C,QAAQ+9C,IAKnB3iC,KAAKw/B,MAAM56C,QAAQ2vC,IAKnBv0B,KAAKw/B,MAAM56C,QAAQg+C,IACnB5iC,KAAKq/B,oBAELh7B,GAAUlY,SACVkY,GAAUy9B,YACVz9B,GAAUjY,SACd,GAAC,CAAAhJ,IAAA,oBAAAC,MACD,WACI2c,KAAKw/B,MAAM56C,QAAQi+C,IACnB7iC,KAAKkgC,YAAYt7C,QAAQk+C,GAC7B,GAAC,CAAA1/C,IAAA,2BAAAC,MACD,WACI2gB,GAAK89B,UAAU9hC,KAAKs/B,kBAAkB,GAAO,EACjD,GAAC,CAAAl8C,IAAA,4BAAAC,MACD,WAA4B,IAAA+gC,EAAA,KAMxBpgB,GAAKkf,YAAW,WACRkB,EAAKyY,cACLzY,EAAK7b,KAAKywB,YAGV5U,EAAK7b,KAAK62B,mBAElB,GACJ,GACA,CAAAh8C,IAAA,iBAAAC,MAGA,YACQ2c,KAAK08B,UAAa18B,KAAKhT,WAE3BgT,KAAK08B,SAAW18B,KAAK+iC,UACzB,GAAC,CAAA3/C,IAAA,eAAAC,MACD,WACI,GAAK2c,KAAKhT,WAGVgT,KAAKs0B,eACCt0B,KAAKlL,QAAQkuC,qBAAuBhjC,KAAK45B,UAC1C55B,KAAK68B,eADV,CAWA,GAAI78B,KAAKw8B,aAAex8B,KAAKw8B,WAAWxvC,SACpC,IAAK,IAAIxI,EAAI,EAAGA,EAAIwb,KAAKmgC,KAAKz7C,OAAQF,IAAK,CAC1Bwb,KAAKmgC,KAAK37C,GAClB8vC,cACT,CAEJ,IAAM2O,EAAajjC,KAAKzW,OACxByW,KAAKzW,OAASyW,KAAK+iC,SAAQ,GAC3B/iC,KAAKkjC,gBAAkBhV,KACvBluB,KAAK68B,eAAgB,EACrB78B,KAAK+3B,qBAAkBzyC,EACvB0a,KAAKuiC,gBAAgB,UAAWviC,KAAKzW,OAAO2nC,WAC5C,IAAQxlC,EAAkBsU,KAAKlL,QAAvBpJ,cACRA,GACIA,EAAc23B,OAAO,gBAAiBrjB,KAAKzW,OAAO2nC,UAAW+R,EAAaA,EAAW/R,eAAY5rC,EAtBrG,CAuBJ,GAAC,CAAAlC,IAAA,eAAAC,MACD,WAAgC,IAAnB8/C,EAAK1+C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,UACb2+C,EAAmBn7C,QAAQ+X,KAAKlL,QAAQuuC,cAAgBrjC,KAAKhT,UAC7DgT,KAAK+yB,QACL/yB,KAAK+yB,OAAOyL,cAAgBx+B,KAAKuI,KAAKi2B,aACtCx+B,KAAK+yB,OAAOoQ,QAAUA,IACtBC,GAAmB,GAEnBA,IACApjC,KAAK+yB,OAAS,CACVyL,YAAax+B,KAAKuI,KAAKi2B,YACvB2E,MAAAA,EACAG,OAAQlF,EAAkBp+B,KAAKhT,UAC/BmL,OAAQgmC,EAAcn+B,KAAKhT,WAGvC,GAAC,CAAA5J,IAAA,iBAAAC,MACD,WACI,GAAKg7C,EAAL,CAEA,IAAMkF,EAAmBvjC,KAAK68B,eAAiB78B,KAAKi/B,qBAC9CuE,EAAgBxjC,KAAK+3B,kBAAoB6D,GAAY57B,KAAK+3B,iBAC1DhjC,EAAoBiL,KAAKoiC,uBACzBqB,EAAyB1uC,EACzBA,EAAkBiL,KAAKnL,aAAc,SACrCvP,EACAo+C,EAA8BD,IAA2BzjC,KAAKqiC,2BAChEkB,IACCC,GACGruC,GAAa6K,KAAKnL,eAClB6uC,KACJrF,EAAer+B,KAAKhT,SAAUy2C,GAC9BzjC,KAAKi/B,sBAAuB,EAC5Bj/B,KAAKg8B,iBAdC,CAgBd,GAAC,CAAA54C,IAAA,UAAAC,MACD,WAAgC,IA66BtByrC,EA76BF6U,IAAel/C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,KAAAA,UAAA,GACbm/C,EAAU5jC,KAAKgzB,iBACjB9B,EAAYlxB,KAAK6jC,oBAAoBD,GAUzC,OAJID,IACAzS,EAAYlxB,KAAK2jC,gBAAgBzS,IAq6B7C4S,IADchV,EAl6BGoC,GAm6BHpiC,GACdg1C,GAAUhV,EAAI//B,GAn6BC,CACHyvC,YAAax+B,KAAKuI,KAAKi2B,YACvBuF,YAAaH,EACb1S,UAAAA,EACAr8B,aAAc,CAAC,EACflQ,OAAQqb,KAAK9V,GAErB,GAAC,CAAA9G,IAAA,iBAAAC,MACD,WACI,IAAQqI,EAAkBsU,KAAKlL,QAAvBpJ,cACR,IAAKA,EACD,OAAOwiC,KACX,IAAMY,EAAMpjC,EAAcgkC,qBAElBqD,EAAW/yB,KAAKuI,KAAhBwqB,OAKR,OAJIA,IACA9D,GAAcH,EAAIhgC,EAAGikC,EAAO56B,OAAOrJ,GACnCmgC,GAAcH,EAAI//B,EAAGgkC,EAAO56B,OAAOpJ,IAEhC+/B,CACX,GAAC,CAAA1rC,IAAA,sBAAAC,MACD,SAAoByrC,GAChB,IAAMkV,EAAmB9V,KACzBiN,GAAY6I,EAAkBlV,GAK9B,IAAK,IAAItqC,EAAI,EAAGA,EAAIwb,KAAKmgC,KAAKz7C,OAAQF,IAAK,CACvC,IAAM2d,EAAOnC,KAAKmgC,KAAK37C,GACfuuC,EAAoB5wB,EAApB4wB,OAAQj+B,EAAYqN,EAAZrN,QAChB,GAAIqN,IAASnC,KAAKuI,MAAQwqB,GAAUj+B,EAAQuuC,aAAc,CAKtD,GAAItQ,EAAOuQ,OAAQ,CACfnI,GAAY6I,EAAkBlV,GAC9B,IAAgBmV,EAAejkC,KAAKuI,KAA5BwqB,OAKJkR,IACAhV,GAAc+U,EAAiBl1C,GAAIm1C,EAAW9rC,OAAOrJ,GACrDmgC,GAAc+U,EAAiBj1C,GAAIk1C,EAAW9rC,OAAOpJ,GAE7D,CACAkgC,GAAc+U,EAAiBl1C,EAAGikC,EAAO56B,OAAOrJ,GAChDmgC,GAAc+U,EAAiBj1C,EAAGgkC,EAAO56B,OAAOpJ,EACpD,CACJ,CACA,OAAOi1C,CACX,GAAC,CAAA5gD,IAAA,iBAAAC,MACD,SAAeyrC,GAA4B,IAAvBoV,EAAaz/C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GACvB0/C,EAAiBjW,KACvBiN,GAAYgJ,EAAgBrV,GAC5B,IAAK,IAAItqC,EAAI,EAAGA,EAAIwb,KAAKmgC,KAAKz7C,OAAQF,IAAK,CACvC,IAAM2d,EAAOnC,KAAKmgC,KAAK37C,IAClB0/C,GACD/hC,EAAKrN,QAAQuuC,cACblhC,EAAK4wB,QACL5wB,IAASA,EAAKoG,MACdknB,GAAa0U,EAAgB,CACzBr1C,GAAIqT,EAAK4wB,OAAO56B,OAAOrJ,EACvBC,GAAIoT,EAAK4wB,OAAO56B,OAAOpJ,IAG1BoG,GAAagN,EAAKtN,eAEvB46B,GAAa0U,EAAgBhiC,EAAKtN,aACtC,CAIA,OAHIM,GAAa6K,KAAKnL,eAClB46B,GAAa0U,EAAgBnkC,KAAKnL,cAE/BsvC,CACX,GAAC,CAAA/gD,IAAA,kBAAAC,MACD,SAAgByrC,GACZ,IAAMsV,EAAsBlW,KAC5BiN,GAAYiJ,EAAqBtV,GACjC,IAAK,IAAItqC,EAAI,EAAGA,EAAIwb,KAAKmgC,KAAKz7C,OAAQF,IAAK,CACvC,IAAM2d,EAAOnC,KAAKmgC,KAAK37C,GACvB,GAAK2d,EAAKnV,UAELmI,GAAagN,EAAKtN,cAAvB,CAEAy5B,GAASnsB,EAAKtN,eAAiBsN,EAAKmgC,iBACpC,IAAM5G,EAAYxN,KAElBiN,GAAYO,EADIv5B,EAAK6wB,kBAErByI,GAAoB2I,EAAqBjiC,EAAKtN,aAAcsN,EAAKu6B,SAAWv6B,EAAKu6B,SAASxL,eAAY5rC,EAAWo2C,EALrG,CAMhB,CAIA,OAHIvmC,GAAa6K,KAAKnL,eAClB4mC,GAAoB2I,EAAqBpkC,KAAKnL,cAE3CuvC,CACX,GAAC,CAAAhhD,IAAA,iBAAAC,MACD,SAAeif,GACXtC,KAAKqkC,YAAc/hC,EACnBtC,KAAKuI,KAAK+7B,2BACVtkC,KAAK0+B,mBAAoB,CAC7B,GAAC,CAAAt7C,IAAA,aAAAC,MACD,SAAWyR,GACPkL,KAAKlL,SAAO/J,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACLiV,KAAKlL,SACLA,GAAO,IACVgoC,eAAiCx3C,IAAtBwP,EAAQgoC,WAA0BhoC,EAAQgoC,WAE7D,GAAC,CAAA15C,IAAA,oBAAAC,MACD,WACI2c,KAAK+yB,YAASztC,EACd0a,KAAKzW,YAASjE,EACd0a,KAAK08B,cAAWp3C,EAChB0a,KAAKqiC,gCAA6B/8C,EAClC0a,KAAKqkC,iBAAc/+C,EACnB0a,KAAKzb,YAASe,EACd0a,KAAK68B,eAAgB,CACzB,GAAC,CAAAz5C,IAAA,qBAAAC,MACD,WAA+C,IACvCsU,EADW4sC,EAAkB9/C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GAO3By3C,EAAOl8B,KAAKwkC,UAClBxkC,KAAK0+B,oBAAsB1+B,KAAK0+B,kBAAoBxC,EAAKwC,mBACzD1+B,KAAK4+B,mBAAqB5+B,KAAK4+B,iBAAmB1C,EAAK0C,kBACvD5+B,KAAK2+B,0BAA4B3+B,KAAK2+B,wBAA0BzC,EAAKyC,yBACrE,IAAM8F,EAAWx8C,QAAQ+X,KAAKg9B,eAAiBh9B,OAASk8B,EAUxD,MALkBqI,GACbE,GAAYzkC,KAAK2+B,yBAClB3+B,KAAK0+B,oBACmB,QAAtB/mC,EAAKqI,KAAKrU,cAA2B,IAAPgM,OAAgB,EAASA,EAAG+mC,oBAC5D1+B,KAAK0kC,gCACT,CAEA,IAAAC,EAA6B3kC,KAAKlL,QAA1BvL,EAAMo7C,EAANp7C,OAAQ+B,EAAQq5C,EAARr5C,SAIhB,GAAK0U,KAAKzW,SAAYA,GAAU+B,GAAhC,CASA,GAPA0U,KAAK4kC,yBAA2BviC,GAAUE,WAOrCvC,KAAKqkC,cAAgBrkC,KAAKkhC,eAAgB,CAE3C,IAAM2D,EAAiB7kC,KAAK8kC,6BACxBD,GAAkBA,EAAet7C,QACjCyW,KAAK6kC,eAAiBA,EACtB7kC,KAAKkhC,eAAiBhT,KACtBluB,KAAK+kC,qBAAuB7W,KAC5Bb,GAAqBrtB,KAAK+kC,qBAAsB/kC,KAAKzW,OAAO2nC,UAAW2T,EAAet7C,OAAO2nC,WAC7FiK,GAAYn7B,KAAKkhC,eAAgBlhC,KAAK+kC,uBAGtC/kC,KAAK6kC,eAAiB7kC,KAAKkhC,oBAAiB57C,CAEpD,CAKA,GAAK0a,KAAKkhC,gBAAmBlhC,KAAKqkC,YAAlC,CzBnpBZ,IAAyB9/C,EAAQ4oC,EAAUxhC,EyBqsB/B,GA7CKqU,KAAKzb,SACNyb,KAAKzb,OAAS2pC,KACdluB,KAAKglC,qBAAuB9W,MAK5BluB,KAAKkhC,gBACLlhC,KAAK+kC,sBACL/kC,KAAK6kC,gBACL7kC,KAAK6kC,eAAetgD,QAOhByb,KAAK6kC,eAAeD,2BACpBviC,GAAUE,WACVvC,KAAK6kC,eAAenF,oBAAmB,GzB3qBlCn7C,EyB6qBOyb,KAAKzb,OzB7qBJ4oC,EyB6qBYntB,KAAKkhC,ezB7qBPv1C,EyB6qBuBqU,KAAK6kC,eAAetgD,OzB5qBlF2oC,GAAiB3oC,EAAOuK,EAAGq+B,EAASr+B,EAAGnD,EAAOmD,GAC9Co+B,GAAiB3oC,EAAOwK,EAAGo+B,EAASp+B,EAAGpD,EAAOoD,IyBgrB7BiR,KAAKqkC,aACNp8C,QAAQ+X,KAAKg9B,cAEbh9B,KAAKzb,OAASyb,KAAKilC,eAAejlC,KAAKzW,OAAO2nC,WAG9CiK,GAAYn7B,KAAKzb,OAAQyb,KAAKzW,OAAO2nC,WAEzCrC,GAAc7uB,KAAKzb,OAAQyb,KAAKqkC,cAMhClJ,GAAYn7B,KAAKzb,OAAQyb,KAAKzW,OAAO2nC,WAKrClxB,KAAK0kC,+BAAgC,CACrC1kC,KAAK0kC,gCAAiC,EACtC,IAAMG,EAAiB7kC,KAAK8kC,6BACxBD,GACA58C,QAAQ48C,EAAe7H,gBACnB/0C,QAAQ+X,KAAKg9B,gBAChB6H,EAAe/vC,QAAQuuC,cACxBwB,EAAetgD,QACfyb,KAAK6kC,eAAiBA,EACtB7kC,KAAKkhC,eAAiBhT,KACtBluB,KAAK+kC,qBAAuB7W,KAC5Bb,GAAqBrtB,KAAK+kC,qBAAsB/kC,KAAKzb,OAAQsgD,EAAetgD,QAC5E42C,GAAYn7B,KAAKkhC,eAAgBlhC,KAAK+kC,uBAGtC/kC,KAAK6kC,eAAiB7kC,KAAKkhC,oBAAiB57C,CAEpD,CAIAs4C,GAAoBE,sBAtEV,CA3BA,CANA,CAwGd,GAAC,CAAA16C,IAAA,6BAAAC,MACD,WACI,GAAK2c,KAAKrU,SACN2iC,GAAStuB,KAAKrU,OAAOkJ,gBACrB05B,GAAevuB,KAAKrU,OAAOkJ,cAG/B,OAAImL,KAAKrU,OAAOu5C,eACLllC,KAAKrU,OAGLqU,KAAKrU,OAAOm5C,4BAE3B,GAAC,CAAA1hD,IAAA,eAAAC,MACD,WACI,OAAO4E,SAAS+X,KAAKkhC,gBACjBlhC,KAAKqkC,aACLrkC,KAAKlL,QAAQ6sC,aACb3hC,KAAKzW,OACb,GAAC,CAAAnG,IAAA,iBAAAC,MACD,WACI,IAAIsU,EACEukC,EAAOl8B,KAAKwkC,UACZC,EAAWx8C,QAAQ+X,KAAKg9B,eAAiBh9B,OAASk8B,EACpDiJ,GAAU,EAuBd,IAlBInlC,KAAK0+B,oBAA6C,QAAtB/mC,EAAKqI,KAAKrU,cAA2B,IAAPgM,OAAgB,EAASA,EAAG+mC,sBACtFyG,GAAU,GAMVV,IACCzkC,KAAK2+B,yBAA2B3+B,KAAK4+B,oBACtCuG,GAAU,GAMVnlC,KAAK4kC,2BAA6BviC,GAAUE,YAC5C4iC,GAAU,IAEVA,EAAJ,CAEA,IAAAC,EAA6BplC,KAAKlL,QAA1BvL,EAAM67C,EAAN77C,OAAQ+B,EAAQ85C,EAAR95C,SAWhB,GANA0U,KAAKy+B,gBAAkBx2C,QAAS+X,KAAKrU,QAAUqU,KAAKrU,OAAO8yC,iBACvDz+B,KAAK25B,kBACL35B,KAAKqlC,kBACJrlC,KAAKy+B,kBACNz+B,KAAKqkC,YAAcrkC,KAAKkhC,oBAAiB57C,GAExC0a,KAAKzW,SAAYA,GAAU+B,GAAhC,CAMA6vC,GAAYn7B,KAAKkjC,gBAAiBljC,KAAKzW,OAAO2nC,WnBhxB1D,SAAyBpC,EAAKgJ,EAAWwN,GAAsC,IAA5BC,EAAkB9gD,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GAC3D+gD,EAAaF,EAAS5gD,OAC5B,GAAK8gD,EAAL,CAIA,IAAIrjC,EACAG,EAFJw1B,EAAUhpC,EAAIgpC,EAAU/oC,EAAI,EAG5B,IAAK,IAAIvK,EAAI,EAAGA,EAAIghD,EAAYhhD,IAAK,CAEjC8d,GADAH,EAAOmjC,EAAS9gD,IACHuzC,gBAKb,IAAM/qC,EAAWmV,EAAKnV,SAClBA,GACAA,EAASgI,OACkB,aAA3BhI,EAASgI,MAAMywC,UAGfF,GACApjC,EAAKrN,QAAQuuC,cACblhC,EAAK4wB,QACL5wB,IAASA,EAAKoG,MACdknB,GAAaX,EAAK,CACdhgC,GAAIqT,EAAK4wB,OAAO56B,OAAOrJ,EACvBC,GAAIoT,EAAK4wB,OAAO56B,OAAOpJ,IAG3BuT,IAEAw1B,EAAUhpC,GAAKwT,EAAMxT,EAAEoB,MACvB4nC,EAAU/oC,GAAKuT,EAAMvT,EAAEmB,MAEvB2+B,GAAcC,EAAKxsB,IAEnBijC,GAAsBpwC,GAAagN,EAAKtN,eACxC46B,GAAaX,EAAK3sB,EAAKtN,cAE/B,CAKAijC,EAAUhpC,EAAIigC,GAAc+I,EAAUhpC,GACtCgpC,EAAU/oC,EAAIggC,GAAc+I,EAAU/oC,EA3C5B,CA4Cd,CmBsuBY22C,CAAgB1lC,KAAKkjC,gBAAiBljC,KAAK83B,UAAW93B,KAAKmgC,KAAMsE,GACjE,IAAQlgD,EAAW23C,EAAX33C,OACR,GAAKA,EAAL,CAEKyb,KAAK+3B,kBACN/3B,KAAK+3B,gBAAkB9J,KACvBjuB,KAAK2lC,6BAA+B1X,MAExC,IAAM2X,EAAiB5lC,KAAK83B,UAAUhpC,EAChC+2C,EAAiB7lC,KAAK83B,UAAU/oC,EAChC+2C,EAA0B9lC,KAAK+lC,oBAUrC9Y,GAAajtB,KAAK+3B,gBAAiB/3B,KAAKkjC,gBAAiB3+C,EAAQyb,KAAKnL,cACtEmL,KAAK+lC,oBAAsB9I,GAAyBj9B,KAAK+3B,gBAAiB/3B,KAAK83B,WAC3E93B,KAAK+lC,sBAAwBD,GAC7B9lC,KAAK83B,UAAUhpC,IAAM82C,GACrB5lC,KAAK83B,UAAU/oC,IAAM82C,IACrB7lC,KAAK+/B,cAAe,EACpB//B,KAAKg8B,iBACLh8B,KAAKuiC,gBAAgB,mBAAoBh+C,IAK7Cq5C,GAAoBG,wBA7BV,CAbA,CAbA,CAwDd,GAAC,CAAA36C,IAAA,OAAAC,MACD,WACI2c,KAAKggC,WAAY,CAErB,GAAC,CAAA58C,IAAA,OAAAC,MACD,WACI2c,KAAKggC,WAAY,CAErB,GAAC,CAAA58C,IAAA,iBAAAC,MACD,WAAiC,IAAlB2iD,IAASvhD,UAAAC,OAAA,QAAAY,IAAAb,UAAA,KAAAA,UAAA,GAEpB,GADAub,KAAKlL,QAAQknC,gBAAkBh8B,KAAKlL,QAAQknC,iBACxCgK,EAAW,CACX,IAAMxM,EAAQx5B,KAAKy5B,WACnBD,GAASA,EAAMwC,gBACnB,CACIh8B,KAAKg9B,eAAiBh9B,KAAKg9B,aAAahwC,WACxCgT,KAAKg9B,kBAAe13C,EAE5B,GAAC,CAAAlC,IAAA,qBAAAC,MACD,SAAmBif,GAA6C,IAAAsxB,EAAA,KAAtC8N,EAA4Bj9C,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GAC5Ci4C,EAAW18B,KAAK08B,SAChBuJ,EAAuBvJ,EACvBA,EAAS7nC,aACT,CAAC,EACDqxC,GAAWn7C,EAAAA,EAAAA,GAAA,GAAQiV,KAAKnL,cACxBwvC,EAAcpW,KACfjuB,KAAK6kC,gBACL7kC,KAAK6kC,eAAe/vC,QAAQ6sC,aAC7B3hC,KAAKkhC,eAAiBlhC,KAAK+kC,0BAAuBz/C,GAEtD0a,KAAK0kC,gCAAkChD,EACvC,IAWIyE,EAXEC,EAAiBlY,KAGjBmY,GAFiB3J,EAAWA,EAAS/3C,YAASW,MAC/B0a,KAAKzW,OAASyW,KAAKzW,OAAO5E,YAASW,GAElDk0C,EAAQx5B,KAAKy5B,WACb6M,GAAgB9M,GAASA,EAAME,QAAQh1C,QAAU,EACjD6hD,EAAyBt+C,QAAQo+C,IAClCC,IAC0B,IAA3BtmC,KAAKlL,QAAQgoC,YACZ98B,KAAKmgC,KAAKr4C,KAAK0+C,KACpBxmC,KAAKigC,kBAAoB,EAEzBjgC,KAAKymC,eAAiB,SAACtsB,GACnB,IAyfAtJ,EAAQlG,EAAMmE,EAAI3oB,EAzfZ4oB,EAAWoL,EAAS,IAC1BusB,GAAarC,EAAYv1C,EAAGwT,EAAMxT,EAAGigB,GACrC23B,GAAarC,EAAYt1C,EAAGuT,EAAMvT,EAAGggB,GACrC6kB,EAAK+S,eAAetC,GAChBzQ,EAAKsN,gBACLtN,EAAKmR,sBACLnR,EAAKrqC,QACLqqC,EAAKiR,gBACLjR,EAAKiR,eAAet7C,SACpB8jC,GAAqB+Y,EAAgBxS,EAAKrqC,OAAO2nC,UAAW0C,EAAKiR,eAAet7C,OAAO2nC,WAgf3FrgB,EA/eW+iB,EAAKsN,eA+eRv2B,EA/ewBipB,EAAKmR,qBA+evBj2B,EA/e6Cs3B,EA+ezCjgD,EA/eyD4oB,EAgfvF63B,GAAQ/1B,EAAO/hB,EAAG6b,EAAK7b,EAAGggB,EAAGhgB,EAAG3I,GAChCygD,GAAQ/1B,EAAO9hB,EAAG4b,EAAK5b,EAAG+f,EAAG/f,EAAG5I,GA5eZggD,GACAtK,GAAUjI,EAAKsN,eAAgBiF,KAC/BvS,EAAK8K,mBAAoB,GAExByH,IACDA,EAAqBjY,MACzBiN,GAAYgL,EAAoBvS,EAAKsN,iBAErCmF,IACAzS,EAAK+I,gBAAkBuJ,ERx5B3C,SAAmB3hD,EAAQsiD,EAAQ3K,EAAMntB,EAAUw3B,EAAwBD,GACnEC,GACAhiD,EAAO4P,QAAUiI,GAAI,OAEJ9W,IAAjB42C,EAAK/nC,QAAwB+nC,EAAK/nC,QAAU,EAAG2mC,GAAgB/rB,IAC/DxqB,EAAOuiD,YAAc1qC,QAAuB9W,IAAnBuhD,EAAO1yC,QAAwB0yC,EAAO1yC,QAAU,EAAG,EAAG6mC,GAAiBjsB,KAE3Fu3B,IACL/hD,EAAO4P,QAAUiI,QAAuB9W,IAAnBuhD,EAAO1yC,QAAwB0yC,EAAO1yC,QAAU,OAAoB7O,IAAjB42C,EAAK/nC,QAAwB+nC,EAAK/nC,QAAU,EAAG4a,IAK3H,IAAK,IAAIvqB,EAAI,EAAGA,EAAIi2C,GAAYj2C,IAAK,CACjC,IAAMuiD,EAAc,SAAHr/C,OAAY8yC,GAAQh2C,GAAE,UACnCwiD,EAAepM,GAAUiM,EAAQE,GACjCE,EAAarM,GAAUsB,EAAM6K,QACZzhD,IAAjB0hD,QAA6C1hD,IAAf2hD,IAElCD,IAAiBA,EAAe,GAChCC,IAAeA,EAAa,GACI,IAAjBD,GACI,IAAfC,GACAtM,GAAKqM,KAAkBrM,GAAKsM,IAE5B1iD,EAAOwiD,GAAel3C,KAAKD,IAAIwM,GAAIs+B,GAASsM,GAAetM,GAASuM,GAAal4B,GAAW,IACxFhe,GAAQ3C,KAAK64C,IAAel2C,GAAQ3C,KAAK44C,MACzCziD,EAAOwiD,IAAgB,MAI3BxiD,EAAOwiD,GAAeE,EAE9B,EAIIJ,EAAOzzC,QAAU8oC,EAAK9oC,UACtB7O,EAAO6O,OAASgJ,GAAIyqC,EAAOzzC,QAAU,EAAG8oC,EAAK9oC,QAAU,EAAG2b,GAElE,CQi3BoBm4B,CAAUhB,EAAaD,EAAsBrS,EAAK/+B,aAAcka,EAAUw3B,EAAwBD,IAEtG1S,EAAKrrB,KAAK+7B,2BACV1Q,EAAKoI,iBACLpI,EAAKqM,kBAAoBlxB,CAC7B,EACA/O,KAAKymC,eAAezmC,KAAKlL,QAAQ6sC,WAAa,IAAO,EACzD,GAAC,CAAAv+C,IAAA,iBAAAC,MACD,SAAeyR,GAAS,IAAAi/B,EAAA,KACpB/zB,KAAKuiC,gBAAgB,kBACrBviC,KAAK25B,kBAAoB35B,KAAK25B,iBAAiBnf,OAC3Cxa,KAAKg9B,cAAgBh9B,KAAKg9B,aAAarD,kBACvC35B,KAAKg9B,aAAarD,iBAAiBnf,OAEnCxa,KAAKqlC,mBACLjhC,GAAWjY,OAAO6T,KAAKqlC,kBACvBrlC,KAAKqlC,sBAAmB//C,GAO5B0a,KAAKqlC,iBAAmBrhC,GAAK7X,QAAO,WAChCpC,EAAsBC,wBAAyB,EAC/C+pC,EAAK4F,iBIx7BrB,SAA4Bt2C,EAAOyxB,EAAWhgB,GAC1C,IAAMqyC,EAAgBx4C,EAActL,GAASA,EAAQqhC,GAAYrhC,GAEjE,OADA8jD,EAAc5/C,MAAMy5B,GAAmB,GAAImmB,EAAeryB,EAAWhgB,IAC9DqyC,EAAcp+C,SACzB,CJo7BwCq+C,CAAmB,EAAGzJ,IAAe5yC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACtD+J,GAAO,IAEVqnB,SAAU,SAAChC,GACP4Z,EAAK0S,eAAetsB,GACpBrlB,EAAQqnB,UAAYrnB,EAAQqnB,SAAShC,EACzC,EACA+B,WAAY,WACRpnB,EAAQonB,YAAcpnB,EAAQonB,aAC9B6X,EAAKsT,mBACT,KAEAtT,EAAKiJ,eACLjJ,EAAKiJ,aAAarD,iBAAmB5F,EAAK4F,kBAE9C5F,EAAKsR,sBAAmB//C,CAC5B,GACJ,GAAC,CAAAlC,IAAA,oBAAAC,MACD,WACQ2c,KAAKg9B,eACLh9B,KAAKg9B,aAAarD,sBAAmBr0C,EACrC0a,KAAKg9B,aAAaP,qBAAkBn3C,GAExC,IAAMk0C,EAAQx5B,KAAKy5B,WACnBD,GAASA,EAAM8N,wBACftnC,KAAKg9B,aACDh9B,KAAK25B,iBACD35B,KAAK28B,qBACDr3C,EACZ0a,KAAKuiC,gBAAgB,oBACzB,GAAC,CAAAn/C,IAAA,kBAAAC,MACD,WACQ2c,KAAK25B,mBACL35B,KAAKymC,gBAAkBzmC,KAAKymC,eAAe9I,IAC3C39B,KAAK25B,iBAAiBnf,QAE1Bxa,KAAKqnC,mBACT,GAAC,CAAAjkD,IAAA,0BAAAC,MACD,WACI,IAAM64C,EAAOl8B,KAAKwkC,UACZQ,EAAuD9I,EAAvD8I,qBAAsBzgD,EAAiC23C,EAAjC33C,OAAQgF,EAAyB2yC,EAAzB3yC,OAAQsL,EAAiBqnC,EAAjBrnC,aAC5C,GAAKmwC,GAAyBzgD,GAAWgF,EAAzC,CAOA,GAAIyW,OAASk8B,GACTl8B,KAAKzW,QACLA,GACAg+C,GAA0BvnC,KAAKlL,QAAQ0yC,cAAexnC,KAAKzW,OAAO2nC,UAAW3nC,EAAO2nC,WAAY,CAChG3sC,EAASyb,KAAKzb,QAAU2pC,KACxB,IAAMuZ,EAAU/a,GAAW1sB,KAAKzW,OAAO2nC,UAAUpiC,GACjDvK,EAAOuK,EAAEa,IAAMusC,EAAK33C,OAAOuK,EAAEa,IAC7BpL,EAAOuK,EAAEc,IAAMrL,EAAOuK,EAAEa,IAAM83C,EAC9B,IAAMC,EAAUhb,GAAW1sB,KAAKzW,OAAO2nC,UAAUniC,GACjDxK,EAAOwK,EAAEY,IAAMusC,EAAK33C,OAAOwK,EAAEY,IAC7BpL,EAAOwK,EAAEa,IAAMrL,EAAOwK,EAAEY,IAAM+3C,CAClC,CACAvM,GAAY6J,EAAsBzgD,GAMlCkrC,GAAauV,EAAsBnwC,GAOnCo4B,GAAajtB,KAAK2lC,6BAA8B3lC,KAAKkjC,gBAAiB8B,EAAsBnwC,EA/BlF,CAgCd,GAAC,CAAAzR,IAAA,qBAAAC,MACD,SAAmBiI,EAAU6W,GACpBnC,KAAKkgC,YAAYpyC,IAAIxC,IACtB0U,KAAKkgC,YAAYnyC,IAAIzC,EAAU,IAAIywC,IAEzB/7B,KAAKkgC,YAAYtyC,IAAItC,GAC7BmY,IAAItB,GACV,IAAMzF,EAASyF,EAAKrN,QAAQ6yC,uBAC5BxlC,EAAKm3B,QAAQ,CACT97B,WAAYd,EAASA,EAAOc,gBAAalY,EACzCg3C,sBAAuB5/B,GAAUA,EAAOkrC,4BAClClrC,EAAOkrC,4BAA4BzlC,QACnC7c,GAEd,GAAC,CAAAlC,IAAA,SAAAC,MACD,WACI,IAAMm2C,EAAQx5B,KAAKy5B,WACnB,OAAOD,GAAQA,EAAM0C,OAASl8B,IAClC,GAAC,CAAA5c,IAAA,UAAAC,MACD,WACI,IAAIsU,EAEJ,OADqBqI,KAAKlL,QAAlBxJ,WACsC,QAA1BqM,EAAKqI,KAAKy5B,kBAA+B,IAAP9hC,OAAgB,EAASA,EAAGukC,OAAgBl8B,IACtG,GAAC,CAAA5c,IAAA,cAAAC,MACD,WACI,IAAIsU,EAEJ,OADqBqI,KAAKlL,QAAlBxJ,SACqC,QAA1BqM,EAAKqI,KAAKy5B,kBAA+B,IAAP9hC,OAAgB,EAASA,EAAGskC,cAAW32C,CAChG,GAAC,CAAAlC,IAAA,WAAAC,MACD,WACI,IAAQiI,EAAa0U,KAAKlL,QAAlBxJ,SACR,GAAIA,EACA,OAAO0U,KAAKuI,KAAK23B,YAAYtyC,IAAItC,EACzC,GAAC,CAAAlI,IAAA,UAAAC,MACD,WAAiE,IAAAikC,EAAA7iC,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAApDu6C,EAAU1X,EAAV0X,WAAYxhC,EAAU8pB,EAAV9pB,WAAY8+B,EAAqBhV,EAArBgV,sBACxB9C,EAAQx5B,KAAKy5B,WACfD,GACAA,EAAMF,QAAQt5B,KAAMs8B,GACpB0C,IACAh/B,KAAK+3B,qBAAkBzyC,EACvB0a,KAAKg/B,YAAa,GAElBxhC,GACAwC,KAAKk5B,WAAW,CAAE17B,WAAAA,GAC1B,GAAC,CAAApa,IAAA,WAAAC,MACD,WACI,IAAMm2C,EAAQx5B,KAAKy5B,WACnB,QAAID,GACOA,EAAMD,SAASv5B,KAK9B,GAAC,CAAA5c,IAAA,gBAAAC,MACD,WACI,IAAQqI,EAAkBsU,KAAKlL,QAAvBpJ,cACR,GAAKA,EAAL,CAGA,IAAIm8C,GAAY,EAKRhzC,EAAiBnJ,EAAjBmJ,aAQR,IAPIA,EAAazB,QACbyB,EAAaxB,SACbwB,EAAavB,SACbuB,EAAatB,WACbs0C,GAAY,GAGXA,EAAL,CAIA,IAFA,IAAMC,EAAc,CAAC,EAEZtjD,EAAI,EAAGA,EAAIk5C,GAAch5C,OAAQF,IAAK,CAC3C,IAAMpB,EAAM,SAAWs6C,GAAcl5C,GAEjCqQ,EAAazR,KACb0kD,EAAY1kD,GAAOyR,EAAazR,GAChCsI,EAAcq8C,eAAe3kD,EAAK,GAE1C,CAKA,IAAK,IAAMA,KAFXsI,EAAcU,SAEI07C,EACdp8C,EAAcq8C,eAAe3kD,EAAK0kD,EAAY1kD,IAIlDsI,EAAcswC,gBApBJ,CAhBA,CAqCd,GAAC,CAAA54C,IAAA,sBAAAC,MACD,WAAoC,IAC5BsU,EAAIqZ,EADQhW,EAASvW,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGvBujD,EAAS,CAAC,EAChB,IAAKhoC,KAAKhT,UAAYgT,KAAK++B,MACvB,OAAOiJ,EACX,IAAKhoC,KAAKggC,UACN,MAAO,CAAEiI,WAAY,UAGrBD,EAAOC,WAAa,GAExB,IAAMlzC,EAAoBiL,KAAKoiC,uBAC/B,GAAIpiC,KAAKg/B,WAQL,OAPAh/B,KAAKg/B,YAAa,EAClBgJ,EAAO7zC,QAAU,GACjB6zC,EAAOE,cACH3rC,GAAmBvB,EAAUktC,gBAAkB,GACnDF,EAAOv4C,UAAYsF,EACbA,EAAkBiL,KAAKnL,aAAc,IACrC,OACCmzC,EAEX,IAAM9L,EAAOl8B,KAAKwkC,UAClB,IAAKxkC,KAAK+3B,kBAAoB/3B,KAAKzW,SAAW2yC,EAAK33C,OAAQ,CACvD,IAAM4jD,EAAc,CAAC,EAerB,OAdInoC,KAAKlL,QAAQxJ,WACb68C,EAAYh0C,aACsB7O,IAA9B0a,KAAKnL,aAAaV,QACZ6L,KAAKnL,aAAaV,QAClB,EACVg0C,EAAYD,cACR3rC,GAAmBvB,EAAUktC,gBAAkB,IAEnDloC,KAAK+/B,eAAiB5qC,GAAa6K,KAAKnL,gBACxCszC,EAAY14C,UAAYsF,EAClBA,EAAkB,CAAC,EAAG,IACtB,OACNiL,KAAK+/B,cAAe,GAEjBoI,CACX,CACA,IAAMC,EAAiBlM,EAAKS,iBAAmBT,EAAKrnC,aACpDmL,KAAKqoC,0BACLL,EAAOv4C,UAAYwtC,GAAyBj9B,KAAK2lC,6BAA8B3lC,KAAK83B,UAAWsQ,GAC3FrzC,IACAizC,EAAOv4C,UAAYsF,EAAkBqzC,EAAgBJ,EAAOv4C,YAEhE,IAAA64C,EAAiBtoC,KAAK+3B,gBAAdjpC,EAACw5C,EAADx5C,EAAGC,EAACu5C,EAADv5C,EA+BX,IAAK,IAAM3L,KA9BX4kD,EAAO9yC,gBAAkB,GAAHxN,OAAiB,IAAXoH,EAAEoJ,OAAY,MAAAxQ,OAAgB,IAAXqH,EAAEmJ,OAAY,OACzDgkC,EAAKS,gBAKLqL,EAAO7zC,QACH+nC,IAASl8B,KACiG,QAAnGgR,EAAuC,QAAjCrZ,EAAKywC,EAAej0C,eAA4B,IAAPwD,EAAgBA,EAAKqI,KAAKnL,aAAaV,eAA4B,IAAP6c,EAAgBA,EAAK,EACjIhR,KAAKy8B,gBACDz8B,KAAKnL,aAAaV,QAClBi0C,EAAetB,YAO7BkB,EAAO7zC,QACH+nC,IAASl8B,UACwB1a,IAA3B8iD,EAAej0C,QACXi0C,EAAej0C,QACf,QAC2B7O,IAA/B8iD,EAAetB,YACXsB,EAAetB,YACf,EAKAz4C,EACd,QAA4B/I,IAAxB8iD,EAAehlD,GAAnB,CAEA,IAAAmlD,EAA6Bl6C,EAAgBjL,GAArCyzC,EAAO0R,EAAP1R,QAASyD,EAAOiO,EAAPjO,QAOXkO,EAAiC,SAArBR,EAAOv4C,UACnB24C,EAAehlD,GACfyzC,EAAQuR,EAAehlD,GAAM84C,GACnC,GAAI5B,EAEA,IADA,IAAMmO,EAAMnO,EAAQ51C,OACXF,EAAI,EAAGA,EAAIikD,EAAKjkD,IACrBwjD,EAAO1N,EAAQ91C,IAAMgkD,OAIzBR,EAAO5kD,GAAOolD,CAlBN,CAgChB,OANIxoC,KAAKlL,QAAQxJ,WACb08C,EAAOE,cACHhM,IAASl8B,KACHzD,GAAmBvB,EAAUktC,gBAAkB,GAC/C,QAEPF,CACX,GAAC,CAAA5kD,IAAA,gBAAAC,MACD,WACI2c,KAAKw8B,WAAax8B,KAAK08B,cAAWp3C,CACtC,GACA,CAAAlC,IAAA,YAAAC,MACA,WACI2c,KAAKuI,KAAKi3B,MAAM56C,SAAQ,SAACud,GAAW,IAAIxK,EAAI,OAAwC,QAAhCA,EAAKwK,EAAKw3B,wBAAqC,IAAPhiC,OAAgB,EAASA,EAAG6iB,MAAQ,IAChIxa,KAAKuI,KAAKi3B,MAAM56C,QAAQ69C,IACxBziC,KAAKuI,KAAK23B,YAAYlc,OAC1B,KAACsa,CAAA,CArrCL,EAurCJ,CACA,SAAS/J,GAAapyB,GAClBA,EAAKoyB,cACT,CACA,SAASqO,GAAmBzgC,GACxB,IAAIxK,EACE+kC,GAAuC,QAA1B/kC,EAAKwK,EAAKq6B,kBAA+B,IAAP7kC,OAAgB,EAASA,EAAG+kC,WAAav6B,EAAKu6B,SACnG,GAAIv6B,EAAKy3B,UACLz3B,EAAK5Y,QACLmzC,GACAv6B,EAAKumC,aAAa,aAAc,CAChC,IAAAC,EAA2DxmC,EAAK5Y,OAA7CA,EAAMo/C,EAAjBzX,UAAgC0X,EAAcD,EAA3B5E,YACnByD,EAAkBrlC,EAAKrN,QAAvB0yC,cACF/C,EAAW/H,EAAS/3C,SAAWwd,EAAK5Y,OAAO5E,OAG3B,SAAlB6iD,EACArZ,IAAS,SAACxB,GACN,IAAMkc,EAAepE,EACf/H,EAASqH,YAAYpX,GACrB+P,EAASxL,UAAUvE,GACnBjoC,EAASgoC,GAAWmc,GAC1BA,EAAal5C,IAAMpG,EAAOojC,GAAMh9B,IAChCk5C,EAAaj5C,IAAMi5C,EAAal5C,IAAMjL,CAC1C,IAEK6iD,GAA0BC,EAAe9K,EAASxL,UAAW3nC,IAClE4kC,IAAS,SAACxB,GACN,IAAMkc,EAAepE,EACf/H,EAASqH,YAAYpX,GACrB+P,EAASxL,UAAUvE,GACnBjoC,EAASgoC,GAAWnjC,EAAOojC,IACjCkc,EAAaj5C,IAAMi5C,EAAal5C,IAAMjL,CAC1C,IAEJ,IAAMokD,EAAc7a,KACpBhB,GAAa6b,EAAav/C,EAAQmzC,EAASxL,WAC3C,IAAM6X,EAAc9a,KAChBwW,EACAxX,GAAa8b,EAAa5mC,EAAK8iC,eAAe2D,GAAgB,GAAOlM,EAASqH,aAG9E9W,GAAa8b,EAAax/C,EAAQmzC,EAASxL,WAE/C,IAAMgE,GAAoB0G,GAAYkN,GAClC/H,GAA2B,EAC/B,IAAK5+B,EAAKq6B,WAAY,CAClB,IAAMqI,EAAiB1iC,EAAK2iC,6BAK5B,GAAID,IAAmBA,EAAerI,WAAY,CAC9C,IAAkBwM,EAAyCnE,EAAnDnI,SAAkCuM,EAAiBpE,EAAzBt7C,OAClC,GAAIy/C,GAAkBC,EAAc,CAChC,IAAMC,EAAmBhb,KACzBb,GAAqB6b,EAAkBxM,EAASxL,UAAW8X,EAAe9X,WAC1E,IAAMkV,EAAiBlY,KACvBb,GAAqB+Y,EAAgB78C,EAAQ0/C,EAAa/X,WACrD2K,GAAUqN,EAAkB9C,KAC7BrF,GAA2B,GAE3B8D,EAAe/vC,QAAQ6sC,aACvBx/B,EAAK++B,eAAiBkF,EACtBjkC,EAAK4iC,qBAAuBmE,EAC5B/mC,EAAK0iC,eAAiBA,EAE9B,CACJ,CACJ,CACA1iC,EAAKogC,gBAAgB,YAAa,CAC9Bh5C,OAAAA,EACAmzC,SAAAA,EACAp6B,MAAOymC,EACPD,YAAAA,EACA5T,iBAAAA,EACA6L,yBAAAA,GAER,MACK,GAAI5+B,EAAKy3B,SAAU,CACpB,IAAQtP,EAAmBnoB,EAAKrN,QAAxBw1B,eACRA,GAAkBA,GACtB,CAMAnoB,EAAKrN,QAAQ0I,gBAAalY,CAC9B,CACA,SAASm6C,GAAoBt9B,GAIzBy7B,GAAoBC,aACf17B,EAAKxW,SAQLwW,EAAK+iC,iBACN/iC,EAAKu8B,kBAAoBv8B,EAAKxW,OAAO+yC,mBAOzCv8B,EAAKw8B,0BAA4Bx8B,EAAKw8B,wBAA0B12C,QAAQka,EAAKu8B,mBACzEv8B,EAAKxW,OAAO+yC,mBACZv8B,EAAKxW,OAAOgzC,0BAChBx8B,EAAKy8B,mBAAqBz8B,EAAKy8B,iBAAmBz8B,EAAKxW,OAAOizC,kBAClE,CACA,SAASgB,GAAgBz9B,GACrBA,EAAKu8B,kBACDv8B,EAAKw8B,wBACDx8B,EAAKy8B,kBACD,CAChB,CACA,SAASiE,GAAc1gC,GACnBA,EAAK0gC,eACT,CACA,SAASJ,GAAkBtgC,GACvBA,EAAKsgC,mBACT,CACA,SAASE,GAAoBxgC,GACzB,IAAQzW,EAAkByW,EAAKrN,QAAvBpJ,cACJA,GAAiBA,EAAcoZ,WAAWqkC,uBAC1Cz9C,EAAc23B,OAAO,uBAEzBlhB,EAAKk8B,gBACT,CACA,SAASwC,GAAgB1+B,GACrBA,EAAK0+B,kBACL1+B,EAAKkiC,YAAcliC,EAAK++B,eAAiB/+B,EAAK5d,YAASe,CAC3D,CACA,SAASo6C,GAAmBv9B,GACxBA,EAAKu9B,oBACT,CACA,SAASC,GAAex9B,GACpBA,EAAKw9B,gBACT,CACA,SAASqC,GAAc7/B,GACnBA,EAAK6/B,eACT,CACA,SAASc,GAAoBtJ,GACzBA,EAAM4P,oBACV,CACA,SAAS1C,GAAa71B,EAAQvO,EAAOnc,GACjC0qB,EAAOmc,UAAY5wB,GAAIkG,EAAM0qB,UAAW,EAAG7mC,GAC3C0qB,EAAO3gB,MAAQkM,GAAIkG,EAAMpS,MAAO,EAAG/J,GACnC0qB,EAAO3Y,OAASoK,EAAMpK,OACtB2Y,EAAOkc,YAAczqB,EAAMyqB,WAC/B,CACA,SAAS6Z,GAAQ/1B,EAAQlG,EAAMmE,EAAI3oB,GAC/B0qB,EAAOlhB,IAAMyM,GAAIuO,EAAKhb,IAAKmf,EAAGnf,IAAKxJ,GACnC0qB,EAAOjhB,IAAMwM,GAAIuO,EAAK/a,IAAKkf,EAAGlf,IAAKzJ,EACvC,CAKA,SAASqgD,GAAoBrkC,GACzB,OAAQA,EAAKw6B,sBAAwDr3C,IAArC6c,EAAKw6B,gBAAgBmK,WACzD,CACA,IAAM1F,GAA0B,CAC5BpsB,SAAU,IACV9I,KAAM,CAAC,GAAK,EAAG,GAAK,IAExB,SAASw2B,GAAevgC,EAAMo8B,GAM1B,IADA,IAAI8K,EAAalnC,EAAKoG,KACb/jB,EAAI2d,EAAKg+B,KAAKz7C,OAAS,EAAGF,GAAK,EAAGA,IACvC,GAAIyD,QAAQka,EAAKg+B,KAAK37C,GAAGwI,UAAW,CAChCq8C,EAAalnC,EAAKg+B,KAAK37C,GACvB,KACJ,CAEJ,IACMuW,GADgBsuC,GAAcA,IAAelnC,EAAKoG,KAAO8gC,EAAWr8C,SAAWvG,UACvD6iD,cAAc,wBAAD5hD,OAAyB62C,EAAS,OACzExjC,GACAoH,EAAKlV,MAAM8N,GAAS,EAC5B,CACA,SAAS+oC,GAAUnX,GACfA,EAAKh9B,IAAME,KAAKQ,MAAMs8B,EAAKh9B,KAC3Bg9B,EAAK/8B,IAAMC,KAAKQ,MAAMs8B,EAAK/8B,IAC/B,CAKA,SAAS23C,GAA0BC,EAAe9K,EAAUnzC,GACxD,MAA0B,aAAlBi+C,GACe,oBAAlBA,IACI5a,GAAOkP,GAAYY,GAAWZ,GAAYvyC,GAAS,GAChE,CKx6CA,IAAMggD,GAAyBvL,GAAqB,CAChDC,qBAAsB,SAACj3C,EAAKq8B,GAAM,OAAKpjB,GAAYjZ,EAAK,SAAUq8B,EAAO,EACzE8a,cAAe,iBAAO,CAClBrvC,EAAGrI,SAAS+iD,gBAAgBC,YAAchjD,SAASijD,KAAKD,WACxD16C,EAAGtI,SAAS+iD,gBAAgBG,WAAaljD,SAASijD,KAAKC,UAC1D,EACDvL,kBAAmB,kBAAM,CAAI,ICN3BvL,GAAqB,CACvB/oC,aAASxE,GAEPskD,GAAqB5L,GAAqB,CAC5CG,cAAe,SAACnxC,GAAQ,MAAM,CAC1B8B,EAAG9B,EAASy8C,WACZ16C,EAAG/B,EAAS28C,UACf,EACDzL,cAAe,WACX,IAAKrL,GAAmB/oC,QAAS,CAC7B,IAAM+/C,EAAe,IAAIN,GAAuB,EAAG,CAAC,GACpDM,EAAa58C,MAAMX,QACnBu9C,EAAa3Q,WAAW,CAAEmK,cAAc,IACxCxQ,GAAmB/oC,QAAU+/C,CACjC,CACA,OAAOhX,GAAmB/oC,OAC9B,EACAu0C,eAAgB,SAACrxC,EAAU3J,GACvB2J,EAASgI,MAAMvF,eAAsBnK,IAAVjC,EAAsBA,EAAQ,MAC7D,EACA+6C,kBAAmB,SAACpxC,GAAQ,OAAK/E,QAAuD,UAA/CqE,OAAOkrC,iBAAiBxqC,GAAU88C,SAAqB,IClB9F7gD,GAAO,CACTI,IAAK,CACD6Y,QAAS6zB,IAEb9sC,KAAM,CACFiZ,QAASuzB,GACT6I,eAAgBsL,GAChBx+C,cAAAA,KCJF2+C,GAAiB,IAAIv7C,IAAI,CAC3B,QACA,SACA,MACA,OACA,QACA,SACA,IACA,MAEEw7C,GAAkB,SAAC5mD,GAAG,OAAK2mD,GAAej8C,IAAI1K,EAAI,EAClD6mD,GAAmB,SAAC1lD,GACtB,OAAOjB,OAAOQ,KAAKS,GAAQuD,KAAKkiD,GACpC,EACME,GAAgB,SAAC/iD,GAAC,OAAKA,IAAM2I,GAAU3I,IAAM6J,EAAE,EAC/Cm5C,GAAmB,SAACC,EAAQC,GAAG,OAAKr6C,WAAWo6C,EAAOv5C,MAAM,MAAMw5C,GAAK,EACvEC,GAAyB,SAACC,EAAMC,GAAI,OAAK,SAACC,EAAKjgD,GAAoB,IAAhBiF,EAASjF,EAATiF,UACrD,GAAkB,SAAdA,IAAyBA,EACzB,OAAO,EACX,IAAMi7C,EAAWj7C,EAAUie,MAAM,sBACjC,GAAIg9B,EACA,OAAOP,GAAiBO,EAAS,GAAIF,GAGrC,IAAMJ,EAAS36C,EAAUie,MAAM,oBAC/B,OAAI08B,EACOD,GAAiBC,EAAO,GAAIG,GAG5B,CAGnB,CAAC,EACKI,GAAgB,IAAIn8C,IAAI,CAAC,IAAK,IAAK,MACnCo8C,GAAgCt8C,EAAmBrK,QAAO,SAACb,GAAG,OAAMunD,GAAc78C,IAAI1K,EAAI,IAehG,IAAMynD,GAAmB,CAErB54C,MAAO,SAAA7E,EAAAk6B,GAAA,IAAGx4B,EAAC1B,EAAD0B,EAACg8C,EAAAxjB,EAAMx0B,YAAAA,OAAW,IAAAg4C,EAAG,IAAGA,EAAAC,EAAAzjB,EAAE10B,aAAAA,OAAY,IAAAm4C,EAAG,IAAGA,EAAA,OAAOj8C,EAAEc,IAAMd,EAAEa,IAAMK,WAAW8C,GAAe9C,WAAW4C,EAAa,EAC/HT,OAAQ,SAAA64C,EAAAC,GAAA,IAAGl8C,EAACi8C,EAADj8C,EAACm8C,EAAAD,EAAMt4C,WAAAA,OAAU,IAAAu4C,EAAG,IAAGA,EAAAC,EAAAF,EAAEp4C,cAAAA,OAAa,IAAAs4C,EAAG,IAAGA,EAAA,OAAOp8C,EAAEa,IAAMb,EAAEY,IAAMK,WAAW2C,GAAc3C,WAAW6C,EAAc,EAChIP,IAAK,SAACm4C,EAAKW,GAAA,IAAI94C,EAAG84C,EAAH94C,IAAG,OAAOtC,WAAWsC,EAAI,EACxCG,KAAM,SAACg4C,EAAKY,GAAA,IAAI54C,EAAI44C,EAAJ54C,KAAI,OAAOzC,WAAWyC,EAAK,EAC3CD,OAAQ,SAAA84C,EAAAC,GAAA,IAAGx8C,EAACu8C,EAADv8C,EAAOuD,EAAGi5C,EAAHj5C,IAAG,OAAOtC,WAAWsC,IAAQvD,EAAEa,IAAMb,EAAEY,IAAI,EAC7D4C,MAAO,SAAAi5C,EAAAC,GAAA,IAAG38C,EAAC08C,EAAD18C,EAAO2D,EAAIg5C,EAAJh5C,KAAI,OAAOzC,WAAWyC,IAAS3D,EAAEc,IAAMd,EAAEa,IAAI,EAE9Db,EAAGw7C,GAAuB,EAAG,IAC7Bv7C,EAAGu7C,GAAuB,EAAG,KA+B3BoB,GAAmC,SAAChgD,EAAenH,GAA4C,IAApC2T,EAAMzT,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG8Y,EAAa9Y,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3FF,GAAMwG,EAAAA,EAAAA,GAAA,GAAQxG,GACdgZ,GAAaxS,EAAAA,EAAAA,GAAA,GAAQwS,GACrB,IAAMouC,EAAuBroD,OAAOQ,KAAKS,GAAQN,OAAO+lD,IAGpD4B,EAAyB,GACzBC,GAAsC,EACpCC,EAAuB,GA4E7B,GA3EAH,EAAqB/mD,SAAQ,SAACxB,GAC1B,IAAMC,EAAQqI,EAAcw5B,SAAS9hC,GACrC,GAAKsI,EAAcu5B,SAAS7hC,GAA5B,CAEA,IAGI2oD,EAHAphC,EAAOzS,EAAO9U,GACd4oD,EAAWnnB,GAAuBla,GAChCmE,EAAKvqB,EAAOnB,GAMlB,GAAI8Y,GAAkB4S,GAAK,CACvB,IAAMm9B,EAAen9B,EAAGpqB,OAClBwnD,EAAsB,OAAVp9B,EAAG,GAAc,EAAI,EACvCnE,EAAOmE,EAAGo9B,GACVF,EAAWnnB,GAAuBla,GAClC,IAAK,IAAInmB,EAAI0nD,EAAW1nD,EAAIynD,EAAcznD,IACjCunD,EAMDzgC,GAAUuZ,GAAuB/V,EAAGtqB,MAAQunD,EAAQ,2CALpDA,EAASlnB,GAAuB/V,EAAGtqB,IACnC8mB,GAAUygC,IAAWC,GAChB9B,GAAc8B,IAAa9B,GAAc6B,GAAU,gEAMpE,MAEIA,EAASlnB,GAAuB/V,GAEpC,GAAIk9B,IAAaD,EAGb,GAAI7B,GAAc8B,IAAa9B,GAAc6B,GAAS,CAClD,IAAMjiD,EAAUzG,EAAMuK,MACC,kBAAZ9D,GACPzG,EAAM0K,IAAIiC,WAAWlG,IAEP,kBAAPglB,EACPvqB,EAAOnB,GAAO4M,WAAW8e,GAEpB1nB,MAAMC,QAAQynB,IAAOi9B,IAAW/6C,KACrCzM,EAAOnB,GAAO0rB,EAAGyB,IAAIvgB,YAE7B,MACuB,OAAbg8C,QAAkC,IAAbA,OAAsB,EAASA,EAASv8C,aACvD,OAAXs8C,QAA8B,IAAXA,OAAoB,EAASA,EAAOt8C,aAC9C,IAATkb,GAAqB,IAAPmE,GAGF,IAATnE,EACAtnB,EAAM0K,IAAIg+C,EAAOt8C,UAAUkb,IAG3BpmB,EAAOnB,GAAO4oD,EAASv8C,UAAUqf,IAMhC+8B,IACDD,EA9HpB,SAAyClgD,GACrC,IAAMygD,EAAoB,GAW1B,OAVAvB,GAA8BhmD,SAAQ,SAACxB,GACnC,IAAMC,EAAQqI,EAAcw5B,SAAS9hC,QACvBkC,IAAVjC,IACA8oD,EAAkB/nD,KAAK,CAAChB,EAAKC,EAAMuK,QACnCvK,EAAM0K,IAAI3K,EAAIsL,WAAW,SAAW,EAAI,GAEhD,IAEIy9C,EAAkBznD,QAClBgH,EAAcU,SACX+/C,CACX,CAkHwBC,CAAgC1gD,GACpCmgD,GAAsC,GAE1CC,EAAqB1nD,KAAKhB,GAC1Bma,EAAcna,QACakC,IAAvBiY,EAAcna,GACRma,EAAcna,GACdmB,EAAOnB,GACjBC,EAAMgpD,KAAKv9B,GApET,CAuEd,IACIg9B,EAAqBpnD,OAAQ,CAC7B,IAAM4nD,EAAUR,EAAqB39C,QAAQ,WAAa,EACpD7B,OAAOigD,YACP,KACAC,EArHmB,SAACjoD,EAAQmH,EAAe+gD,GACrD,IAAMC,EAAahhD,EAAcgkC,qBAC3B30B,EAAUrP,EAAc5B,QACxB6iD,EAAuBnV,iBAAiBz8B,GACtC0qC,EAAYkH,EAAZlH,QACFvtC,EAAS,CAAC,EAGA,SAAZutC,GACA/5C,EAAcq8C,eAAe,UAAWxjD,EAAOkhD,SAAW,SAK9DgH,EAAY7nD,SAAQ,SAACxB,GACjB8U,EAAO9U,GAAOynD,GAAiBznD,GAAKspD,EAAYC,EACpD,IAEAjhD,EAAcU,SACd,IAAMwgD,EAAalhD,EAAcgkC,qBAQjC,OAPA+c,EAAY7nD,SAAQ,SAACxB,GAGjB,IAAMC,EAAQqI,EAAcw5B,SAAS9hC,GACrCC,GAASA,EAAMgpD,KAAKn0C,EAAO9U,IAC3BmB,EAAOnB,GAAOynD,GAAiBznD,GAAKwpD,EAAYD,EACpD,IACOpoD,CACX,CAyFgCsoD,CAAyBtoD,EAAQmH,EAAeogD,GAaxE,OAXIF,EAAuBlnD,QACvBknD,EAAuBhnD,SAAQ,SAAAkoD,GAAkB,IAAAC,GAAAlhC,EAAAA,GAAAA,GAAAihC,EAAA,GAAhB1pD,EAAG2pD,EAAA,GAAE1pD,EAAK0pD,EAAA,GACvCrhD,EAAcw5B,SAAS9hC,GAAK2K,IAAI1K,EACpC,IAGJqI,EAAcU,SAEV5F,GAAyB,OAAZ8lD,GACbhgD,OAAO0gD,SAAS,CAAE16C,IAAKg6C,IAEpB,CAAE/nD,OAAQioD,EAAiBjvC,cAAAA,EACtC,CAEI,MAAO,CAAEhZ,OAAAA,EAAQgZ,cAAAA,EAEzB,ECrMA,IAAM0vC,GAAkB,SAACvhD,EAAenH,EAAQ2T,EAAQqF,GACpD,IAAMD,EAAWo6B,GAAoBhsC,EAAenH,EAAQgZ,GAG5D,ODyMJ,SAAwB7R,EAAenH,EAAQ2T,EAAQqF,GACnD,OAAO0sC,GAAiB1lD,GAClBmnD,GAAiChgD,EAAenH,EAAQ2T,EAAQqF,GAChE,CAAEhZ,OAAAA,EAAQgZ,cAAAA,EACpB,CC7MW2vC,CAAexhD,EAFtBnH,EAAS+Y,EAAS/Y,OAE2B2T,EAD7CqF,EAAgBD,EAASC,cAE7B,ECXM4vC,GAAuB,CAAErjD,QAAS,MAClCsjD,GAA2B,CAAEtjD,SAAS,GCF5C,IAAMujD,GAAqB,IAAItlC,Q,kCCoBzBulC,GAAehqD,OAAOQ,KAAK0F,GAC3B+jD,GAAcD,GAAa5oD,OAC3B8oD,GAAoB,CACtB,iBACA,oBACA,SACA,sBACA,gBACA,uBACA,2BAEEC,GAAkBhmD,EAAa/C,OAK/BgpD,GAAa,WACf,SAAAA,EAAAljD,GAAiG,IAAA6a,EAAA,KAAnF1Z,EAAMnB,EAANmB,OAAQ/D,EAAK4C,EAAL5C,MAAOiE,EAAerB,EAAfqB,gBAAiBC,EAAmBtB,EAAnBsB,oBAAqBL,EAAWjB,EAAXiB,YAAgBqJ,EAAOrQ,UAAAC,OAAA,QAAAY,IAAAb,UAAA,GAAAA,UAAA,GAAG,CAAC,EAACuZ,GAAA,KAAA0vC,GAK3F1tC,KAAKlW,QAAU,KAIfkW,KAAKxF,SAAW,IAAIhM,IAIpBwR,KAAKhY,eAAgB,EACrBgY,KAAKrY,uBAAwB,EAQ7BqY,KAAKsmB,mBAAqB,KAM1BtmB,KAAK3F,OAAS,IAAI1M,IAIlBqS,KAAKlV,SAAW,CAAC,EAKjBkV,KAAK2tC,mBAAqB,IAAIhgD,IAM9BqS,KAAK4tC,iBAAmB,CAAC,EAIzB5tC,KAAKgjB,OAAS,CAAC,EAMfhjB,KAAK6tC,uBAAyB,CAAC,EAC/B7tC,KAAK8tC,aAAe,kBAAMzoC,EAAKge,OAAO,SAAUhe,EAAKxQ,aAAa,EAClEmL,KAAK5T,OAAS,WACLiZ,EAAKvb,UAEVub,EAAK0oC,eACL1oC,EAAK2oC,eAAe3oC,EAAKvb,QAASub,EAAK/J,YAAa+J,EAAKzd,MAAMoN,MAAOqQ,EAAKpK,YAC/E,EACA+E,KAAKg8B,eAAiB,kBAAMh4B,GAAK5X,OAAOiZ,EAAKjZ,QAAQ,GAAO,EAAK,EACjE,IAAQyI,EAA8BpJ,EAA9BoJ,aAAcyG,EAAgB7P,EAAhB6P,YACtB0E,KAAKnL,aAAeA,EACpBmL,KAAKiuC,YAAUljD,EAAAA,EAAAA,GAAA,GAAQ8J,GACvBmL,KAAKkuC,cAAgBtmD,EAAMU,SAAOyC,EAAAA,EAAAA,GAAA,GAAQ8J,GAAiB,CAAC,EAC5DmL,KAAK1E,YAAcA,EACnB0E,KAAKrU,OAASA,EACdqU,KAAKpY,MAAQA,EACboY,KAAKnU,gBAAkBA,EACvBmU,KAAKi3B,MAAQtrC,EAASA,EAAOsrC,MAAQ,EAAI,EACzCj3B,KAAKlU,oBAAsBA,EAC3BkU,KAAKlL,QAAUA,EACfkL,KAAKrY,sBAAwBA,EAAsBC,GACnDoY,KAAKhY,cAAgBA,EAAcJ,GAC/BoY,KAAKhY,gBACLgY,KAAK6mB,gBAAkB,IAAIr4B,KAE/BwR,KAAK+oB,uBAAyB9gC,QAAQ0D,GAAUA,EAAO7B,SAWvD,IAAAqkD,EAA+CnuC,KAAKvE,4BAA4B7T,EAAO,CAAC,GAAhFi+B,EAAUsoB,EAAVtoB,WAAeuoB,EAAmBx2C,GAAAu2C,EAAAn1C,IAC1C,IAAK,IAAM5V,KAAOgrD,EAAqB,CACnC,IAAM/qD,EAAQ+qD,EAAoBhrD,QACRkC,IAAtBuP,EAAazR,IAAsBuL,EAActL,KACjDA,EAAM0K,IAAI8G,EAAazR,IAAM,GACzB8+B,GAAwB2D,IACxBA,EAAWpiB,IAAIrgB,GAG3B,CACJ,CA8WC,OA7WDib,GAAAqvC,EAAA,EAAAtqD,IAAA,8BAAAC,MAOA,SAA4BgrD,EAAQC,GAChC,MAAO,CAAC,CACZ,GAAC,CAAAlrD,IAAA,QAAAC,MACD,SAAM2J,GAAU,IAAAwY,EAAA,KACZxF,KAAKlW,QAAUkD,EACfqgD,GAAmBt/C,IAAIf,EAAUgT,MAC7BA,KAAK/E,YACL+E,KAAK/E,WAAWhO,MAAMD,GAEtBgT,KAAKrU,QAAUqU,KAAKhY,gBAAkBgY,KAAKrY,wBAC3CqY,KAAKuuC,sBAAwBvuC,KAAKrU,OAAO6iD,gBAAgBxuC,OAE7DA,KAAK3F,OAAOzV,SAAQ,SAACvB,EAAOD,GAAG,OAAKoiB,EAAKipC,kBAAkBrrD,EAAKC,EAAM,IACjE+pD,GAAyBtjD,SC1JtC,WAEI,GADAsjD,GAAyBtjD,SAAU,EAC9BtD,EAEL,GAAI8F,OAAOoiD,WAAY,CACnB,IAAMC,EAAmBriD,OAAOoiD,WAAW,4BACrCE,EAA8B,WAAH,OAAUzB,GAAqBrjD,QAAU6kD,EAAiBppC,OAAO,EAClGopC,EAAiBE,YAAYD,GAC7BA,GACJ,MAEIzB,GAAqBrjD,SAAU,CAEvC,CD8IYglD,GAEJ9uC,KAAKsmB,mBAC4B,UAA7BtmB,KAAKlU,sBAE8B,WAA7BkU,KAAKlU,qBAEDqhD,GAAqBrjD,SAI/BkW,KAAKrU,QACLqU,KAAKrU,OAAO6O,SAASiJ,IAAIzD,MAC7BA,KAAK7T,OAAO6T,KAAKpY,MAAOoY,KAAKnU,gBACjC,GAAC,CAAAzI,IAAA,UAAAC,MACD,WAQI,IAAK,IAAMD,KAPXiqD,GAAAA,OAA0BrtC,KAAKlW,SAC/BkW,KAAK/E,YAAc+E,KAAK/E,WAAW/N,UACnCkX,GAAWjY,OAAO6T,KAAK8tC,cACvB1pC,GAAWhY,OAAO4T,KAAK5T,QACvB4T,KAAK2tC,mBAAmB/oD,SAAQ,SAAC2hC,GAAM,OAAKA,GAAQ,IACpDvmB,KAAKuuC,uBAAyBvuC,KAAKuuC,wBACnCvuC,KAAKrU,QAAUqU,KAAKrU,OAAO6O,SAASqJ,OAAO7D,MACzBA,KAAKgjB,OACnBhjB,KAAKgjB,OAAO5/B,GAAK4gC,QAErB,IAAK,IAAM5gC,KAAO4c,KAAKlV,SACnBkV,KAAKlV,SAAS1H,GAAK8J,UAEvB8S,KAAKlW,QAAU,IACnB,GAAC,CAAA1G,IAAA,oBAAAC,MACD,SAAkBD,EAAKC,GAAO,IAAA+gC,EAAA,KACpB2qB,EAAmBxgD,EAAeT,IAAI1K,GACtC4rD,EAAiB3rD,EAAMsgC,GAAG,UAAU,SAACsrB,GACvC7qB,EAAKvvB,aAAazR,GAAO6rD,EACzB7qB,EAAKx8B,MAAMu0B,UACPnY,GAAK7X,OAAOi4B,EAAK0pB,cAAc,GAAO,GACtCiB,GAAoB3qB,EAAKnpB,aACzBmpB,EAAKnpB,WAAW2jC,kBAAmB,EAE3C,IACMsQ,EAAwB7rD,EAAMsgC,GAAG,gBAAiB3jB,KAAKg8B,gBAC7Dh8B,KAAK2tC,mBAAmB5/C,IAAI3K,GAAK,WAC7B4rD,IACAE,GACJ,GACJ,GAAC,CAAA9rD,IAAA,mBAAAC,MACD,SAAiB8rD,GAIb,OAAKnvC,KAAKlW,SACLkW,KAAKovC,0BACNpvC,KAAKxQ,OAAS2/C,EAAM3/C,KAGjBwQ,KAAKovC,yBAAyBpvC,KAAKlW,QAASqlD,EAAMrlD,SAF9C,CAGf,GAAC,CAAA1G,IAAA,eAAAC,MACD,SAAA+J,EAA6CR,EAAUnC,EAAmBe,EAAcmB,GAepF,IAf8G,IAC1G0iD,EACAjkD,EAF0GwoC,EAAA,KAAtF0b,GAALliD,EAARoN,SAA0B5C,GAAAxK,EAAAmiD,KAe5B/qD,EAAI,EAAGA,EAAI+oD,GAAa/oD,IAAK,CAClC,IAAMuD,EAAOulD,GAAa9oD,GAC1BgrD,EAA2GhmD,EAAmBzB,GAAtH2B,EAAS8lD,EAAT9lD,UAAoB+lD,EAAkBD,EAA3BttC,QAA6Bo8B,EAAckR,EAAdlR,eAA+BoR,EAAsBF,EAArCpkD,cAC5DkzC,IACA+Q,EAA4B/Q,GAC5B50C,EAAU4lD,MACLtvC,KAAKlV,SAAS/C,IAAS0nD,IACxBzvC,KAAKlV,SAAS/C,GAAQ,IAAI0nD,EAAmBzvC,OAE7C0vC,IACAtkD,EAAgBskD,GAG5B,CACA,IAAK1vC,KAAK/E,YAAco0C,EAA2B,CAC/CrvC,KAAK/E,WAAa,IAAIo0C,EAA0B7jD,EAAcwU,KAAKnL,aAAcmL,KAAKrU,QAAUqU,KAAKrU,OAAOsP,YAC5G,IAAQ3P,EAAuEgkD,EAAvEhkD,SAAU/B,EAA6D+lD,EAA7D/lD,OAAQN,EAAqDqmD,EAArDrmD,KAAMipC,EAA+Cod,EAA/Cpd,gBAAiBmR,EAA8BiM,EAA9BjM,aAAc1B,EAAgB2N,EAAhB3N,WAC/D3hC,KAAK/E,WAAWi+B,WAAW,CACvB5tC,SAAAA,EACA/B,OAAAA,EACAy5C,oBAAqB/6C,QAAQgB,IACxBipC,GAAmBnrC,EAAYmrC,GACpCxmC,cAAesU,KACfg8B,eAAgB,kBAAMpI,EAAKoI,gBAAgB,EAQ3CwL,cAAiC,kBAAXj+C,EAAsBA,EAAS,OACrDo+C,uBAAwBh7C,EACxB02C,aAAAA,EACA1B,WAAAA,GAER,CACA,OAAOv2C,CACX,GAAC,CAAAhI,IAAA,iBAAAC,MACD,WACI,IAAK,IAAMD,KAAO4c,KAAKlV,SAAU,CAC7B,IAAM6kD,EAAU3vC,KAAKlV,SAAS1H,GAC1BusD,EAAQvtC,UACRutC,EAAQxjD,OAAO6T,KAAKpY,MAAOoY,KAAKtE,YAGhCi0C,EAAQ1iD,QACR0iD,EAAQvtC,WAAY,EAE5B,CACJ,GAAC,CAAAhf,IAAA,eAAAC,MACD,WACI2c,KAAK4vC,MAAM5vC,KAAK1E,YAAa0E,KAAKnL,aAAcmL,KAAKlL,QAASkL,KAAKpY,MACvE,GACA,CAAAxE,IAAA,qBAAAC,MAKA,WACI,OAAO2c,KAAKlW,QACNkW,KAAK6vC,2BAA2B7vC,KAAKlW,QAASkW,KAAKpY,OACnDsmC,IACV,GAAC,CAAA9qC,IAAA,iBAAAC,MACD,SAAeD,GACX,OAAO4c,KAAKnL,aAAazR,EAC7B,GAAC,CAAAA,IAAA,iBAAAC,MACD,SAAeD,EAAKC,GAChB2c,KAAKnL,aAAazR,GAAOC,CAC7B,GACA,CAAAD,IAAA,uBAAAC,MAOA,SAAqBkB,GAA0B,IAAlBurD,IAASrrD,UAAAC,OAAA,QAAAY,IAAAb,UAAA,KAAAA,UAAA,GAClC,OAAOub,KAAK+vC,iCAAiCxrD,EAAQyb,KAAKpY,MAAOkoD,EACrE,GACA,CAAA1sD,IAAA,SAAAC,MAIA,SAAOuE,EAAOiE,IACNjE,EAAMmN,mBAAqBiL,KAAKpY,MAAMmN,oBACtCiL,KAAKg8B,iBAETh8B,KAAKtE,UAAYsE,KAAKpY,MACtBoY,KAAKpY,MAAQA,EACboY,KAAKwqB,oBAAsBxqB,KAAKnU,gBAChCmU,KAAKnU,gBAAkBA,EAIvB,IAAK,IAAIrH,EAAI,EAAGA,EAAIgpD,GAAkB9oD,OAAQF,IAAK,CAC/C,IAAMpB,EAAMoqD,GAAkBhpD,GAC1Bwb,KAAK6tC,uBAAuBzqD,KAC5B4c,KAAK6tC,uBAAuBzqD,YACrB4c,KAAK6tC,uBAAuBzqD,IAEvC,IAAM4sD,EAAWpoD,EAAM,KAAOxE,GAC1B4sD,IACAhwC,KAAK6tC,uBAAuBzqD,GAAO4c,KAAK2jB,GAAGvgC,EAAK4sD,GAExD,CACAhwC,KAAK4tC,iBE5Ub,SAAqC7yC,EAAS+P,EAAMC,GAChD,IAAQ8a,EAAe/a,EAAf+a,WACR,IAAK,IAAMziC,KAAO0nB,EAAM,CACpB,IAAMmlC,EAAYnlC,EAAK1nB,GACjB8sD,EAAYnlC,EAAK3nB,GACvB,GAAIuL,EAAcshD,GAKdl1C,EAAQoqB,SAAS/hC,EAAK6sD,GAClB/tB,GAAwB2D,IACxBA,EAAWpiB,IAAIrgB,QAUlB,GAAIuL,EAAcuhD,GAKnBn1C,EAAQoqB,SAAS/hC,EAAKshC,GAAYurB,EAAW,CAAEnxB,MAAO/jB,KAClDmnB,GAAwB2D,IACxBA,EAAWU,OAAOnjC,QAGrB,GAAI8sD,IAAcD,EAMnB,GAAIl1C,EAAQkqB,SAAS7hC,GAAM,CACvB,IAAM+sD,EAAgBp1C,EAAQmqB,SAAS9hC,IAEtC+sD,EAAc1sB,aAAe0sB,EAAcpiD,IAAIkiD,EACpD,KACK,CACD,IAAMhB,EAAcl0C,EAAQq1C,eAAehtD,GAC3C2X,EAAQoqB,SAAS/hC,EAAKshC,QAA4Bp/B,IAAhB2pD,EAA4BA,EAAcgB,EAAW,CAAEnxB,MAAO/jB,IACpG,CAER,CAEA,IAAK,IAAM3X,KAAO2nB,OACIzlB,IAAdwlB,EAAK1nB,IACL2X,EAAQs1C,YAAYjtD,GAE5B,OAAO0nB,CACX,CFqRgCwlC,CAA4BtwC,KAAMA,KAAKvE,4BAA4B7T,EAAOoY,KAAKtE,WAAYsE,KAAK4tC,kBACpH5tC,KAAKuwC,wBACLvwC,KAAKuwC,wBAEb,GAAC,CAAAntD,IAAA,WAAAC,MACD,WACI,OAAO2c,KAAKpY,KAChB,GACA,CAAAxE,IAAA,aAAAC,MAGA,SAAW0E,GACP,OAAOiY,KAAKpY,MAAMM,SAAW8X,KAAKpY,MAAMM,SAASH,QAAQzC,CAC7D,GACA,CAAAlC,IAAA,uBAAAC,MAGA,WACI,OAAO2c,KAAKpY,MAAM4V,UACtB,GAAC,CAAApa,IAAA,wBAAAC,MACD,WACI,OAAO2c,KAAKpY,MAAM1B,kBACtB,GAAC,CAAA9C,IAAA,wBAAAC,MACD,WACI,OAAO2c,KAAKhY,cACNgY,KACAA,KAAKrU,OACDqU,KAAKrU,OAAO6kD,6BACZlrD,CACd,GAAC,CAAAlC,IAAA,oBAAAC,MACD,WACI,GAD2BoB,UAAAC,OAAA,QAAAY,IAAAb,UAAA,IAAAA,UAAA,GAEvB,OAAOub,KAAKrU,OAASqU,KAAKrU,OAAO48B,yBAAsBjjC,EAE3D,IAAK0a,KAAKrY,sBAAuB,CAC7B,IAAMU,EAAU2X,KAAKrU,QACfqU,KAAKrU,OAAO48B,qBACZ,CAAC,EAIP,YAH2BjjC,IAAvB0a,KAAKpY,MAAMU,UACXD,EAAQC,QAAU0X,KAAKpY,MAAMU,SAE1BD,CACX,CAEA,IADA,IAAMA,EAAU,CAAC,EACR7D,EAAI,EAAGA,EAAIipD,GAAiBjpD,IAAK,CACtC,IAAMuD,EAAON,EAAajD,GACpBoE,EAAOoX,KAAKpY,MAAMG,IACpBb,EAAe0B,KAAkB,IAATA,KACxBP,EAAQN,GAAQa,EAExB,CACA,OAAOP,CACX,GACA,CAAAjF,IAAA,kBAAAC,MAGA,SAAgBuiB,GACZ,IAAM6qC,EAAqBzwC,KAAKwwC,wBAChC,GAAIC,EAGA,OAFAA,EAAmB5pB,iBACf4pB,EAAmB5pB,gBAAgBpjB,IAAImC,GACpC,kBAAM6qC,EAAmB5pB,gBAAgBhjB,OAAO+B,EAAM,CAErE,GACA,CAAAxiB,IAAA,WAAAC,MAGA,SAASD,EAAKC,GAENA,IAAU2c,KAAK3F,OAAOzM,IAAIxK,KAC1B4c,KAAKqwC,YAAYjtD,GACjB4c,KAAKyuC,kBAAkBrrD,EAAKC,IAEhC2c,KAAK3F,OAAOtM,IAAI3K,EAAKC,GACrB2c,KAAKnL,aAAazR,GAAOC,EAAMuK,KACnC,GACA,CAAAxK,IAAA,cAAAC,MAGA,SAAYD,GACR4c,KAAK3F,OAAOwJ,OAAOzgB,GACnB,IAAMwgC,EAAc5jB,KAAK2tC,mBAAmB//C,IAAIxK,GAC5CwgC,IACAA,IACA5jB,KAAK2tC,mBAAmB9pC,OAAOzgB,WAE5B4c,KAAKnL,aAAazR,GACzB4c,KAAK0wC,2BAA2BttD,EAAK4c,KAAK1E,YAC9C,GACA,CAAAlY,IAAA,WAAAC,MAGA,SAASD,GACL,OAAO4c,KAAK3F,OAAOvM,IAAI1K,EAC3B,GAAC,CAAAA,IAAA,WAAAC,MACD,SAASD,EAAKy8B,GACV,GAAI7f,KAAKpY,MAAMyS,QAAU2F,KAAKpY,MAAMyS,OAAOjX,GACvC,OAAO4c,KAAKpY,MAAMyS,OAAOjX,GAE7B,IAAIC,EAAQ2c,KAAK3F,OAAOzM,IAAIxK,GAK5B,YAJckC,IAAVjC,QAAwCiC,IAAjBu6B,IACvBx8B,EAAQqhC,GAAY7E,EAAc,CAAEf,MAAO9e,OAC3CA,KAAKmlB,SAAS/hC,EAAKC,IAEhBA,CACX,GACA,CAAAD,IAAA,YAAAC,MAKA,SAAUD,GACN,YAAkCkC,IAA3B0a,KAAKnL,aAAazR,IAAuB4c,KAAKlW,QAE/CkW,KAAK2wC,sBAAsB3wC,KAAKlW,QAAS1G,EAAK4c,KAAKlL,SADnDkL,KAAKnL,aAAazR,EAE5B,GACA,CAAAA,IAAA,gBAAAC,MAIA,SAAcD,EAAKC,GACf2c,KAAKiuC,WAAW7qD,GAAOC,CAC3B,GACA,CAAAD,IAAA,gBAAAC,MAIA,SAAcD,GACV,IAAIuU,EACIrP,EAAY0X,KAAKpY,MAAjBU,QACFsoD,EAAsC,kBAAZtoD,GAA2C,kBAAZA,EACD,QAAvDqP,EAAKmE,GAAwBkE,KAAKpY,MAAOU,UAA6B,IAAPqP,OAAgB,EAASA,EAAGvU,QAC5FkC,EAIN,GAAIgD,QAAgChD,IAArBsrD,EACX,OAAOA,EAMX,IAAMrsD,EAASyb,KAAK6wC,uBAAuB7wC,KAAKpY,MAAOxE,GACvD,YAAekC,IAAXf,GAAyBoK,EAAcpK,QAMRe,IAA5B0a,KAAKkuC,cAAc9qD,SACDkC,IAArBsrD,OACEtrD,EACA0a,KAAKiuC,WAAW7qD,GARXmB,CASf,GAAC,CAAAnB,IAAA,KAAAC,MACD,SAAG6c,EAAWoD,GAIV,OAHKtD,KAAKgjB,OAAO9iB,KACbF,KAAKgjB,OAAO9iB,GAAa,IAAIsiB,IAE1BxiB,KAAKgjB,OAAO9iB,GAAWuD,IAAIH,EACtC,GAAC,CAAAlgB,IAAA,SAAAC,MACD,SAAO6c,GACH,GAAIF,KAAKgjB,OAAO9iB,GAAY,SAAA4wC,EAAAzvC,EAAA5c,UAAAC,OADX47C,EAAI,IAAAl5C,MAAAia,EAAA,EAAAA,EAAA,KAAA0vC,EAAA,EAAAA,EAAA1vC,EAAA0vC,IAAJzQ,EAAIyQ,EAAA,GAAAtsD,UAAAssD,IAEjBD,EAAA9wC,KAAKgjB,OAAO9iB,IAAWmjB,OAAMh/B,MAAAysD,EAAIxQ,EACrC,CACJ,KAACoN,CAAA,CAldc,G,kCGhCbsD,GAAgB,SAAAC,GAAApyC,GAAAmyC,EAAAC,GAAA,IAAA9rC,EAAA7F,GAAA0xC,GAAA,SAAAA,IAAA,OAAAhzC,GAAA,KAAAgzC,GAAA7rC,EAAA9gB,MAAA,KAAAI,UAAA,CAwCjB,OAxCiB4Z,GAAA2yC,EAAA,EAAA5tD,IAAA,2BAAAC,MAClB,SAAyB6d,EAAGC,GAMxB,OAAsC,EAA/BD,EAAEgwC,wBAAwB/vC,GAAS,GAAK,CACnD,GAAC,CAAA/d,IAAA,yBAAAC,MACD,SAAuBuE,EAAOxE,GAC1B,OAAOwE,EAAMoN,MAAQpN,EAAMoN,MAAM5R,QAAOkC,CAC5C,GAAC,CAAAlC,IAAA,6BAAAC,MACD,SAA2BD,EAAGoH,GAAmB,IAAfyK,EAAIzK,EAAJyK,KAAMD,EAAKxK,EAALwK,aAC7BC,EAAK7R,UACL4R,EAAM5R,EACjB,GAAC,CAAAA,IAAA,mCAAAC,MACD,SAAA+J,EAAAk6B,EAAgGllB,GAAW,IAAxE5E,EAAUpQ,EAAVoQ,WAAYD,EAAanQ,EAAbmQ,cAAkBhZ,EAAMqT,GAAAxK,EAAA4L,IAAMvC,EAAe6wB,EAAf7wB,gBACrEyB,ElDqFZ,SAAmB3T,EAAQiZ,EAAY9R,GACnC,IAAMwM,EAAS,CAAC,EAChB,IAAK,IAAM9U,KAAOmB,EAAQ,CACtB,IAAM4sD,EAAmB5rB,GAAwBniC,EAAKoa,GACtD,QAAyBlY,IAArB6rD,EACAj5C,EAAO9U,GAAO+tD,MAEb,CACD,IAAM9tD,EAAQqI,EAAcw5B,SAAS9hC,GACjCC,IACA6U,EAAO9U,GAAOC,EAAMuK,MAE5B,CACJ,CACA,OAAOsK,CACX,CkDpGqBk5C,CAAU7sD,EAAQiZ,GAAc,CAAC,EAAGwC,MAYjD,GARIvJ,IACI8G,IACAA,EAAgB9G,EAAgB8G,IAChChZ,IACAA,EAASkS,EAAgBlS,IACzB2T,IACAA,EAASzB,EAAgByB,KAE7BkK,EAAW,ElDoBvB,SAAiC1W,EAAenH,EAAQ2T,GACpD,IAAIP,EAAIqZ,EACFqgC,EAAe/tD,OAAOQ,KAAKS,GAAQN,QAAO,SAACb,GAAG,OAAMsI,EAAcu5B,SAAS7hC,EAAI,IAC/EkuD,EAAeD,EAAa3sD,OAClC,GAAK4sD,EAEL,IAAK,IAAI9sD,EAAI,EAAGA,EAAI8sD,EAAc9sD,IAAK,CACnC,IAAMpB,EAAMiuD,EAAa7sD,GACnB+sD,EAAchtD,EAAOnB,GACvBC,EAAQ,KAKR+D,MAAMC,QAAQkqD,KACdluD,EAAQkuD,EAAY,IAOV,OAAVluD,IACAA,EAAoG,QAA3F2tB,EAA4B,QAAtBrZ,EAAKO,EAAO9U,UAAyB,IAAPuU,EAAgBA,EAAKjM,EAAc8lD,UAAUpuD,UAAyB,IAAP4tB,EAAgBA,EAAKzsB,EAAOnB,SAM9HkC,IAAVjC,GAAiC,OAAVA,IAEN,kBAAVA,IACN8+B,GAAkB9+B,IAAU++B,GAAkB/+B,IAE/CA,EAAQ2M,WAAW3M,IAEb0hC,GAAc1hC,IAAU0tB,GAAQ3iB,KAAKmjD,KAC3CluD,EAAQ6tB,GAAkB9tB,EAAKmuD,IAEnC7lD,EAAcy5B,SAAS/hC,EAAKshC,GAAYrhC,EAAO,CAAEy7B,MAAOpzB,UACpCpG,IAAhB4S,EAAO9U,KACP8U,EAAO9U,GAAOC,GAEJ,OAAVA,GACAqI,EAAc+lD,cAAcruD,EAAKC,GACzC,CACJ,CkDjEYquD,CAAwB1xC,KAAMzb,EAAQ2T,GACtC,IAAMiZ,EAAS87B,GAAgBjtC,KAAMzb,EAAQ2T,EAAQqF,GACrDA,EAAgB4T,EAAO5T,cACvBhZ,EAAS4sB,EAAO5sB,MACpB,CACA,OAAAwG,EAAAA,EAAAA,GAAA,CACIyS,WAAAA,EACAD,cAAAA,GACGhZ,EAEX,KAACysD,CAAA,CAxCiB,CAAStD,ICQ9B,IACKiE,GAAiB,SAAAC,GAAA/yC,GAAA8yC,EAAAC,GAAA,IAAAzsC,EAAA7F,GAAAqyC,GAAA,SAAAA,IAAA,OAAA3zC,GAAA,KAAA2zC,GAAAxsC,EAAA9gB,MAAA,KAAAI,UAAA,CAsClB,OAtCkB4Z,GAAAszC,EAAA,EAAAvuD,IAAA,wBAAAC,MACnB,SAAsB2J,EAAU5J,GAC5B,GAAImL,EAAeT,IAAI1K,GAAM,CACzB,IAAMyuD,EAAcnxB,GAAoBt9B,GACxC,OAAOyuD,GAAcA,EAAY1hD,SAAe,CACpD,CAEI,IAVc4K,EAUR+2C,GAVQ/2C,EAUyB/N,EATxCV,OAAOkrC,iBAAiBz8B,IAUjB1X,GAASgM,EAAkBjM,GAC3B0uD,EAAcra,iBAAiBr0C,GAC/B0uD,EAAc1uD,KAAS,EAC7B,MAAwB,kBAAVC,EAAqBA,EAAM0S,OAAS1S,CAE1D,GAAC,CAAAD,IAAA,6BAAAC,MACD,SAA2B2J,EAAQxC,GAC/B,OAAOklC,GAAmB1iC,EAD2BxC,EAAlBtE,mBAEvC,GAAC,CAAA9C,IAAA,QAAAC,MACD,SAAMiY,EAAazG,EAAcC,EAASlN,GACtC+M,GAAgB2G,EAAazG,EAAcC,EAASlN,EAAMmN,kBAC9D,GAAC,CAAA3R,IAAA,8BAAAC,MACD,SAA4BuE,EAAO8T,GAC/B,OAAOD,GAA4B7T,EAAO8T,EAC9C,GAAC,CAAAtY,IAAA,yBAAAC,MACD,WAAyB,IAAAgiB,EAAA,KACjBrF,KAAK+xC,oBACL/xC,KAAK+xC,2BACE/xC,KAAK+xC,mBAEhB,IAAQv3C,EAAawF,KAAKpY,MAAlB4S,SACJ7L,EAAc6L,KACdwF,KAAK+xC,kBAAoBv3C,EAASmpB,GAAG,UAAU,SAACxJ,GACxC9U,EAAKvb,UACLub,EAAKvb,QAAQkoD,YAAc,GAAHtqD,OAAMyyB,GACtC,IAER,GAAC,CAAA/2B,IAAA,iBAAAC,MACD,SAAe2J,EAAUsO,EAAaN,EAAWC,GAC7CH,GAAW9N,EAAUsO,EAAaN,EAAWC,EACjD,KAAC02C,CAAA,CAtCkB,CAASX,ICZjB,SAASiB,KActB,OAZEA,GADqB,qBAAZxyC,SAA2BA,QAAQ7R,IACrC6R,QAAQ7R,IAAI+Q,OAEZ,SAAcpa,EAAQ2tD,EAAUC,GACrC,IAAIC,ECLK,SAAwBxuD,EAAQsuD,GAC7C,MAAQ5uD,OAAOyC,UAAUkB,eAAezB,KAAK5B,EAAQsuD,IAEpC,QADftuD,EAAS,GAAeA,MAG1B,OAAOA,CACT,CDDiB,CAAcW,EAAQ2tD,GACjC,GAAKE,EAAL,CACA,IAAIC,EAAO/uD,OAAOa,yBAAyBiuD,EAAMF,GACjD,OAAIG,EAAKzkD,IACAykD,EAAKzkD,IAAIpI,KAAKf,UAAUC,OAAS,EAAIH,EAAS4tD,GAEhDE,EAAKhvD,KALK,CAMnB,EAEK4uD,GAAK5tD,MAAM2b,KAAMvb,UAC1B,CEPkD,IAE5C6tD,GAAgB,SAAAV,GAAA/yC,GAAAyzC,EAAAV,GAAA,IAAAzsC,EAAA7F,GAAAgzC,GAClB,SAAAA,IAAc,IAAAjtC,EAEY,OAFZrH,GAAA,KAAAs0C,IACVjtC,EAAAF,EAAA9gB,MAAA,KAASI,YACJ+T,UAAW,EAAM6M,CAC1B,CA2BC,OA3BAhH,GAAAi0C,EAAA,EAAAlvD,IAAA,yBAAAC,MACD,SAAuBuE,EAAOxE,GAC1B,OAAOwE,EAAMxE,EACjB,GAAC,CAAAA,IAAA,wBAAAC,MACD,SAAsB2J,EAAU5J,GAC5B,GAAImL,EAAeT,IAAI1K,GAAM,CACzB,IAAMyuD,EAAcnxB,GAAoBt9B,GACxC,OAAOyuD,GAAcA,EAAY1hD,SAAe,CACpD,CAEA,OADA/M,EAAOgY,GAAoBtN,IAAI1K,GAA0BA,EAAnBuX,GAAYvX,GAC3C4J,EAASulD,aAAanvD,EACjC,GAAC,CAAAA,IAAA,6BAAAC,MACD,WACI,OAAO6qC,IACX,GAAC,CAAA9qC,IAAA,8BAAAC,MACD,SAA4BuE,EAAO8T,GAC/B,OAAOD,GAA4B7T,EAAO8T,EAC9C,GAAC,CAAAtY,IAAA,QAAAC,MACD,SAAMiY,EAAazG,EAAcC,EAASlN,GACtC2Q,GAAc+C,EAAazG,EAAcC,EAASkL,KAAKxH,SAAU5Q,EAAMmN,kBAC3E,GAAC,CAAA3R,IAAA,iBAAAC,MACD,SAAe2J,EAAUsO,EAAaN,EAAWC,GAC7CI,GAAUrO,EAAUsO,EAAaN,EAAWC,EAChD,GAAC,CAAA7X,IAAA,QAAAC,MACD,SAAM2J,GACFgT,KAAKxH,SAAWA,GAASxL,EAAS8Q,SAClCm0C,GAAAhzC,GAAAqzC,EAAAvsD,WAAA,cAAAP,KAAA,KAAYwH,EAChB,KAACslD,CAAA,CA/BiB,CAAStB,ICPzBwB,GAAyB,SAAC3nD,EAAWiK,GACvC,OAAO7G,EAAepD,GAChB,IAAIynD,GAAiBx9C,EAAS,CAAEY,4BAA4B,IAC5D,IAAIi8C,GAAkB78C,EAAS,CAAEY,4BAA4B,GACvE,ECLMnM,GAAS,CACXA,OAAQ,CACJ+0C,eAAgBsL,GAChBx+C,cAAAA,KCGFX,IAAiBM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAChB+6B,IACAvb,IACAthB,IACAM,IAQDkpD,GAAuBnlD,GAAkB,SAACzC,EAAW6R,GAAM,OChBjE,SAA+B7R,EAASL,EAAkCC,EAAmBC,GAAqB,IAAAgoD,EAAAloD,EAAtE0P,mBAAAA,OAAkB,IAAAw4C,GAAQA,EAC5DC,EAAa1kD,EAAepD,GAC5B6S,GACAK,GACN,OAAAhT,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACO4nD,GAAU,IACbloD,kBAAAA,EACAE,UAAWsP,GAAgBC,GAC3BxP,oBAAAA,EACAG,UAAAA,GAER,CDKsE+nD,CAAsB/nD,EAAW6R,EAAQjS,GAAmB+nD,GAAuB,G","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let time = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            time = holdTime;\n        }\n        else {\n            time = timestamp - startTime;\n        }\n        // Rebase on delay\n        time = Math.max(time - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            time = totalDuration;\n        }\n        let elapsed = time;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = time / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = time >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = time >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const finish = () => {\n        animationDriver && animationDriver.stop();\n        playState = \"finished\";\n        onComplete && onComplete();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(time);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            time = newTime;\n            if (holdTime !== null || !animationDriver) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime;\n            }\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = time;\n        },\n        stop: () => {\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n            animationDriver = undefined;\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        play: () => animation.play(),\n        pause: () => animation.pause(),\n        stop: () => {\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            time: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.5.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.5.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.5.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","String","Number","_typeof","iterator","constructor","prototype","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","_classCallCheck","Constructor","_defineProperties","descriptor","toPropertyKey","_createClass","protoProps","staticProps","_setPrototypeOf","o","setPrototypeOf","bind","__proto__","_inherits","subClass","superClass","create","_getPrototypeOf","getPrototypeOf","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","valueOf","result","Super","NewTarget","this","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_super","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","arr","arrayLikeToArray","iter","from","unsupportedIterableToArray","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","_slicedToArray","c","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","find","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isEasingArray","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","time","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","finish","play","then","reject","newTime","pause","sample","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","_options$duration","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","onfinish","getFinalKeyframe","currentTime","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","delayBy","setValue","createInstantAnimation","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","property","receiver","base","desc","SVGVisualElement","getAttribute","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}