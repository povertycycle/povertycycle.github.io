{"version":3,"file":"static/js/623.c27da44e.chunk.js","mappings":"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","sources":["../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n    isProcessing: false,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    frameData.isProcessing = true;\n    stepsOrder.forEach(processStep);\n    frameData.isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!frameData.isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../../frameloop/index.mjs';\nimport { frameData } from '../../../frameloop/data.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let time = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            time = holdTime;\n        }\n        else {\n            time = timestamp - startTime;\n        }\n        // Rebase on delay\n        time = Math.max(time - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            time = totalDuration;\n        }\n        let elapsed = time;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = time / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = time >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = time >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const finish = () => {\n        animationDriver && animationDriver.stop();\n        playState = \"finished\";\n        onComplete && onComplete();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    const play = () => {\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(time);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            time = newTime;\n            if (holdTime !== null || !animationDriver) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime;\n            }\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = time;\n        },\n        stop: () => {\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n            animationDriver = undefined;\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Create a new finished Promise every time we enter the\n     * finished state and resolve the old Promise. This is\n     * WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        play: () => animation.play(),\n        pause: () => animation.pause(),\n        stop: () => {\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            time: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.5.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { sync } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                /**\n                 * If the parent target isn't up-to-date, force it to update.\n                 * This is an unfortunate de-optimisation as it means any updating relative\n                 * projection will cause all the relative parents to recalculate back\n                 * up the tree.\n                 */\n                if (this.relativeParent.resolvedRelativeTargetAt !==\n                    frameData.timestamp) {\n                    this.relativeParent.resolveTargetDelta(true);\n                }\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    // keyframes: [0, animationTarget],÷\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.5.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.5.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_arrayLikeToArray","arr","len","length","i","arr2","Array","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","_slicedToArray","isArray","_i","Symbol","iterator","_s","_e","_x","_r","_arr","_n","_d","call","next","done","unsupportedIterableToArray","TypeError","_toConsumableArray","arrayLikeToArray","iter","from","_unsupportedIterableToArray","o","minLen","n","prototype","toString","slice","constructor","test","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","hasOwnProperty","isVariantLabel","v","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","animate","some","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","_classCallCheck","this","isMounted","_createClass","frameData","delta","timestamp","isProcessing","useDefaultElapsed","runNextFrame","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","c","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","find","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isEasingArray","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","absoluteTimes","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","types","decay","tween","animateValue","resolveFinishedPromise","currentFinishedPromise","animationDriver","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","updateFinishedPromise","Promise","resolve","mapNumbersToKeyframes","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","time","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","finish","play","then","reject","newTime","pause","sample","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","_options$duration","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","onfinish","getFinalKeyframe","currentTime","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","_v$slice$split","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZero","getZeroUnit","potentialUnitType","getValueTransition","animateMotionValue","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","delayBy","setValue","createInstantAnimation","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","isZeroValueString","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","numSubscriptions","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","subscription","on","unsubscribe","read","getSize","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","animationStart","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","resolvedRelativeTargetAt","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref4","_ref5","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","baseConfig","createDomMotionConfig"],"sourceRoot":""}